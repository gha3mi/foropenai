var tipuesearch = {"pages":[{"title":" ForOpenAI ","text":"ForOpenAI ForOpenAI : A community-maintained Fortran wrapper for the OpenAI API. How to use Prerequisites: On Ubuntu, you need to install the curl development headers. Use the following command: sudo apt install -y libcurl4-openssl-dev Clone the repository: You can clone the ForOpenAI repository from GitHub using the following command: git clone https://github.com/gha3mi/foropenai.git cd foropenai OpenAI API Key Configuration: Your Secret API key can be located by accessing the OpenAI User settings . For enhanced security and convenience, it is strongly recommended to configure the API key as an environment variable. On Ubuntu, use the following command, replacing \"your_api_key\" with your actual API key: shell\nexport OPENAI_API_KEY=\"your_api_key\" (Optional) If desired for organizational purposes, you can also establish an optional environment variable on Ubuntu: shell\nexport OPENAI_ORG=\"your_organization\" Alternatively, the OpenAI API key can be included in the foropenai.json configuration file. json\n{\n    \"base\": {\n        \"api_key\": \"OPENAI_API_KEY\",\n        \"organization\": \"\"\n    }\n} Use ChatGPT from the terminal: fpm run Example Create Chat Completion program test_ChatCompletion use foropenai , only : ChatCompletion implicit none type ( ChatCompletion ) :: chat call chat % set_base_data ( file_name = 'foropenai.json' ) call chat % set ( file_name = 'foropenai.json' ) call chat % init_messages ( n = 3 ) call chat % messages ( 1 )% set ( role = 'system' , content = 'You are a helpful assistant.' ) call chat % messages ( 2 )% set ( role = 'user' , content = 'Hello?' ) call chat % messages ( 3 )% set ( role = 'assistant' , content = '' ) call chat % print_user_message () call chat % create () call chat % print_assistant_response () call chat % usage % print () call chat % finalize () end program test_ChatCompletion Result: Ali: Hello?\nChatGPT: Hello! How can I assist you today? Transcription program test_Transcription use foropenai , only : Transcription implicit none type ( Transcription ) :: trs call trs % set_base_data ( file_name = 'foropenai.json' ) call trs % set ( file_name = 'foropenai.json' ) call trs % create ( file = 'test/audio.mp3' ) call trs % print_text () call trs % finalize () end program test_Transcription Result: text: FORTRAN stands for Formula Translation. Translation program test_Translation use foropenai , only : Translation implicit none type ( Translation ) :: trs call trs % set_base_data ( file_name = 'foropenai.json' ) call trs % set ( file_name = 'foropenai.json' ) call trs % create ( file = 'test/audio_de.mp3' ) call trs % print_assisstant_response () call trs % finalize () end program test_Translation Result: text: FORTRAN stands for Formula Translation. Image Generation program test_ImageGeneration use foropenai , only : ImageGeneration implicit none type ( ImageGeneration ) :: image call image % set_base_data ( file_name = 'foropenai.json' ) call image % set ( file_name = 'foropenai.json' ) call image % create ( prompt = 'a cat with a computer' ) call image % print_assistant_response () call image % finalize () end program test_ImageGeneration Result: fpm dependency If you want to use ForOpenAI as a dependency in your own fpm project,\nyou can easily include it by adding the following line to your fpm.toml file: [dependencies] foropenai = { git = \"https://github.com/gha3mi/foropenai.git\" } API documentation The most up-to-date API documentation for the master branch is available here .\nTo generate the API documentation for ForOpenAI using ford run the following\ncommand: ford ford.yml Contributing Contributions to ForOpenAI are welcome!\nIf you find any issues or would like to suggest improvements, please open an issue. Developer Info Seyed Ali Ghasemi","tags":"home","loc":"index.html"},{"title":"openai – ForOpenAI ","text":"type, public :: openai Inherited by type~~openai~~InheritedByGraph type~openai openai type~chatcompletion ChatCompletion type~chatcompletion->type~openai type~imagegeneration ImageGeneration type~imagegeneration->type~openai type~transcription Transcription type~transcription->type~openai type~translation Translation type~translation->type~openai Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables organization api_key file_name api_key_env organization_env Type-Bound Procedures deallocate_api_key deallocate_organization deallocate_file_name finalize load_api_key load_organization load_base_data print_api_key print_organization print_file_name set_file_name set_api_key set_organization set_api_key_env set_organization_env set_base_data Source Code openai Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' Type-Bound Procedures procedure, private :: deallocate_api_key private pure elemental subroutine deallocate_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, private :: deallocate_organization private pure elemental subroutine deallocate_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, private :: deallocate_file_name private pure elemental subroutine deallocate_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: finalize => deallocate_openai private pure elemental subroutine deallocate_openai (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, private :: load_api_key private impure elemental subroutine load_api_key (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name procedure, private :: load_organization private impure elemental subroutine load_organization (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name procedure, public,  :: load_base_data private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_api_key private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_organization private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_file_name private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: set_file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, private :: set_api_key private pure elemental subroutine set_api_key (this, api_key) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: api_key procedure, private :: set_organization private pure elemental subroutine set_organization (this, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: organization procedure, private :: set_api_key_env private impure elemental subroutine set_api_key_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status procedure, private :: set_organization_env private impure elemental subroutine set_organization_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status procedure, public,  :: set_base_data private impure elemental subroutine set_base_data (this, file_name, api_key, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: api_key character(len=*), intent(in), optional :: organization Source Code type openai character ( len = :), allocatable :: organization character ( len = :), allocatable :: api_key character ( len = :), allocatable :: file_name character ( len = 14 ) :: api_key_env = 'OPENAI_API_KEY' character ( len = 10 ) :: organization_env = 'OPENAI_ORG' contains procedure , private :: deallocate_api_key procedure , private :: deallocate_organization procedure , private :: deallocate_file_name procedure :: finalize => deallocate_openai procedure , private :: load_api_key procedure , private :: load_organization procedure :: load_base_data procedure :: print_api_key procedure :: print_organization procedure :: print_file_name procedure :: set_file_name procedure , private :: set_api_key procedure , private :: set_organization procedure , private :: set_api_key_env procedure , private :: set_organization_env procedure :: set_base_data end type openai","tags":"","loc":"type/openai.html"},{"title":"Transcription – ForOpenAI ","text":"type, public, extends( openai ) :: Transcription Inherits type~~transcription~~InheritsGraph type~transcription Transcription type~openai openai type~transcription->type~openai Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables organization api_key file_name api_key_env organization_env url model language prompt file text response_format temperature Type-Bound Procedures load_base_data print_api_key print_organization print_file_name set_file_name set_base_data create deallocate_url deallocate_model deallocate_language deallocate_prompt deallocate_file deallocate_text finalize load load_url load_model load_temperature load_language load_response_format print_model print_temperature print_language print_response_format print_prompt print_text set_text set_prompt set_url set_model set_temperature set_language set_response_format set_file set Source Code Transcription Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=:), public, allocatable :: model character(len=:), public, allocatable :: language character(len=:), public, allocatable :: prompt character(len=:), public, allocatable :: file character(len=:), public, allocatable :: text character(len=4), public :: response_format = 'json' real, public :: temperature = 1.0 Type-Bound Procedures procedure, public,  :: load_base_data private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_api_key private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_organization private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_file_name private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: set_file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: set_base_data private impure elemental subroutine set_base_data (this, file_name, api_key, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: api_key character(len=*), intent(in), optional :: organization procedure, public,  :: create => create_transcription private impure elemental subroutine create_transcription (this, file, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file character(len=*), intent(in), optional :: prompt procedure, public,  :: deallocate_url private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: deallocate_model private pure elemental subroutine deallocate_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: deallocate_language private pure elemental subroutine deallocate_language (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: deallocate_prompt private pure elemental subroutine deallocate_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: deallocate_file private pure elemental subroutine deallocate_file (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: deallocate_text private pure elemental subroutine deallocate_text (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: finalize => deallocate_Transcription private pure elemental subroutine deallocate_Transcription (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: load => load_Transcription_data private impure elemental subroutine load_Transcription_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: load_url private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: load_model private impure elemental subroutine load_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: load_temperature private impure elemental subroutine load_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: load_language private impure elemental subroutine load_language (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: load_response_format private impure elemental subroutine load_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: print_model private impure elemental subroutine print_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: print_temperature private impure elemental subroutine print_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: print_language private impure elemental subroutine print_language (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: print_response_format private impure elemental subroutine print_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: print_prompt private impure elemental subroutine print_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: print_text private impure elemental subroutine print_text (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this procedure, public,  :: set_text private pure elemental subroutine set_text (this, text) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: text procedure, public,  :: set_prompt private pure elemental subroutine set_prompt (this, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: prompt procedure, public,  :: set_url private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: url procedure, public,  :: set_model private pure elemental subroutine set_model (this, model) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: model procedure, public,  :: set_temperature private pure elemental subroutine set_temperature (this, temperature) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this real, intent(in) :: temperature procedure, public,  :: set_language private pure elemental subroutine set_language (this, language) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: language procedure, public,  :: set_response_format private pure elemental subroutine set_response_format (this, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: response_format procedure, public,  :: set_file private pure elemental subroutine set_file (this, file) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file procedure, public,  :: set => set_Transcription_data private impure elemental subroutine set_Transcription_data (this, file_name, url, model, temperature, language, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model real, intent(in), optional :: temperature character(len=*), intent(in), optional :: language character(len=*), intent(in), optional :: response_format Source Code type , extends ( openai ) :: Transcription character ( len = :), allocatable :: url character ( len = :), allocatable :: model character ( len = :), allocatable :: language character ( len = :), allocatable :: prompt character ( len = :), allocatable :: file character ( len = :), allocatable :: text character ( len = 4 ) :: response_format = 'json' real :: temperature = 1.0 contains procedure :: create => create_transcription procedure :: deallocate_url procedure :: deallocate_model procedure :: deallocate_language procedure :: deallocate_prompt procedure :: deallocate_file procedure :: deallocate_text procedure :: finalize => deallocate_Transcription procedure :: load => load_Transcription_data procedure :: load_url procedure :: load_model procedure :: load_temperature procedure :: load_language procedure :: load_response_format procedure :: print_model procedure :: print_temperature procedure :: print_language procedure :: print_response_format procedure :: print_prompt procedure :: print_text procedure :: set_text procedure :: set_prompt procedure :: set_url procedure :: set_model procedure :: set_temperature procedure :: set_language procedure :: set_response_format procedure :: set_file procedure :: set => set_Transcription_data end type Transcription","tags":"","loc":"type/transcription.html"},{"title":"usage – ForOpenAI ","text":"type, private :: usage Inherited by type~~usage~~InheritedByGraph type~usage usage type~chatcompletion ChatCompletion type~chatcompletion->type~usage usage Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables prompt_tokens completion_tokens total_tokens Type-Bound Procedures print_prompt_tokens print_completion_tokens print_total_tokens print Source Code usage Components Type Visibility Attributes Name Initial integer, public :: prompt_tokens = 0 integer, public :: completion_tokens = 0 integer, public :: total_tokens = 0 Type-Bound Procedures procedure, public,  :: print_prompt_tokens private impure elemental subroutine print_prompt_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this procedure, public,  :: print_completion_tokens private impure elemental subroutine print_completion_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this procedure, public,  :: print_total_tokens private impure elemental subroutine print_total_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this procedure, public,  :: print => print_usage private impure elemental subroutine print_usage (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Source Code type usage integer :: prompt_tokens = 0 integer :: completion_tokens = 0 integer :: total_tokens = 0 contains procedure :: print_prompt_tokens procedure :: print_completion_tokens procedure :: print_total_tokens procedure :: print => print_usage end type usage","tags":"","loc":"type/usage.html"},{"title":"ChatCompletion_messages – ForOpenAI ","text":"type, private :: ChatCompletion_messages Inherited by type~~chatcompletion_messages~~InheritedByGraph type~chatcompletion_messages ChatCompletion_messages type~chatcompletion ChatCompletion type~chatcompletion->type~chatcompletion_messages messages Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables role content name Type-Bound Procedures deallocate_role deallocate_content deallocate_name finalize set set_role set_content set_name Source Code ChatCompletion_messages Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: role character(len=:), public, allocatable :: content character(len=:), public, allocatable :: name Type-Bound Procedures procedure, public,  :: deallocate_role private pure elemental subroutine deallocate_role (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this procedure, public,  :: deallocate_content private pure elemental subroutine deallocate_content (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this procedure, public,  :: deallocate_name private pure elemental subroutine deallocate_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this procedure, public,  :: finalize => deallocate_ChatCompletion_messages private pure elemental subroutine deallocate_ChatCompletion_messages (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this procedure, public,  :: set => set_message private pure elemental subroutine set_message (this, role, content, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role character(len=*), intent(in) :: content character(len=*), intent(in), optional :: name procedure, public,  :: set_role private pure elemental subroutine set_role (this, role) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role procedure, public,  :: set_content private pure elemental subroutine set_content (this, content) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: content procedure, public,  :: set_name private pure elemental subroutine set_name (this, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: name Source Code type :: ChatCompletion_messages character ( len = :), allocatable :: role character ( len = :), allocatable :: content character ( len = :), allocatable :: name contains procedure :: deallocate_role procedure :: deallocate_content procedure :: deallocate_name procedure :: finalize => deallocate_ChatCompletion_messages procedure :: set => set_message procedure :: set_role procedure :: set_content procedure :: set_name end type ChatCompletion_messages","tags":"","loc":"type/chatcompletion_messages.html"},{"title":"ChatCompletion – ForOpenAI ","text":"type, public, extends( openai ) :: ChatCompletion Inherits type~~chatcompletion~~InheritsGraph type~chatcompletion ChatCompletion type~chatcompletion_messages ChatCompletion_messages type~chatcompletion->type~chatcompletion_messages messages type~openai openai type~chatcompletion->type~openai type~usage usage type~chatcompletion->type~usage usage Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables organization api_key file_name api_key_env organization_env url model user_name model_list messages max_tokens usage temperature presence_penalty frequency_penalty top_p stream n finish_reason Type-Bound Procedures load_base_data print_api_key print_organization print_file_name set_file_name set_base_data check create conversation deallocate_messages deallocate_model_list deallocate_url deallocate_model deallocate_user_name deallocate_finish_reason finalize get_assistant_response get_user_message init_messages load load_user_name load_url load_model load_temperature load_presence_penalty load_frequency_penalty load_top_p load_n load_stream load_max_tokens read_user_message print_user_name print_model_list print_model print_temperature print_presence_penalty print_frequency_penalty print_top_p print_n print_stream print_max_tokens print_user_message print_assistant_response set_user_name set_url set_model set_model_list select_model set_temperature set_presence_penalty set_frequency_penalty set_top_p set_n set_stream set_max_tokens set_asisstant_response set_user_message set write_history print_finish_reason Source Code ChatCompletion Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=:), public, allocatable :: model character(len=:), public, allocatable :: user_name character(len=256), public, allocatable :: model_list (:) type( ChatCompletion_messages ), public, allocatable :: messages (:) integer, public :: max_tokens type( usage ), public :: usage real, public :: temperature = 1.0 real, public :: presence_penalty = 0.0 real, public :: frequency_penalty = 0.0 real, public :: top_p = 1.0 logical, public :: stream = .false. integer, public :: n = 1 character(len=:), public, allocatable :: finish_reason Type-Bound Procedures procedure, public,  :: load_base_data private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_api_key private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_organization private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_file_name private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: set_file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: set_base_data private impure elemental subroutine set_base_data (this, file_name, api_key, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: api_key character(len=*), intent(in), optional :: organization procedure, public,  :: check => check_chat_completion private impure elemental subroutine check_chat_completion (this, error) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(out) :: error procedure, public,  :: create => create_chat_completion private impure elemental subroutine create_chat_completion (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: conversation private impure elemental subroutine conversation (this, file_name_base, file_name_ChatCompletion, input_file, output_file, inputfile_command, exit_command) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name_base character(len=*), intent(in) :: file_name_ChatCompletion character(len=*), intent(in) :: input_file character(len=*), intent(in) :: output_file character(len=*), intent(in) :: inputfile_command character(len=*), intent(in) :: exit_command procedure, public,  :: deallocate_messages private pure elemental subroutine deallocate_messages (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_model_list private pure elemental subroutine deallocate_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_url private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_model private pure elemental subroutine deallocate_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_user_name private pure elemental subroutine deallocate_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_finish_reason private pure elemental subroutine deallocate_finish_reason (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: finalize => deallocate_ChatCompletion private pure elemental subroutine deallocate_ChatCompletion (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: get_assistant_response private pure function get_assistant_response (this) result(response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable procedure, public,  :: get_user_message private pure function get_user_message (this) result(message) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable procedure, public,  :: init_messages private pure elemental subroutine init_messages (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n procedure, public,  :: load => load_ChatCompletion_data private impure elemental subroutine load_ChatCompletion_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: load_user_name private impure elemental subroutine load_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_url private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_model private impure elemental subroutine load_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_temperature private impure elemental subroutine load_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_presence_penalty private impure elemental subroutine load_presence_penalty (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_frequency_penalty private impure elemental subroutine load_frequency_penalty (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_top_p private impure elemental subroutine load_top_p (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_n private impure elemental subroutine load_n (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_stream private impure elemental subroutine load_stream (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_max_tokens private impure elemental subroutine load_max_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: read_user_message private impure elemental subroutine read_user_message (this, file_name, command) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in) :: command procedure, public,  :: print_user_name private impure elemental subroutine print_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_model_list private impure elemental subroutine print_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_model private impure elemental subroutine print_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_temperature private impure elemental subroutine print_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_presence_penalty private impure elemental subroutine print_presence_penalty (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_frequency_penalty private impure elemental subroutine print_frequency_penalty (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_top_p private impure elemental subroutine print_top_p (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_n private impure elemental subroutine print_n (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_stream private impure elemental subroutine print_stream (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_max_tokens private impure elemental subroutine print_max_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_user_message private impure elemental subroutine print_user_message (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_assistant_response private impure elemental subroutine print_assistant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: set_user_name private pure elemental subroutine set_user_name (this, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: user_name procedure, public,  :: set_url private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: url procedure, public,  :: set_model private pure elemental subroutine set_model (this, model) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: model procedure, public,  :: set_model_list private pure elemental subroutine set_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: select_model private pure elemental subroutine select_model (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n procedure, public,  :: set_temperature private pure elemental subroutine set_temperature (this, temperature) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: temperature procedure, public,  :: set_presence_penalty private pure elemental subroutine set_presence_penalty (this, presence_penalty) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: presence_penalty procedure, public,  :: set_frequency_penalty private pure elemental subroutine set_frequency_penalty (this, frequency_penalty) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: frequency_penalty procedure, public,  :: set_top_p private pure elemental subroutine set_top_p (this, top_p) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: top_p procedure, public,  :: set_n private pure elemental subroutine set_n (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n procedure, public,  :: set_stream private pure elemental subroutine set_stream (this, stream) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this logical, intent(in) :: stream procedure, public,  :: set_max_tokens private pure elemental subroutine set_max_tokens (this, max_tokens) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: max_tokens procedure, public,  :: set_asisstant_response private pure elemental subroutine set_asisstant_response (this, response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: response procedure, public,  :: set_user_message private pure elemental subroutine set_user_message (this, message) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: message procedure, public,  :: set => set_ChatCompletion_data private impure elemental subroutine set_ChatCompletion_data (this, file_name, url, model, user_name, temperature, presence_penalty, frequency_penalty, top_p, n, stream, max_tokens) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model character(len=*), intent(in), optional :: user_name real, intent(in), optional :: temperature real, intent(in), optional :: presence_penalty real, intent(in), optional :: frequency_penalty real, intent(in), optional :: top_p integer, intent(in), optional :: n logical, intent(in), optional :: stream integer, intent(in), optional :: max_tokens procedure, public,  :: write_history private impure elemental subroutine write_history (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_finish_reason private impure elemental subroutine print_finish_reason (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Source Code type , extends ( openai ) :: ChatCompletion character ( len = :), allocatable :: url character ( len = :), allocatable :: model character ( len = :), allocatable :: user_name character ( len = 256 ), allocatable :: model_list (:) type ( ChatCompletion_messages ), allocatable :: messages (:) integer :: max_tokens type ( usage ) :: usage real :: temperature = 1.0 real :: presence_penalty = 0.0 real :: frequency_penalty = 0.0 real :: top_p = 1.0 logical :: stream = . false . integer :: n = 1 character ( len = :), allocatable :: finish_reason contains procedure :: check => check_chat_completion procedure :: create => create_chat_completion procedure :: conversation procedure :: deallocate_messages procedure :: deallocate_model_list procedure :: deallocate_url procedure :: deallocate_model procedure :: deallocate_user_name procedure :: deallocate_finish_reason procedure :: finalize => deallocate_ChatCompletion procedure :: get_assistant_response procedure :: get_user_message procedure :: init_messages procedure :: load => load_ChatCompletion_data procedure :: load_user_name procedure :: load_url procedure :: load_model procedure :: load_temperature procedure :: load_presence_penalty procedure :: load_frequency_penalty procedure :: load_top_p procedure :: load_n procedure :: load_stream procedure :: load_max_tokens procedure :: read_user_message procedure :: print_user_name procedure :: print_model_list procedure :: print_model procedure :: print_temperature procedure :: print_presence_penalty procedure :: print_frequency_penalty procedure :: print_top_p procedure :: print_n procedure :: print_stream procedure :: print_max_tokens procedure :: print_user_message procedure :: print_assistant_response procedure :: set_user_name procedure :: set_url procedure :: set_model procedure :: set_model_list procedure :: select_model procedure :: set_temperature procedure :: set_presence_penalty procedure :: set_frequency_penalty procedure :: set_top_p procedure :: set_n procedure :: set_stream procedure :: set_max_tokens procedure :: set_asisstant_response procedure :: set_user_message procedure :: set => set_ChatCompletion_data procedure :: write_history procedure :: print_finish_reason end type ChatCompletion","tags":"","loc":"type/chatcompletion.html"},{"title":"Translation – ForOpenAI ","text":"type, public, extends( openai ) :: Translation Inherits type~~translation~~InheritsGraph type~translation Translation type~openai openai type~translation->type~openai Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables organization api_key file_name api_key_env organization_env url model prompt file assisstant_response response_format temperature Type-Bound Procedures load_base_data print_api_key print_organization print_file_name set_file_name set_base_data create deallocate_url deallocate_model deallocate_prompt deallocate_file deallocate_assisstant_response finalize load load_url load_model load_temperature load_response_format print_model print_temperature print_response_format print_prompt print_assisstant_response set_assisstant_response set_prompt set_url set_model set_temperature set_response_format set_file set Source Code Translation Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=:), public, allocatable :: model character(len=:), public, allocatable :: prompt character(len=:), public, allocatable :: file character(len=:), public, allocatable :: assisstant_response character(len=4), public :: response_format = 'json' real, public :: temperature = 1.0 Type-Bound Procedures procedure, public,  :: load_base_data private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_api_key private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_organization private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_file_name private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: set_file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: set_base_data private impure elemental subroutine set_base_data (this, file_name, api_key, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: api_key character(len=*), intent(in), optional :: organization procedure, public,  :: create => create_translation private impure elemental subroutine create_translation (this, file, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file character(len=*), intent(in), optional :: prompt procedure, public,  :: deallocate_url private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: deallocate_model private pure elemental subroutine deallocate_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: deallocate_prompt private pure elemental subroutine deallocate_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: deallocate_file private pure elemental subroutine deallocate_file (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: deallocate_assisstant_response private pure elemental subroutine deallocate_assisstant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: finalize => deallocate_Translation private pure elemental subroutine deallocate_Translation (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: load => load_Translation_data private impure elemental subroutine load_Translation_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: load_url private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: load_model private impure elemental subroutine load_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: load_temperature private impure elemental subroutine load_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: load_response_format private impure elemental subroutine load_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: print_model private impure elemental subroutine print_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: print_temperature private impure elemental subroutine print_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: print_response_format private impure elemental subroutine print_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: print_prompt private impure elemental subroutine print_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: print_assisstant_response private impure elemental subroutine print_assisstant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this procedure, public,  :: set_assisstant_response private pure elemental subroutine set_assisstant_response (this, assisstant_response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: assisstant_response procedure, public,  :: set_prompt private pure elemental subroutine set_prompt (this, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: prompt procedure, public,  :: set_url private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: url procedure, public,  :: set_model private pure elemental subroutine set_model (this, model) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: model procedure, public,  :: set_temperature private pure elemental subroutine set_temperature (this, temperature) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this real, intent(in) :: temperature procedure, public,  :: set_response_format private pure elemental subroutine set_response_format (this, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: response_format procedure, public,  :: set_file private pure elemental subroutine set_file (this, file) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file procedure, public,  :: set => set_Translation_data private impure elemental subroutine set_Translation_data (this, file_name, url, model, temperature, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model real, intent(in), optional :: temperature character(len=*), intent(in), optional :: response_format Source Code type , extends ( openai ) :: Translation character ( len = :), allocatable :: url character ( len = :), allocatable :: model character ( len = :), allocatable :: prompt character ( len = :), allocatable :: file character ( len = :), allocatable :: assisstant_response character ( len = 4 ) :: response_format = 'json' real :: temperature = 1.0 contains procedure :: create => create_translation procedure :: deallocate_url procedure :: deallocate_model procedure :: deallocate_prompt procedure :: deallocate_file procedure :: deallocate_assisstant_response procedure :: finalize => deallocate_Translation procedure :: load => load_Translation_data procedure :: load_url procedure :: load_model procedure :: load_temperature procedure :: load_response_format procedure :: print_model procedure :: print_temperature procedure :: print_response_format procedure :: print_prompt procedure :: print_assisstant_response procedure :: set_assisstant_response procedure :: set_prompt procedure :: set_url procedure :: set_model procedure :: set_temperature procedure :: set_response_format procedure :: set_file procedure :: set => set_Translation_data end type Translation","tags":"","loc":"type/translation.html"},{"title":"ImageGeneration – ForOpenAI ","text":"type, public, extends( openai ) :: ImageGeneration Inherits type~~imagegeneration~~InheritsGraph type~imagegeneration ImageGeneration type~openai openai type~imagegeneration->type~openai Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables organization api_key file_name api_key_env organization_env url size prompt response_format n user_name assistant_response Type-Bound Procedures load_base_data print_api_key print_organization print_file_name set_file_name set_base_data create deallocate_url deallocate_user_name deallocate_assistant_response finalize load_url load_size load_response_format load_n load_user_name load print_url print_size print_prompt print_response_format print_n print_user_name print_assistant_response set_url set_size set_prompt set_response_format set_n set_user_name set_assistant_response set Source Code ImageGeneration Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=9), public :: size = '1024x1024' character(len=1000), public :: prompt character(len=4), public :: response_format = 'url' integer, public :: n = 1 character(len=:), public, allocatable :: user_name character(len=1024), public, allocatable :: assistant_response (:) Type-Bound Procedures procedure, public,  :: load_base_data private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_api_key private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_organization private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_file_name private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: set_file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: set_base_data private impure elemental subroutine set_base_data (this, file_name, api_key, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: api_key character(len=*), intent(in), optional :: organization procedure, public,  :: create => create_image private  subroutine create_image (this, prompt, n, size, response_format, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: prompt integer, intent(in), optional :: n character(len=*), intent(in), optional :: size character(len=*), intent(in), optional :: response_format character(len=*), intent(in), optional :: user_name procedure, public,  :: deallocate_url private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: deallocate_user_name private pure elemental subroutine deallocate_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: deallocate_assistant_response private pure elemental subroutine deallocate_assistant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: finalize => deallocate_ImageGeneration private pure elemental subroutine deallocate_ImageGeneration (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: load_url private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: load_size private impure elemental subroutine load_size (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: load_response_format private impure elemental subroutine load_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: load_n private impure elemental subroutine load_n (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: load_user_name private impure elemental subroutine load_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this procedure, public,  :: load => load_ImageGeneration_data private impure elemental subroutine load_ImageGeneration_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_url private impure elemental subroutine print_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this procedure, public,  :: print_size private impure elemental subroutine print_size (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this procedure, public,  :: print_prompt private impure elemental subroutine print_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this procedure, public,  :: print_response_format private impure elemental subroutine print_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this procedure, public,  :: print_n private impure elemental subroutine print_n (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this procedure, public,  :: print_user_name private impure elemental subroutine print_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this procedure, public,  :: print_assistant_response private impure elemental subroutine print_assistant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this procedure, public,  :: set_url private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: url procedure, public,  :: set_size private pure elemental subroutine set_size (this, size) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: size procedure, public,  :: set_prompt private pure elemental subroutine set_prompt (this, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: prompt procedure, public,  :: set_response_format private pure elemental subroutine set_response_format (this, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: response_format procedure, public,  :: set_n private pure elemental subroutine set_n (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this integer, intent(in) :: n procedure, public,  :: set_user_name private pure elemental subroutine set_user_name (this, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: user_name procedure, public,  :: set_assistant_response private pure elemental subroutine set_assistant_response (this, assistant_response, i) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: assistant_response integer, intent(in) :: i procedure, public,  :: set => set_ImageGeneration_data private impure elemental subroutine set_ImageGeneration_data (this, file_name, url, size, prompt, response_format, n, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: size character(len=*), intent(in), optional :: prompt character(len=*), intent(in), optional :: response_format integer, intent(in), optional :: n character(len=*), intent(in), optional :: user_name Source Code type , extends ( openai ) :: ImageGeneration character ( len = :), allocatable :: url character ( len = 9 ) :: size = '1024x1024' character ( len = 1000 ) :: prompt character ( len = 4 ) :: response_format = 'url' integer :: n = 1 character ( len = :), allocatable :: user_name character ( len = 1024 ), allocatable :: assistant_response (:) contains procedure :: create => create_image procedure :: deallocate_url procedure :: deallocate_user_name procedure :: deallocate_assistant_response procedure :: finalize => deallocate_ImageGeneration procedure :: load_url procedure :: load_size procedure :: load_response_format procedure :: load_n procedure :: load_user_name procedure :: load => load_ImageGeneration_data procedure :: print_url procedure :: print_size procedure :: print_prompt procedure :: print_response_format procedure :: print_n procedure :: print_user_name procedure :: print_assistant_response procedure :: set_url procedure :: set_size procedure :: set_prompt procedure :: set_response_format procedure :: set_n procedure :: set_user_name procedure :: set_assistant_response procedure :: set => set_ImageGeneration_data end type ImageGeneration","tags":"","loc":"type/imagegeneration.html"},{"title":"set_base_data – ForOpenAI","text":"private impure elemental subroutine set_base_data(this, file_name, api_key, organization) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: api_key character(len=*), intent(in), optional :: organization Calls proc~~set_base_data~~CallsGraph proc~set_base_data foropenai_base::openai%set_base_data proc~load_api_key foropenai_base::openai%load_api_key proc~set_base_data->proc~load_api_key proc~load_organization foropenai_base::openai%load_organization proc~set_base_data->proc~load_organization proc~set_api_key foropenai_base::openai%set_api_key proc~set_base_data->proc~set_api_key proc~set_api_key_env foropenai_base::openai%set_api_key_env proc~set_base_data->proc~set_api_key_env proc~set_file_name foropenai_base::openai%set_file_name proc~set_base_data->proc~set_file_name proc~set_organization foropenai_base::openai%set_organization proc~set_base_data->proc~set_organization proc~set_organization_env foropenai_base::openai%set_organization_env proc~set_base_data->proc~set_organization_env proc~load_api_key->proc~set_file_name destroy destroy proc~load_api_key->destroy get get proc~load_api_key->get initialize initialize proc~load_api_key->initialize load_file load_file proc~load_api_key->load_file proc~load_organization->proc~set_file_name proc~load_organization->destroy proc~load_organization->get proc~load_organization->initialize proc~load_organization->load_file proc~set_api_key_env->proc~set_api_key proc~set_organization_env->proc~set_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_base_data Source Code elemental impure subroutine set_base_data ( this , file_name , api_key , organization ) class ( openai ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: api_key character ( len =* ), optional , intent ( in ) :: organization integer :: stat_api_key , stat_organization if ( present ( api_key )) call this % set_api_key ( api_key ) if ( present ( organization )) call this % set_organization ( organization ) if ( present ( file_name )) call this % set_file_name ( file_name ) call this % set_api_key_env ( status = stat_api_key ) if ( stat_api_key == 1 ) call this % load_api_key ( file_name ) call this % set_organization_env ( status = stat_organization ) if ( stat_organization == 1 ) call this % load_organization ( file_name ) end subroutine set_base_data","tags":"","loc":"proc/set_base_data.html"},{"title":"set_api_key_env – ForOpenAI","text":"private impure elemental subroutine set_api_key_env(this, status) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status Calls proc~~set_api_key_env~~CallsGraph proc~set_api_key_env foropenai_base::openai%set_api_key_env proc~set_api_key foropenai_base::openai%set_api_key proc~set_api_key_env->proc~set_api_key Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_api_key_env~~CalledByGraph proc~set_api_key_env foropenai_base::openai%set_api_key_env proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_api_key_env Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_api_key_env Source Code elemental impure subroutine set_api_key_env ( this , status ) class ( openai ), intent ( inout ) :: this integer , intent ( out ), optional :: status character ( len = 1024 ) :: tmp call get_environment_variable ( this % api_key_env , tmp , status = status ) if ( status == 0 ) call this % set_api_key ( trim ( tmp )) end subroutine set_api_key_env","tags":"","loc":"proc/set_api_key_env.html"},{"title":"set_organization_env – ForOpenAI","text":"private impure elemental subroutine set_organization_env(this, status) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status Calls proc~~set_organization_env~~CallsGraph proc~set_organization_env foropenai_base::openai%set_organization_env proc~set_organization foropenai_base::openai%set_organization proc~set_organization_env->proc~set_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_organization_env~~CalledByGraph proc~set_organization_env foropenai_base::openai%set_organization_env proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_organization_env Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_organization_env Source Code elemental impure subroutine set_organization_env ( this , status ) class ( openai ), intent ( inout ) :: this integer , intent ( out ), optional :: status character ( len = 1024 ) :: tmp call get_environment_variable ( this % organization_env , tmp , status = status ) if ( status == 0 ) call this % set_organization ( trim ( tmp )) end subroutine set_organization_env","tags":"","loc":"proc/set_organization_env.html"},{"title":"deallocate_openai – ForOpenAI","text":"private pure elemental subroutine deallocate_openai(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Calls proc~~deallocate_openai~~CallsGraph proc~deallocate_openai foropenai_base::openai%deallocate_openai proc~deallocate_api_key foropenai_base::openai%deallocate_api_key proc~deallocate_openai->proc~deallocate_api_key proc~deallocate_file_name foropenai_base::openai%deallocate_file_name proc~deallocate_openai->proc~deallocate_file_name proc~deallocate_organization foropenai_base::openai%deallocate_organization proc~deallocate_openai->proc~deallocate_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_openai Source Code elemental pure subroutine deallocate_openai ( this ) class ( openai ), intent ( inout ) :: this call this % deallocate_api_key () call this % deallocate_organization () call this % deallocate_file_name () end subroutine deallocate_openai","tags":"","loc":"proc/deallocate_openai.html"},{"title":"deallocate_api_key – ForOpenAI","text":"private pure elemental subroutine deallocate_api_key(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Called by proc~~deallocate_api_key~~CalledByGraph proc~deallocate_api_key foropenai_base::openai%deallocate_api_key proc~deallocate_openai foropenai_base::openai%deallocate_openai proc~deallocate_openai->proc~deallocate_api_key Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_api_key Source Code elemental pure subroutine deallocate_api_key ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % api_key )) deallocate ( this % api_key ) end subroutine deallocate_api_key","tags":"","loc":"proc/deallocate_api_key.html"},{"title":"deallocate_organization – ForOpenAI","text":"private pure elemental subroutine deallocate_organization(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Called by proc~~deallocate_organization~~CalledByGraph proc~deallocate_organization foropenai_base::openai%deallocate_organization proc~deallocate_openai foropenai_base::openai%deallocate_openai proc~deallocate_openai->proc~deallocate_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_organization Source Code elemental pure subroutine deallocate_organization ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % organization )) deallocate ( this % organization ) end subroutine deallocate_organization","tags":"","loc":"proc/deallocate_organization.html"},{"title":"deallocate_file_name – ForOpenAI","text":"private pure elemental subroutine deallocate_file_name(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Called by proc~~deallocate_file_name~~CalledByGraph proc~deallocate_file_name foropenai_base::openai%deallocate_file_name proc~deallocate_openai foropenai_base::openai%deallocate_openai proc~deallocate_openai->proc~deallocate_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_file_name Source Code elemental pure subroutine deallocate_file_name ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % file_name )) deallocate ( this % file_name ) end subroutine deallocate_file_name","tags":"","loc":"proc/deallocate_file_name.html"},{"title":"load_base_data – ForOpenAI","text":"private impure elemental subroutine load_base_data(this, file_name) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~load_base_data~~CallsGraph proc~load_base_data foropenai_base::openai%load_base_data proc~load_api_key foropenai_base::openai%load_api_key proc~load_base_data->proc~load_api_key proc~load_organization foropenai_base::openai%load_organization proc~load_base_data->proc~load_organization proc~set_file_name foropenai_base::openai%set_file_name proc~load_base_data->proc~set_file_name proc~load_api_key->proc~set_file_name destroy destroy proc~load_api_key->destroy get get proc~load_api_key->get initialize initialize proc~load_api_key->initialize load_file load_file proc~load_api_key->load_file proc~load_organization->proc~set_file_name proc~load_organization->destroy proc~load_organization->get proc~load_organization->initialize proc~load_organization->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_base_data Source Code elemental impure subroutine load_base_data ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_api_key () call this % load_organization () end subroutine load_base_data","tags":"","loc":"proc/load_base_data.html"},{"title":"set_organization – ForOpenAI","text":"private pure elemental subroutine set_organization(this, organization) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: organization Called by proc~~set_organization~~CalledByGraph proc~set_organization foropenai_base::openai%set_organization proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_organization proc~set_organization_env foropenai_base::openai%set_organization_env proc~set_base_data->proc~set_organization_env proc~set_organization_env->proc~set_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_organization Source Code elemental pure subroutine set_organization ( this , organization ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: organization this % organization = trim ( organization ) end subroutine set_organization","tags":"","loc":"proc/set_organization.html"},{"title":"set_api_key – ForOpenAI","text":"private pure elemental subroutine set_api_key(this, api_key) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: api_key Called by proc~~set_api_key~~CalledByGraph proc~set_api_key foropenai_base::openai%set_api_key proc~set_api_key_env foropenai_base::openai%set_api_key_env proc~set_api_key_env->proc~set_api_key proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_api_key proc~set_base_data->proc~set_api_key_env Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_api_key Source Code elemental pure subroutine set_api_key ( this , api_key ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: api_key this % api_key = trim ( api_key ) end subroutine set_api_key","tags":"","loc":"proc/set_api_key.html"},{"title":"load_api_key – ForOpenAI","text":"private impure elemental subroutine load_api_key(this, file_name) Uses json_module proc~~load_api_key~~UsesGraph proc~load_api_key foropenai_base::openai%load_api_key json_module json_module proc~load_api_key->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name Calls proc~~load_api_key~~CallsGraph proc~load_api_key foropenai_base::openai%load_api_key destroy destroy proc~load_api_key->destroy get get proc~load_api_key->get initialize initialize proc~load_api_key->initialize load_file load_file proc~load_api_key->load_file proc~set_file_name foropenai_base::openai%set_file_name proc~load_api_key->proc~set_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_api_key~~CalledByGraph proc~load_api_key foropenai_base::openai%load_api_key proc~load_base_data foropenai_base::openai%load_base_data proc~load_base_data->proc~load_api_key proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~load_api_key Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_api_key Source Code elemental impure subroutine load_api_key ( this , file_name ) use json_module , only : json_file class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ), optional :: file_name type ( json_file ) :: json if ( present ( file_name )) call this % set_file_name ( file_name ) call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"base.api_key\" , this % api_key ) call json % destroy () end subroutine load_api_key","tags":"","loc":"proc/load_api_key.html"},{"title":"set_file_name – ForOpenAI","text":"private pure elemental subroutine set_file_name(this, file_name) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name Called by proc~~set_file_name~~CalledByGraph proc~set_file_name foropenai_base::openai%set_file_name proc~load_api_key foropenai_base::openai%load_api_key proc~load_api_key->proc~set_file_name proc~load_base_data foropenai_base::openai%load_base_data proc~load_base_data->proc~set_file_name proc~load_base_data->proc~load_api_key proc~load_organization foropenai_base::openai%load_organization proc~load_base_data->proc~load_organization proc~load_organization->proc~set_file_name proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_file_name proc~set_base_data->proc~load_api_key proc~set_base_data->proc~load_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_file_name Source Code elemental pure subroutine set_file_name ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name this % file_name = trim ( file_name ) end subroutine set_file_name","tags":"","loc":"proc/set_file_name.html"},{"title":"load_organization – ForOpenAI","text":"private impure elemental subroutine load_organization(this, file_name) Uses json_module proc~~load_organization~~UsesGraph proc~load_organization foropenai_base::openai%load_organization json_module json_module proc~load_organization->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name Calls proc~~load_organization~~CallsGraph proc~load_organization foropenai_base::openai%load_organization destroy destroy proc~load_organization->destroy get get proc~load_organization->get initialize initialize proc~load_organization->initialize load_file load_file proc~load_organization->load_file proc~set_file_name foropenai_base::openai%set_file_name proc~load_organization->proc~set_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_organization~~CalledByGraph proc~load_organization foropenai_base::openai%load_organization proc~load_base_data foropenai_base::openai%load_base_data proc~load_base_data->proc~load_organization proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~load_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_organization Source Code elemental impure subroutine load_organization ( this , file_name ) use json_module , only : json_file class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ), optional :: file_name type ( json_file ) :: json if ( present ( file_name )) call this % set_file_name ( file_name ) call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"base.organization\" , this % organization ) call json % destroy () end subroutine load_organization","tags":"","loc":"proc/load_organization.html"},{"title":"print_api_key – ForOpenAI","text":"private impure elemental subroutine print_api_key(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Contents Source Code print_api_key Source Code elemental impure subroutine print_api_key ( this ) class ( openai ), intent ( inout ) :: this print \"('api key: ',A)\" , trim ( this % api_key ) end subroutine print_api_key","tags":"","loc":"proc/print_api_key.html"},{"title":"print_organization – ForOpenAI","text":"private impure elemental subroutine print_organization(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Contents Source Code print_organization Source Code elemental impure subroutine print_organization ( this ) class ( openai ), intent ( inout ) :: this print \"('organization: ',A)\" , trim ( this % organization ) end subroutine print_organization","tags":"","loc":"proc/print_organization.html"},{"title":"print_file_name – ForOpenAI","text":"private impure elemental subroutine print_file_name(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Contents Source Code print_file_name Source Code elemental impure subroutine print_file_name ( this ) class ( openai ), intent ( inout ) :: this print \"('file name: ',A)\" , trim ( this % file_name ) end subroutine print_file_name","tags":"","loc":"proc/print_file_name.html"},{"title":"print_text – ForOpenAI","text":"private impure elemental subroutine print_text(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Contents Source Code print_text Source Code elemental impure subroutine print_text ( this ) class ( Transcription ), intent ( inout ) :: this print \"('text: ',A)\" , trim ( this % text ) end subroutine print_text","tags":"","loc":"proc/print_text.html"},{"title":"set_text – ForOpenAI","text":"private pure elemental subroutine set_text(this, text) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: text Contents Source Code set_text Source Code elemental pure subroutine set_text ( this , text ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: text this % text = trim ( text ) end subroutine set_text","tags":"","loc":"proc/set_text.html"},{"title":"print_prompt – ForOpenAI","text":"private impure elemental subroutine print_prompt(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Contents Source Code print_prompt Source Code elemental impure subroutine print_prompt ( this ) class ( Transcription ), intent ( inout ) :: this print \"('prompt: ',A)\" , trim ( this % prompt ) end subroutine print_prompt","tags":"","loc":"proc/print_prompt.html"},{"title":"set_prompt – ForOpenAI","text":"private pure elemental subroutine set_prompt(this, prompt) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: prompt Called by proc~~set_prompt~~CalledByGraph proc~set_prompt foropenai_Transcription::Transcription%set_prompt proc~create_transcription foropenai_Transcription::Transcription%create_transcription proc~create_transcription->proc~set_prompt Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_prompt Source Code elemental pure subroutine set_prompt ( this , prompt ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prompt this % prompt = trim ( prompt ) end subroutine set_prompt","tags":"","loc":"proc/set_prompt.html"},{"title":"deallocate_Transcription – ForOpenAI","text":"private pure elemental subroutine deallocate_Transcription(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Calls proc~~deallocate_transcription~~CallsGraph proc~deallocate_transcription foropenai_Transcription::Transcription%deallocate_Transcription proc~deallocate_file foropenai_Transcription::Transcription%deallocate_file proc~deallocate_transcription->proc~deallocate_file proc~deallocate_language foropenai_Transcription::Transcription%deallocate_language proc~deallocate_transcription->proc~deallocate_language proc~deallocate_model foropenai_Transcription::Transcription%deallocate_model proc~deallocate_transcription->proc~deallocate_model proc~deallocate_prompt foropenai_Transcription::Transcription%deallocate_prompt proc~deallocate_transcription->proc~deallocate_prompt proc~deallocate_text foropenai_Transcription::Transcription%deallocate_text proc~deallocate_transcription->proc~deallocate_text proc~deallocate_url foropenai_Transcription::Transcription%deallocate_url proc~deallocate_transcription->proc~deallocate_url Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_Transcription Source Code elemental pure subroutine deallocate_Transcription ( this ) class ( Transcription ), intent ( inout ) :: this call this % deallocate_url () call this % deallocate_model () call this % deallocate_language () call this % deallocate_prompt () call this % deallocate_file () call this % deallocate_text () end subroutine deallocate_Transcription","tags":"","loc":"proc/deallocate_transcription.html"},{"title":"deallocate_url – ForOpenAI","text":"private pure elemental subroutine deallocate_url(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Called by proc~~deallocate_url~~CalledByGraph proc~deallocate_url foropenai_Transcription::Transcription%deallocate_url proc~deallocate_transcription foropenai_Transcription::Transcription%deallocate_Transcription proc~deallocate_transcription->proc~deallocate_url Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_url Source Code elemental pure subroutine deallocate_url ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url","tags":"","loc":"proc/deallocate_url.html"},{"title":"deallocate_model – ForOpenAI","text":"private pure elemental subroutine deallocate_model(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Called by proc~~deallocate_model~~CalledByGraph proc~deallocate_model foropenai_Transcription::Transcription%deallocate_model proc~deallocate_transcription foropenai_Transcription::Transcription%deallocate_Transcription proc~deallocate_transcription->proc~deallocate_model Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_model Source Code elemental pure subroutine deallocate_model ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % model )) deallocate ( this % model ) end subroutine deallocate_model","tags":"","loc":"proc/deallocate_model.html"},{"title":"deallocate_language – ForOpenAI","text":"private pure elemental subroutine deallocate_language(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Called by proc~~deallocate_language~~CalledByGraph proc~deallocate_language foropenai_Transcription::Transcription%deallocate_language proc~deallocate_transcription foropenai_Transcription::Transcription%deallocate_Transcription proc~deallocate_transcription->proc~deallocate_language Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_language Source Code elemental pure subroutine deallocate_language ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % language )) deallocate ( this % language ) end subroutine deallocate_language","tags":"","loc":"proc/deallocate_language.html"},{"title":"deallocate_prompt – ForOpenAI","text":"private pure elemental subroutine deallocate_prompt(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Called by proc~~deallocate_prompt~~CalledByGraph proc~deallocate_prompt foropenai_Transcription::Transcription%deallocate_prompt proc~deallocate_transcription foropenai_Transcription::Transcription%deallocate_Transcription proc~deallocate_transcription->proc~deallocate_prompt Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_prompt Source Code elemental pure subroutine deallocate_prompt ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % prompt )) deallocate ( this % prompt ) end subroutine deallocate_prompt","tags":"","loc":"proc/deallocate_prompt.html"},{"title":"deallocate_file – ForOpenAI","text":"private pure elemental subroutine deallocate_file(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Called by proc~~deallocate_file~~CalledByGraph proc~deallocate_file foropenai_Transcription::Transcription%deallocate_file proc~deallocate_transcription foropenai_Transcription::Transcription%deallocate_Transcription proc~deallocate_transcription->proc~deallocate_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_file Source Code elemental pure subroutine deallocate_file ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % file )) deallocate ( this % file ) end subroutine deallocate_file","tags":"","loc":"proc/deallocate_file.html"},{"title":"deallocate_text – ForOpenAI","text":"private pure elemental subroutine deallocate_text(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Called by proc~~deallocate_text~~CalledByGraph proc~deallocate_text foropenai_Transcription::Transcription%deallocate_text proc~deallocate_transcription foropenai_Transcription::Transcription%deallocate_Transcription proc~deallocate_transcription->proc~deallocate_text Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_text Source Code elemental pure subroutine deallocate_text ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % text )) deallocate ( this % text ) end subroutine deallocate_text","tags":"","loc":"proc/deallocate_text.html"},{"title":"set_response_format – ForOpenAI","text":"private pure elemental subroutine set_response_format(this, response_format) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: response_format Called by proc~~set_response_format~~CalledByGraph proc~set_response_format foropenai_Transcription::Transcription%set_response_format proc~set_transcription_data foropenai_Transcription::Transcription%set_Transcription_data proc~set_transcription_data->proc~set_response_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_response_format Source Code elemental pure subroutine set_response_format ( this , response_format ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response_format this % response_format = trim ( response_format ) end subroutine set_response_format","tags":"","loc":"proc/set_response_format.html"},{"title":"load_response_format – ForOpenAI","text":"private impure elemental subroutine load_response_format(this) Uses json_module proc~~load_response_format~~UsesGraph proc~load_response_format foropenai_Transcription::Transcription%load_response_format json_module json_module proc~load_response_format->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Calls proc~~load_response_format~~CallsGraph proc~load_response_format foropenai_Transcription::Transcription%load_response_format destroy destroy proc~load_response_format->destroy get get proc~load_response_format->get initialize initialize proc~load_response_format->initialize load_file load_file proc~load_response_format->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_response_format~~CalledByGraph proc~load_response_format foropenai_Transcription::Transcription%load_response_format proc~load_transcription_data foropenai_Transcription::Transcription%load_Transcription_data proc~load_transcription_data->proc~load_response_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_response_format Source Code elemental impure subroutine load_response_format ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.response_format\" , tmp , found = found ) if ( found ) this % response_format = trim ( tmp ) call json % destroy () end subroutine load_response_format","tags":"","loc":"proc/load_response_format.html"},{"title":"print_response_format – ForOpenAI","text":"private impure elemental subroutine print_response_format(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Contents Source Code print_response_format Source Code elemental impure subroutine print_response_format ( this ) class ( Transcription ), intent ( inout ) :: this print \"('response_format: ',A)\" , trim ( this % response_format ) end subroutine print_response_format","tags":"","loc":"proc/print_response_format.html"},{"title":"load_language – ForOpenAI","text":"private impure elemental subroutine load_language(this) Uses json_module proc~~load_language~~UsesGraph proc~load_language foropenai_Transcription::Transcription%load_language json_module json_module proc~load_language->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Calls proc~~load_language~~CallsGraph proc~load_language foropenai_Transcription::Transcription%load_language destroy destroy proc~load_language->destroy get get proc~load_language->get initialize initialize proc~load_language->initialize load_file load_file proc~load_language->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_language~~CalledByGraph proc~load_language foropenai_Transcription::Transcription%load_language proc~load_transcription_data foropenai_Transcription::Transcription%load_Transcription_data proc~load_transcription_data->proc~load_language Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_language Source Code elemental impure subroutine load_language ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.language\" , tmp , found = found ) if ( found ) this % language = trim ( tmp ) call json % destroy () end subroutine load_language","tags":"","loc":"proc/load_language.html"},{"title":"print_language – ForOpenAI","text":"private impure elemental subroutine print_language(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Contents Source Code print_language Source Code elemental impure subroutine print_language ( this ) class ( Transcription ), intent ( inout ) :: this print \"('language: ',A)\" , trim ( this % language ) end subroutine print_language","tags":"","loc":"proc/print_language.html"},{"title":"set_language – ForOpenAI","text":"private pure elemental subroutine set_language(this, language) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: language Called by proc~~set_language~~CalledByGraph proc~set_language foropenai_Transcription::Transcription%set_language proc~set_transcription_data foropenai_Transcription::Transcription%set_Transcription_data proc~set_transcription_data->proc~set_language Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_language Source Code elemental pure subroutine set_language ( this , language ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: language this % language = trim ( language ) end subroutine set_language","tags":"","loc":"proc/set_language.html"},{"title":"set_file – ForOpenAI","text":"private pure elemental subroutine set_file(this, file) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file Called by proc~~set_file~~CalledByGraph proc~set_file foropenai_Transcription::Transcription%set_file proc~create_transcription foropenai_Transcription::Transcription%create_transcription proc~create_transcription->proc~set_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_file Source Code elemental pure subroutine set_file ( this , file ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file this % file = trim ( file ) end subroutine set_file","tags":"","loc":"proc/set_file.html"},{"title":"set_Transcription_data – ForOpenAI","text":"private impure elemental subroutine set_Transcription_data(this, file_name, url, model, temperature, language, response_format) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model real, intent(in), optional :: temperature character(len=*), intent(in), optional :: language character(len=*), intent(in), optional :: response_format Calls proc~~set_transcription_data~~CallsGraph proc~set_transcription_data foropenai_Transcription::Transcription%set_Transcription_data load load proc~set_transcription_data->load proc~set_language foropenai_Transcription::Transcription%set_language proc~set_transcription_data->proc~set_language proc~set_model foropenai_Transcription::Transcription%set_model proc~set_transcription_data->proc~set_model proc~set_response_format foropenai_Transcription::Transcription%set_response_format proc~set_transcription_data->proc~set_response_format proc~set_temperature foropenai_Transcription::Transcription%set_temperature proc~set_transcription_data->proc~set_temperature proc~set_url foropenai_Transcription::Transcription%set_url proc~set_transcription_data->proc~set_url set_file_name set_file_name proc~set_transcription_data->set_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_Transcription_data Source Code elemental impure subroutine set_Transcription_data ( this , file_name , & url , model , temperature , language , response_format ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: url character ( len =* ), optional , intent ( in ) :: model real , optional , intent ( in ) :: temperature character ( len =* ), optional , intent ( in ) :: language character ( len =* ), optional , intent ( in ) :: response_format if ( present ( url )) call this % set_url ( url = url ) if ( present ( model )) call this % set_model ( model = model ) if ( present ( temperature )) call this % set_temperature ( temperature = temperature ) if ( present ( language )) call this % set_language ( language = language ) if ( present ( response_format )) call this % set_response_format ( response_format = response_format ) if ( present ( file_name )) then call this % set_file_name ( file_name ) call this % load ( file_name ) end if end subroutine set_Transcription_data","tags":"","loc":"proc/set_transcription_data.html"},{"title":"load_Transcription_data – ForOpenAI","text":"private impure elemental subroutine load_Transcription_data(this, file_name) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~load_transcription_data~~CallsGraph proc~load_transcription_data foropenai_Transcription::Transcription%load_Transcription_data proc~load_language foropenai_Transcription::Transcription%load_language proc~load_transcription_data->proc~load_language proc~load_model foropenai_Transcription::Transcription%load_model proc~load_transcription_data->proc~load_model proc~load_response_format foropenai_Transcription::Transcription%load_response_format proc~load_transcription_data->proc~load_response_format proc~load_temperature foropenai_Transcription::Transcription%load_temperature proc~load_transcription_data->proc~load_temperature proc~load_url foropenai_Transcription::Transcription%load_url proc~load_transcription_data->proc~load_url set_file_name set_file_name proc~load_transcription_data->set_file_name destroy destroy proc~load_language->destroy get get proc~load_language->get initialize initialize proc~load_language->initialize load_file load_file proc~load_language->load_file proc~load_model->destroy proc~load_model->get proc~load_model->initialize proc~load_model->load_file proc~load_response_format->destroy proc~load_response_format->get proc~load_response_format->initialize proc~load_response_format->load_file proc~load_temperature->destroy proc~load_temperature->get proc~load_temperature->initialize proc~load_temperature->load_file proc~load_url->destroy proc~load_url->get proc~load_url->initialize proc~load_url->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_Transcription_data Source Code elemental impure subroutine load_Transcription_data ( this , file_name ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_model () call this % load_temperature () call this % load_language () call this % load_response_format () end subroutine load_Transcription_data","tags":"","loc":"proc/load_transcription_data.html"},{"title":"load_temperature – ForOpenAI","text":"private impure elemental subroutine load_temperature(this) Uses json_module proc~~load_temperature~~UsesGraph proc~load_temperature foropenai_Transcription::Transcription%load_temperature json_module json_module proc~load_temperature->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Calls proc~~load_temperature~~CallsGraph proc~load_temperature foropenai_Transcription::Transcription%load_temperature destroy destroy proc~load_temperature->destroy get get proc~load_temperature->get initialize initialize proc~load_temperature->initialize load_file load_file proc~load_temperature->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_temperature~~CalledByGraph proc~load_temperature foropenai_Transcription::Transcription%load_temperature proc~load_transcription_data foropenai_Transcription::Transcription%load_Transcription_data proc~load_transcription_data->proc~load_temperature Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_temperature Source Code elemental impure subroutine load_temperature ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.temperature\" , tmp , found = found ) if ( found ) this % temperature = tmp call json % destroy () end subroutine load_temperature","tags":"","loc":"proc/load_temperature.html"},{"title":"load_url – ForOpenAI","text":"private impure elemental subroutine load_url(this) Uses json_module proc~~load_url~~UsesGraph proc~load_url foropenai_Transcription::Transcription%load_url json_module json_module proc~load_url->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Calls proc~~load_url~~CallsGraph proc~load_url foropenai_Transcription::Transcription%load_url destroy destroy proc~load_url->destroy get get proc~load_url->get initialize initialize proc~load_url->initialize load_file load_file proc~load_url->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_url~~CalledByGraph proc~load_url foropenai_Transcription::Transcription%load_url proc~load_transcription_data foropenai_Transcription::Transcription%load_Transcription_data proc~load_transcription_data->proc~load_url Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_url Source Code elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.url\" , tmp , found = found ) if ( found ) this % url = trim ( tmp ) call json % destroy () end subroutine load_url","tags":"","loc":"proc/load_url.html"},{"title":"load_model – ForOpenAI","text":"private impure elemental subroutine load_model(this) Uses json_module proc~~load_model~~UsesGraph proc~load_model foropenai_Transcription::Transcription%load_model json_module json_module proc~load_model->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Calls proc~~load_model~~CallsGraph proc~load_model foropenai_Transcription::Transcription%load_model destroy destroy proc~load_model->destroy get get proc~load_model->get initialize initialize proc~load_model->initialize load_file load_file proc~load_model->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_model~~CalledByGraph proc~load_model foropenai_Transcription::Transcription%load_model proc~load_transcription_data foropenai_Transcription::Transcription%load_Transcription_data proc~load_transcription_data->proc~load_model Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_model Source Code elemental impure subroutine load_model ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.model\" , tmp , found = found ) if ( found ) this % model = trim ( tmp ) call json % destroy () end subroutine load_model","tags":"","loc":"proc/load_model.html"},{"title":"set_temperature – ForOpenAI","text":"private pure elemental subroutine set_temperature(this, temperature) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this real, intent(in) :: temperature Called by proc~~set_temperature~~CalledByGraph proc~set_temperature foropenai_Transcription::Transcription%set_temperature proc~set_transcription_data foropenai_Transcription::Transcription%set_Transcription_data proc~set_transcription_data->proc~set_temperature Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_temperature Source Code elemental pure subroutine set_temperature ( this , temperature ) class ( Transcription ), intent ( inout ) :: this real , intent ( in ) :: temperature this % temperature = temperature end subroutine set_temperature","tags":"","loc":"proc/set_temperature.html"},{"title":"set_url – ForOpenAI","text":"private pure elemental subroutine set_url(this, url) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: url Called by proc~~set_url~~CalledByGraph proc~set_url foropenai_Transcription::Transcription%set_url proc~set_transcription_data foropenai_Transcription::Transcription%set_Transcription_data proc~set_transcription_data->proc~set_url Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_url Source Code elemental pure subroutine set_url ( this , url ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url","tags":"","loc":"proc/set_url.html"},{"title":"set_model – ForOpenAI","text":"private pure elemental subroutine set_model(this, model) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: model Called by proc~~set_model~~CalledByGraph proc~set_model foropenai_Transcription::Transcription%set_model proc~set_transcription_data foropenai_Transcription::Transcription%set_Transcription_data proc~set_transcription_data->proc~set_model Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_model Source Code elemental pure subroutine set_model ( this , model ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: model this % model = trim ( model ) end subroutine set_model","tags":"","loc":"proc/set_model.html"},{"title":"create_transcription – ForOpenAI","text":"private impure elemental subroutine create_transcription(this, file, prompt) Uses http json_module proc~~create_transcription~~UsesGraph proc~create_transcription foropenai_Transcription::Transcription%create_transcription http http proc~create_transcription->http json_module json_module proc~create_transcription->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file character(len=*), intent(in), optional :: prompt Calls proc~~create_transcription~~CallsGraph proc~create_transcription foropenai_Transcription::Transcription%create_transcription deserialize deserialize proc~create_transcription->deserialize destroy destroy proc~create_transcription->destroy get get proc~create_transcription->get initialize initialize proc~create_transcription->initialize pair_type pair_type proc~create_transcription->pair_type proc~set_file foropenai_Transcription::Transcription%set_file proc~create_transcription->proc~set_file proc~set_prompt foropenai_Transcription::Transcription%set_prompt proc~create_transcription->proc~set_prompt request request proc~create_transcription->request Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code create_transcription Source Code elemental impure subroutine create_transcription ( this , file , prompt ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file character ( len =* ), intent ( in ), optional :: prompt type ( pair_type ), allocatable :: req_header (:), form_data (:), file_data type ( response_type ) :: response type ( json_file ) :: json character ( len = 1024 ) :: tempereture_str call this % set_file ( file = file ) if ( present ( prompt )) then call this % set_prompt ( prompt = prompt ) else call this % set_prompt ( prompt = '' ) end if req_header = [& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key ) // '' ),& pair_type ( 'Content-Type' , 'multipart/form-data' )& ] write ( tempereture_str , '(f3.1)' ) this % temperature form_data = [& pair_type ( 'model' , trim ( this % model )),& pair_type ( ' language' , trim ( this % language )),& pair_type ( ' response_format' , trim ( this % response_format )),& pair_type ( ' prompt' , trim ( this % prompt )),& pair_type ( ' temperature' , trim ( tempereture_str ))& ] file_data = pair_type ( 'file' , trim ( this % file )) response = request ( url = this % url , method = HTTP_POST , header = req_header , form = form_data , file = file_data ) if ( response % ok ) then call json % initialize () call json % deserialize ( response % content ) call json % get ( \"text\" , this % text ) call json % destroy () else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end subroutine create_transcription","tags":"","loc":"proc/create_transcription.html"},{"title":"print_model – ForOpenAI","text":"private impure elemental subroutine print_model(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Contents Source Code print_model Source Code elemental impure subroutine print_model ( this ) class ( Transcription ), intent ( inout ) :: this print \"('model: ',A)\" , trim ( this % model ) end subroutine print_model","tags":"","loc":"proc/print_model.html"},{"title":"print_temperature – ForOpenAI","text":"private impure elemental subroutine print_temperature(this) Type Bound Transcription Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this Contents Source Code print_temperature Source Code elemental impure subroutine print_temperature ( this ) class ( Transcription ), intent ( inout ) :: this print \"('temperature: ',F3.1)\" , this % temperature end subroutine print_temperature","tags":"","loc":"proc/print_temperature.html"},{"title":"get_assistant_response – ForOpenAI","text":"private pure function get_assistant_response(this) result(response) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable Calls proc~~get_assistant_response~~CallsGraph proc~get_assistant_response foropenai_ChatCompletion::ChatCompletion%get_assistant_response messages messages proc~get_assistant_response->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~get_assistant_response~~CalledByGraph proc~get_assistant_response foropenai_ChatCompletion::ChatCompletion%get_assistant_response proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~get_assistant_response proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~conversation->proc~write_history proc~write_history->proc~get_assistant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents","tags":"","loc":"proc/get_assistant_response.html"},{"title":"get_user_message – ForOpenAI","text":"private pure function get_user_message(this) result(message) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable Calls proc~~get_user_message~~CallsGraph proc~get_user_message foropenai_ChatCompletion::ChatCompletion%get_user_message messages messages proc~get_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~get_user_message~~CalledByGraph proc~get_user_message foropenai_ChatCompletion::ChatCompletion%get_user_message proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~get_user_message proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~conversation->proc~write_history proc~write_history->proc~get_user_message Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents","tags":"","loc":"proc/get_user_message.html"},{"title":"print_usage – ForOpenAI","text":"private impure elemental subroutine print_usage(this) Type Bound usage Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Calls proc~~print_usage~~CallsGraph proc~print_usage foropenai_ChatCompletion::usage%print_usage proc~print_completion_tokens foropenai_ChatCompletion::usage%print_completion_tokens proc~print_usage->proc~print_completion_tokens proc~print_prompt_tokens foropenai_ChatCompletion::usage%print_prompt_tokens proc~print_usage->proc~print_prompt_tokens proc~print_total_tokens foropenai_ChatCompletion::usage%print_total_tokens proc~print_usage->proc~print_total_tokens Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_usage Source Code elemental impure subroutine print_usage ( this ) class ( usage ), intent ( inout ) :: this call this % print_prompt_tokens () call this % print_completion_tokens () call this % print_total_tokens () end subroutine print_usage","tags":"","loc":"proc/print_usage.html"},{"title":"set_ChatCompletion_data – ForOpenAI","text":"private impure elemental subroutine set_ChatCompletion_data(this, file_name, url, model, user_name, temperature, presence_penalty, frequency_penalty, top_p, n, stream, max_tokens) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model character(len=*), intent(in), optional :: user_name real, intent(in), optional :: temperature real, intent(in), optional :: presence_penalty real, intent(in), optional :: frequency_penalty real, intent(in), optional :: top_p integer, intent(in), optional :: n logical, intent(in), optional :: stream integer, intent(in), optional :: max_tokens Calls proc~~set_chatcompletion_data~~CallsGraph proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data load load proc~set_chatcompletion_data->load proc~set_frequency_penalty foropenai_ChatCompletion::ChatCompletion%set_frequency_penalty proc~set_chatcompletion_data->proc~set_frequency_penalty proc~set_max_tokens foropenai_ChatCompletion::ChatCompletion%set_max_tokens proc~set_chatcompletion_data->proc~set_max_tokens proc~set_model~2 foropenai_ChatCompletion::ChatCompletion%set_model proc~set_chatcompletion_data->proc~set_model~2 proc~set_n foropenai_ChatCompletion::ChatCompletion%set_n proc~set_chatcompletion_data->proc~set_n proc~set_presence_penalty foropenai_ChatCompletion::ChatCompletion%set_presence_penalty proc~set_chatcompletion_data->proc~set_presence_penalty proc~set_stream foropenai_ChatCompletion::ChatCompletion%set_stream proc~set_chatcompletion_data->proc~set_stream proc~set_temperature~2 foropenai_ChatCompletion::ChatCompletion%set_temperature proc~set_chatcompletion_data->proc~set_temperature~2 proc~set_top_p foropenai_ChatCompletion::ChatCompletion%set_top_p proc~set_chatcompletion_data->proc~set_top_p proc~set_url~2 foropenai_ChatCompletion::ChatCompletion%set_url proc~set_chatcompletion_data->proc~set_url~2 proc~set_user_name foropenai_ChatCompletion::ChatCompletion%set_user_name proc~set_chatcompletion_data->proc~set_user_name set_file_name set_file_name proc~set_chatcompletion_data->set_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_ChatCompletion_data Source Code elemental impure subroutine set_ChatCompletion_data ( this , file_name , & url , model , user_name , temperature , presence_penalty , frequency_penalty , top_p , n , stream , max_tokens ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: url character ( len =* ), optional , intent ( in ) :: model character ( len =* ), optional , intent ( in ) :: user_name real , optional , intent ( in ) :: temperature real , optional , intent ( in ) :: presence_penalty real , optional , intent ( in ) :: frequency_penalty real , optional , intent ( in ) :: top_p integer , optional , intent ( in ) :: n logical , optional , intent ( in ) :: stream integer , optional , intent ( in ) :: max_tokens if ( present ( url )) call this % set_url ( url = url ) if ( present ( model )) call this % set_model ( model = model ) if ( present ( user_name )) call this % set_user_name ( user_name = user_name ) if ( present ( temperature )) call this % set_temperature ( temperature = temperature ) if ( present ( presence_penalty )) call this % set_presence_penalty ( presence_penalty = presence_penalty ) if ( present ( frequency_penalty )) call this % set_frequency_penalty ( frequency_penalty = frequency_penalty ) if ( present ( top_p )) call this % set_top_p ( top_p = top_p ) if ( present ( n )) call this % set_n ( n = n ) if ( present ( stream )) call this % set_stream ( stream = stream ) if ( present ( max_tokens )) call this % set_max_tokens ( max_tokens = max_tokens ) if ( present ( file_name )) then call this % set_file_name ( file_name ) call this % load ( file_name ) end if end subroutine set_ChatCompletion_data","tags":"","loc":"proc/set_chatcompletion_data.html"},{"title":"set_user_message – ForOpenAI","text":"private pure elemental subroutine set_user_message(this, message) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: message Calls proc~~set_user_message~~CallsGraph proc~set_user_message foropenai_ChatCompletion::ChatCompletion%set_user_message messages messages proc~set_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_user_message~~CalledByGraph proc~set_user_message foropenai_ChatCompletion::ChatCompletion%set_user_message proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message proc~read_user_message->proc~set_user_message proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~read_user_message Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_user_message Source Code elemental pure subroutine set_user_message ( this , message ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: message integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then call this % messages ( i )% set_content ( content = message ) end if end do end subroutine set_user_message","tags":"","loc":"proc/set_user_message.html"},{"title":"set_asisstant_response – ForOpenAI","text":"private pure elemental subroutine set_asisstant_response(this, response) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: response Calls proc~~set_asisstant_response~~CallsGraph proc~set_asisstant_response foropenai_ChatCompletion::ChatCompletion%set_asisstant_response messages messages proc~set_asisstant_response->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_asisstant_response~~CalledByGraph proc~set_asisstant_response foropenai_ChatCompletion::ChatCompletion%set_asisstant_response proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~set_asisstant_response proc~create_chat_completion foropenai_ChatCompletion::ChatCompletion%create_chat_completion proc~create_chat_completion->proc~set_asisstant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_asisstant_response Source Code elemental pure subroutine set_asisstant_response ( this , response ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then call this % messages ( i )% set_content ( content = response ) end if end do end subroutine set_asisstant_response","tags":"","loc":"proc/set_asisstant_response.html"},{"title":"print_assistant_response – ForOpenAI","text":"private impure elemental subroutine print_assistant_response(this) Uses face proc~~print_assistant_response~~UsesGraph proc~print_assistant_response foropenai_ChatCompletion::ChatCompletion%print_assistant_response face face proc~print_assistant_response->face Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~print_assistant_response~~CallsGraph proc~print_assistant_response foropenai_ChatCompletion::ChatCompletion%print_assistant_response colorize colorize proc~print_assistant_response->colorize messages messages proc~print_assistant_response->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~print_assistant_response~~CalledByGraph proc~print_assistant_response foropenai_ChatCompletion::ChatCompletion%print_assistant_response proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~print_assistant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_assistant_response Source Code elemental impure subroutine print_assistant_response ( this ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then print \"(A,': ',A)\" , colorize ( \"ChatGPT\" , color_bg = 'blue' ), this % messages ( i )% content end if end do end subroutine print_assistant_response","tags":"","loc":"proc/print_assistant_response.html"},{"title":"print_user_message – ForOpenAI","text":"private impure elemental subroutine print_user_message(this) Uses face proc~~print_user_message~~UsesGraph proc~print_user_message foropenai_ChatCompletion::ChatCompletion%print_user_message face face proc~print_user_message->face Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~print_user_message~~CallsGraph proc~print_user_message foropenai_ChatCompletion::ChatCompletion%print_user_message colorize colorize proc~print_user_message->colorize messages messages proc~print_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_user_message Source Code elemental impure subroutine print_user_message ( this ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then print \"(A,': ',A)\" , colorize ( trim ( this % user_name ), color_bg = 'green' ), this % messages ( i )% content end if end do end subroutine print_user_message","tags":"","loc":"proc/print_user_message.html"},{"title":"deallocate_finish_reason – ForOpenAI","text":"private pure elemental subroutine deallocate_finish_reason(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_finish_reason~~CalledByGraph proc~deallocate_finish_reason foropenai_ChatCompletion::ChatCompletion%deallocate_finish_reason proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_finish_reason Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_finish_reason Source Code elemental pure subroutine deallocate_finish_reason ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % finish_reason )) deallocate ( this % finish_reason ) end subroutine deallocate_finish_reason","tags":"","loc":"proc/deallocate_finish_reason.html"},{"title":"print_finish_reason – ForOpenAI","text":"private impure elemental subroutine print_finish_reason(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_finish_reason Source Code elemental impure subroutine print_finish_reason ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('finish reason: ',A)\" , trim ( this % finish_reason ) end subroutine print_finish_reason","tags":"","loc":"proc/print_finish_reason.html"},{"title":"conversation – ForOpenAI","text":"private impure elemental subroutine conversation(this, file_name_base, file_name_ChatCompletion, input_file, output_file, inputfile_command, exit_command) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name_base character(len=*), intent(in) :: file_name_ChatCompletion character(len=*), intent(in) :: input_file character(len=*), intent(in) :: output_file character(len=*), intent(in) :: inputfile_command character(len=*), intent(in) :: exit_command Calls proc~~conversation~~CallsGraph proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation create create proc~conversation->create messages messages proc~conversation->messages proc~get_assistant_response foropenai_ChatCompletion::ChatCompletion%get_assistant_response proc~conversation->proc~get_assistant_response proc~get_user_message foropenai_ChatCompletion::ChatCompletion%get_user_message proc~conversation->proc~get_user_message proc~init_messages foropenai_ChatCompletion::ChatCompletion%init_messages proc~conversation->proc~init_messages proc~print_assistant_response foropenai_ChatCompletion::ChatCompletion%print_assistant_response proc~conversation->proc~print_assistant_response proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message proc~conversation->proc~read_user_message proc~set_asisstant_response foropenai_ChatCompletion::ChatCompletion%set_asisstant_response proc~conversation->proc~set_asisstant_response proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~conversation->proc~write_history set set proc~conversation->set set_base_data set_base_data proc~conversation->set_base_data proc~get_assistant_response->messages proc~get_user_message->messages proc~init_messages->messages proc~print_assistant_response->messages colorize colorize proc~print_assistant_response->colorize proc~read_user_message->colorize proc~set_user_message foropenai_ChatCompletion::ChatCompletion%set_user_message proc~read_user_message->proc~set_user_message proc~set_asisstant_response->messages proc~write_history->proc~get_assistant_response proc~write_history->proc~get_user_message proc~set_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code conversation Source Code elemental impure subroutine conversation ( this , file_name_base , file_name_ChatCompletion , & input_file , output_file , inputfile_command , exit_command ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name_base character ( len =* ), intent ( in ) :: file_name_ChatCompletion character ( len =* ), intent ( in ) :: input_file character ( len =* ), intent ( in ) :: output_file character ( len =* ), intent ( in ) :: inputfile_command character ( len =* ), intent ( in ) :: exit_command call this % set_base_data ( file_name_base ) call this % set ( file_name_ChatCompletion ) call this % init_messages ( n = 3 ) call this % messages ( 1 )% set ( role = 'system' , content = 'You are a helpful assistant.' ) call this % messages ( 2 )% set ( role = 'assistant' , content = '' ) call this % messages ( 3 )% set_role ( role = 'user' ) do call this % read_user_message ( file_name = trim ( input_file ), command = trim ( inputfile_command )) if ( trim ( this % get_user_message ()) == trim ( exit_command )) exit call this % create () call this % set_asisstant_response ( response = this % get_assistant_response ()) call this % print_assistant_response () call this % write_history ( file_name = trim ( output_file )) end do call this % usage % print_prompt_tokens () call this % usage % print_completion_tokens () call this % usage % print_total_tokens () end subroutine conversation","tags":"","loc":"proc/conversation.html"},{"title":"write_history – ForOpenAI","text":"private impure elemental subroutine write_history(this, file_name) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~write_history~~CallsGraph proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~get_assistant_response foropenai_ChatCompletion::ChatCompletion%get_assistant_response proc~write_history->proc~get_assistant_response proc~get_user_message foropenai_ChatCompletion::ChatCompletion%get_user_message proc~write_history->proc~get_user_message messages messages proc~get_assistant_response->messages proc~get_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~write_history~~CalledByGraph proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~write_history Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code write_history Source Code elemental impure subroutine write_history ( this , file_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name integer :: iounit open ( newunit = iounit , file = trim ( file_name ), status = 'unknown' , access = 'append' , action = 'write' ) write ( iounit , \"(A,': ',A)\" ) this % user_name , this % get_user_message () write ( iounit , \"('ChatGPT: ',A)\" ) this % get_assistant_response () close ( iounit ) end subroutine write_history","tags":"","loc":"proc/write_history.html"},{"title":"read_user_message – ForOpenAI","text":"private impure elemental subroutine read_user_message(this, file_name, command) Uses face proc~~read_user_message~~UsesGraph proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message face face proc~read_user_message->face Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in) :: command Calls proc~~read_user_message~~CallsGraph proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message colorize colorize proc~read_user_message->colorize proc~set_user_message foropenai_ChatCompletion::ChatCompletion%set_user_message proc~read_user_message->proc~set_user_message messages messages proc~set_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~read_user_message~~CalledByGraph proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~read_user_message Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code read_user_message Source Code elemental impure subroutine read_user_message ( this , file_name , command ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name character ( len =* ), intent ( in ) :: command character ( len = :), allocatable :: message character ( len = :), allocatable :: whole_message character ( len = 1000000 ) :: tmp integer :: iounit , iostat write ( * , \"(A,': ')\" , advance = 'no' ) colorize ( trim ( this % user_name ), color_bg = 'green' ) read * , tmp message = trim ( tmp ) if ( trim ( message ) == trim ( command )) then open ( newunit = iounit , file = trim ( file_name ), status = 'old' , action = 'read' ) whole_message = '' do read ( iounit , '(A)' , iostat = iostat ) tmp if ( iostat /= 0 ) exit whole_message = trim ( whole_message ) // trim ( tmp ) // new_line ( ' ' ) end do close ( iounit ) call this % set_user_message ( message = whole_message ) else call this % set_user_message ( message = message ) end if end subroutine read_user_message","tags":"","loc":"proc/read_user_message.html"},{"title":"deallocate_ChatCompletion_messages – ForOpenAI","text":"private pure elemental subroutine deallocate_ChatCompletion_messages(this) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this Calls proc~~deallocate_chatcompletion_messages~~CallsGraph proc~deallocate_chatcompletion_messages foropenai_ChatCompletion::ChatCompletion_messages%deallocate_ChatCompletion_messages proc~deallocate_content foropenai_ChatCompletion::ChatCompletion_messages%deallocate_content proc~deallocate_chatcompletion_messages->proc~deallocate_content proc~deallocate_name foropenai_ChatCompletion::ChatCompletion_messages%deallocate_name proc~deallocate_chatcompletion_messages->proc~deallocate_name proc~deallocate_role foropenai_ChatCompletion::ChatCompletion_messages%deallocate_role proc~deallocate_chatcompletion_messages->proc~deallocate_role Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_ChatCompletion_messages Source Code elemental pure subroutine deallocate_ChatCompletion_messages ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this call this % deallocate_role () call this % deallocate_content () call this % deallocate_name () end subroutine deallocate_ChatCompletion_messages","tags":"","loc":"proc/deallocate_chatcompletion_messages.html"},{"title":"deallocate_ChatCompletion – ForOpenAI","text":"private pure elemental subroutine deallocate_ChatCompletion(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~deallocate_chatcompletion~~CallsGraph proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_finish_reason foropenai_ChatCompletion::ChatCompletion%deallocate_finish_reason proc~deallocate_chatcompletion->proc~deallocate_finish_reason proc~deallocate_messages foropenai_ChatCompletion::ChatCompletion%deallocate_messages proc~deallocate_chatcompletion->proc~deallocate_messages proc~deallocate_model_list foropenai_ChatCompletion::ChatCompletion%deallocate_model_list proc~deallocate_chatcompletion->proc~deallocate_model_list proc~deallocate_model~2 foropenai_ChatCompletion::ChatCompletion%deallocate_model proc~deallocate_chatcompletion->proc~deallocate_model~2 proc~deallocate_url~2 foropenai_ChatCompletion::ChatCompletion%deallocate_url proc~deallocate_chatcompletion->proc~deallocate_url~2 proc~deallocate_user_name foropenai_ChatCompletion::ChatCompletion%deallocate_user_name proc~deallocate_chatcompletion->proc~deallocate_user_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_ChatCompletion Source Code elemental pure subroutine deallocate_ChatCompletion ( this ) class ( ChatCompletion ), intent ( inout ) :: this call this % deallocate_messages () call this % deallocate_model_list () call this % deallocate_url () call this % deallocate_model () call this % deallocate_user_name () call this % deallocate_finish_reason () end subroutine deallocate_ChatCompletion","tags":"","loc":"proc/deallocate_chatcompletion.html"},{"title":"deallocate_url – ForOpenAI","text":"private pure elemental subroutine deallocate_url(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_url~2~~CalledByGraph proc~deallocate_url~2 foropenai_ChatCompletion::ChatCompletion%deallocate_url proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_url~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_url Source Code elemental pure subroutine deallocate_url ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url","tags":"","loc":"proc/deallocate_url~2.html"},{"title":"deallocate_model – ForOpenAI","text":"private pure elemental subroutine deallocate_model(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_model~2~~CalledByGraph proc~deallocate_model~2 foropenai_ChatCompletion::ChatCompletion%deallocate_model proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_model~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_model Source Code elemental pure subroutine deallocate_model ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % model )) deallocate ( this % model ) end subroutine deallocate_model","tags":"","loc":"proc/deallocate_model~2.html"},{"title":"deallocate_user_name – ForOpenAI","text":"private pure elemental subroutine deallocate_user_name(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_user_name~~CalledByGraph proc~deallocate_user_name foropenai_ChatCompletion::ChatCompletion%deallocate_user_name proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_user_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_user_name Source Code elemental pure subroutine deallocate_user_name ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % user_name )) deallocate ( this % user_name ) end subroutine deallocate_user_name","tags":"","loc":"proc/deallocate_user_name.html"},{"title":"load_ChatCompletion_data – ForOpenAI","text":"private impure elemental subroutine load_ChatCompletion_data(this, file_name) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~load_chatcompletion_data~~CallsGraph proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_frequency_penalty foropenai_ChatCompletion::ChatCompletion%load_frequency_penalty proc~load_chatcompletion_data->proc~load_frequency_penalty proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens proc~load_chatcompletion_data->proc~load_max_tokens proc~load_model~2 foropenai_ChatCompletion::ChatCompletion%load_model proc~load_chatcompletion_data->proc~load_model~2 proc~load_n foropenai_ChatCompletion::ChatCompletion%load_n proc~load_chatcompletion_data->proc~load_n proc~load_presence_penalty foropenai_ChatCompletion::ChatCompletion%load_presence_penalty proc~load_chatcompletion_data->proc~load_presence_penalty proc~load_stream foropenai_ChatCompletion::ChatCompletion%load_stream proc~load_chatcompletion_data->proc~load_stream proc~load_temperature~2 foropenai_ChatCompletion::ChatCompletion%load_temperature proc~load_chatcompletion_data->proc~load_temperature~2 proc~load_top_p foropenai_ChatCompletion::ChatCompletion%load_top_p proc~load_chatcompletion_data->proc~load_top_p proc~load_url~2 foropenai_ChatCompletion::ChatCompletion%load_url proc~load_chatcompletion_data->proc~load_url~2 proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name proc~load_chatcompletion_data->proc~load_user_name set_file_name set_file_name proc~load_chatcompletion_data->set_file_name destroy destroy proc~load_frequency_penalty->destroy get get proc~load_frequency_penalty->get initialize initialize proc~load_frequency_penalty->initialize load_file load_file proc~load_frequency_penalty->load_file proc~load_max_tokens->destroy proc~load_max_tokens->get proc~load_max_tokens->initialize proc~load_max_tokens->load_file proc~load_model~2->destroy proc~load_model~2->get proc~load_model~2->initialize proc~load_model~2->load_file proc~load_n->destroy proc~load_n->get proc~load_n->initialize proc~load_n->load_file proc~load_presence_penalty->destroy proc~load_presence_penalty->get proc~load_presence_penalty->initialize proc~load_presence_penalty->load_file proc~load_stream->destroy proc~load_stream->get proc~load_stream->initialize proc~load_stream->load_file proc~load_temperature~2->destroy proc~load_temperature~2->get proc~load_temperature~2->initialize proc~load_temperature~2->load_file proc~load_top_p->destroy proc~load_top_p->get proc~load_top_p->initialize proc~load_top_p->load_file proc~load_url~2->destroy proc~load_url~2->get proc~load_url~2->initialize proc~load_url~2->load_file proc~load_user_name->destroy proc~load_user_name->get proc~load_user_name->initialize proc~load_user_name->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_ChatCompletion_data Source Code elemental impure subroutine load_ChatCompletion_data ( this , file_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_model () call this % load_user_name () call this % load_temperature () call this % load_presence_penalty () call this % load_frequency_penalty () call this % load_top_p () call this % load_n () call this % load_stream () call this % load_max_tokens () end subroutine load_ChatCompletion_data","tags":"","loc":"proc/load_chatcompletion_data.html"},{"title":"set_message – ForOpenAI","text":"private pure elemental subroutine set_message(this, role, content, name) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role character(len=*), intent(in) :: content character(len=*), intent(in), optional :: name Contents Source Code set_message Source Code elemental pure subroutine set_message ( this , role , content , name ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: role character ( len =* ), intent ( in ) :: content character ( len =* ), optional , intent ( in ) :: name this % role = trim ( role ) this % content = trim ( content ) if ( present ( name )) this % name = trim ( name ) end subroutine set_message","tags":"","loc":"proc/set_message.html"},{"title":"load_max_tokens – ForOpenAI","text":"private impure elemental subroutine load_max_tokens(this) Uses json_module proc~~load_max_tokens~~UsesGraph proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens json_module json_module proc~load_max_tokens->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_max_tokens~~CallsGraph proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens destroy destroy proc~load_max_tokens->destroy get get proc~load_max_tokens->get initialize initialize proc~load_max_tokens->initialize load_file load_file proc~load_max_tokens->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_max_tokens~~CalledByGraph proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_max_tokens Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_max_tokens Source Code elemental impure subroutine load_max_tokens ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.max_tokens\" , this % max_tokens ) call json % destroy () end subroutine load_max_tokens","tags":"","loc":"proc/load_max_tokens.html"},{"title":"load_temperature – ForOpenAI","text":"private impure elemental subroutine load_temperature(this) Uses json_module proc~~load_temperature~2~~UsesGraph proc~load_temperature~2 foropenai_ChatCompletion::ChatCompletion%load_temperature json_module json_module proc~load_temperature~2->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_temperature~2~~CallsGraph proc~load_temperature~2 foropenai_ChatCompletion::ChatCompletion%load_temperature destroy destroy proc~load_temperature~2->destroy get get proc~load_temperature~2->get initialize initialize proc~load_temperature~2->initialize load_file load_file proc~load_temperature~2->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_temperature~2~~CalledByGraph proc~load_temperature~2 foropenai_ChatCompletion::ChatCompletion%load_temperature proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_temperature~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_temperature Source Code elemental impure subroutine load_temperature ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.temperature\" , tmp , found = found ) if ( found ) this % temperature = tmp call json % destroy () end subroutine load_temperature","tags":"","loc":"proc/load_temperature~2.html"},{"title":"load_presence_penalty – ForOpenAI","text":"private impure elemental subroutine load_presence_penalty(this) Uses json_module proc~~load_presence_penalty~~UsesGraph proc~load_presence_penalty foropenai_ChatCompletion::ChatCompletion%load_presence_penalty json_module json_module proc~load_presence_penalty->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_presence_penalty~~CallsGraph proc~load_presence_penalty foropenai_ChatCompletion::ChatCompletion%load_presence_penalty destroy destroy proc~load_presence_penalty->destroy get get proc~load_presence_penalty->get initialize initialize proc~load_presence_penalty->initialize load_file load_file proc~load_presence_penalty->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_presence_penalty~~CalledByGraph proc~load_presence_penalty foropenai_ChatCompletion::ChatCompletion%load_presence_penalty proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_presence_penalty Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_presence_penalty Source Code elemental impure subroutine load_presence_penalty ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.presence_penalty\" , tmp , found = found ) if ( found ) this % presence_penalty = tmp call json % destroy () end subroutine load_presence_penalty","tags":"","loc":"proc/load_presence_penalty.html"},{"title":"load_frequency_penalty – ForOpenAI","text":"private impure elemental subroutine load_frequency_penalty(this) Uses json_module proc~~load_frequency_penalty~~UsesGraph proc~load_frequency_penalty foropenai_ChatCompletion::ChatCompletion%load_frequency_penalty json_module json_module proc~load_frequency_penalty->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_frequency_penalty~~CallsGraph proc~load_frequency_penalty foropenai_ChatCompletion::ChatCompletion%load_frequency_penalty destroy destroy proc~load_frequency_penalty->destroy get get proc~load_frequency_penalty->get initialize initialize proc~load_frequency_penalty->initialize load_file load_file proc~load_frequency_penalty->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_frequency_penalty~~CalledByGraph proc~load_frequency_penalty foropenai_ChatCompletion::ChatCompletion%load_frequency_penalty proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_frequency_penalty Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_frequency_penalty Source Code elemental impure subroutine load_frequency_penalty ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.frequency_penalty\" , tmp , found = found ) if ( found ) this % frequency_penalty = tmp call json % destroy () end subroutine load_frequency_penalty","tags":"","loc":"proc/load_frequency_penalty.html"},{"title":"load_top_p – ForOpenAI","text":"private impure elemental subroutine load_top_p(this) Uses json_module proc~~load_top_p~~UsesGraph proc~load_top_p foropenai_ChatCompletion::ChatCompletion%load_top_p json_module json_module proc~load_top_p->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_top_p~~CallsGraph proc~load_top_p foropenai_ChatCompletion::ChatCompletion%load_top_p destroy destroy proc~load_top_p->destroy get get proc~load_top_p->get initialize initialize proc~load_top_p->initialize load_file load_file proc~load_top_p->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_top_p~~CalledByGraph proc~load_top_p foropenai_ChatCompletion::ChatCompletion%load_top_p proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_top_p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_top_p Source Code elemental impure subroutine load_top_p ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.top_p\" , tmp , found = found ) if ( found ) this % top_p = tmp call json % destroy () end subroutine load_top_p","tags":"","loc":"proc/load_top_p.html"},{"title":"load_n – ForOpenAI","text":"private impure elemental subroutine load_n(this) Uses json_module proc~~load_n~~UsesGraph proc~load_n foropenai_ChatCompletion::ChatCompletion%load_n json_module json_module proc~load_n->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_n~~CallsGraph proc~load_n foropenai_ChatCompletion::ChatCompletion%load_n destroy destroy proc~load_n->destroy get get proc~load_n->get initialize initialize proc~load_n->initialize load_file load_file proc~load_n->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_n~~CalledByGraph proc~load_n foropenai_ChatCompletion::ChatCompletion%load_n proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_n Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_n Source Code elemental impure subroutine load_n ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json integer :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.n\" , tmp , found = found ) if ( found ) this % n = tmp call json % destroy () end subroutine load_n","tags":"","loc":"proc/load_n.html"},{"title":"load_stream – ForOpenAI","text":"private impure elemental subroutine load_stream(this) Uses json_module proc~~load_stream~~UsesGraph proc~load_stream foropenai_ChatCompletion::ChatCompletion%load_stream json_module json_module proc~load_stream->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_stream~~CallsGraph proc~load_stream foropenai_ChatCompletion::ChatCompletion%load_stream destroy destroy proc~load_stream->destroy get get proc~load_stream->get initialize initialize proc~load_stream->initialize load_file load_file proc~load_stream->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_stream~~CalledByGraph proc~load_stream foropenai_ChatCompletion::ChatCompletion%load_stream proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_stream Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_stream Source Code elemental impure subroutine load_stream ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json logical :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.stream\" , tmp , found = found ) if ( found ) this % stream = tmp call json % destroy () end subroutine load_stream","tags":"","loc":"proc/load_stream.html"},{"title":"load_url – ForOpenAI","text":"private impure elemental subroutine load_url(this) Uses json_module proc~~load_url~2~~UsesGraph proc~load_url~2 foropenai_ChatCompletion::ChatCompletion%load_url json_module json_module proc~load_url~2->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_url~2~~CallsGraph proc~load_url~2 foropenai_ChatCompletion::ChatCompletion%load_url destroy destroy proc~load_url~2->destroy get get proc~load_url~2->get initialize initialize proc~load_url~2->initialize load_file load_file proc~load_url~2->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_url~2~~CalledByGraph proc~load_url~2 foropenai_ChatCompletion::ChatCompletion%load_url proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_url~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_url Source Code elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.url\" , this % url ) call json % destroy () end subroutine load_url","tags":"","loc":"proc/load_url~2.html"},{"title":"load_model – ForOpenAI","text":"private impure elemental subroutine load_model(this) Uses json_module proc~~load_model~2~~UsesGraph proc~load_model~2 foropenai_ChatCompletion::ChatCompletion%load_model json_module json_module proc~load_model~2->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_model~2~~CallsGraph proc~load_model~2 foropenai_ChatCompletion::ChatCompletion%load_model destroy destroy proc~load_model~2->destroy get get proc~load_model~2->get initialize initialize proc~load_model~2->initialize load_file load_file proc~load_model~2->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_model~2~~CalledByGraph proc~load_model~2 foropenai_ChatCompletion::ChatCompletion%load_model proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_model~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_model Source Code elemental impure subroutine load_model ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.model\" , this % model ) call json % destroy () end subroutine load_model","tags":"","loc":"proc/load_model~2.html"},{"title":"load_user_name – ForOpenAI","text":"private impure elemental subroutine load_user_name(this) Uses json_module proc~~load_user_name~~UsesGraph proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name json_module json_module proc~load_user_name->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_user_name~~CallsGraph proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name destroy destroy proc~load_user_name->destroy get get proc~load_user_name->get initialize initialize proc~load_user_name->initialize load_file load_file proc~load_user_name->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_user_name~~CalledByGraph proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_user_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_user_name Source Code elemental impure subroutine load_user_name ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.user_name\" , this % user_name ) call json % destroy () end subroutine load_user_name","tags":"","loc":"proc/load_user_name.html"},{"title":"deallocate_model_list – ForOpenAI","text":"private pure elemental subroutine deallocate_model_list(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_model_list~~CalledByGraph proc~deallocate_model_list foropenai_ChatCompletion::ChatCompletion%deallocate_model_list proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_model_list Source Code elemental pure subroutine deallocate_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % model_list )) deallocate ( this % model_list ) end subroutine deallocate_model_list","tags":"","loc":"proc/deallocate_model_list.html"},{"title":"set_model_list – ForOpenAI","text":"private pure elemental subroutine set_model_list(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~set_model_list~~CallsGraph proc~set_model_list foropenai_ChatCompletion::ChatCompletion%set_model_list model_list model_list proc~set_model_list->model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_model_list~~CalledByGraph proc~set_model_list foropenai_ChatCompletion::ChatCompletion%set_model_list proc~print_model_list foropenai_ChatCompletion::ChatCompletion%print_model_list proc~print_model_list->proc~set_model_list proc~select_model foropenai_ChatCompletion::ChatCompletion%select_model proc~select_model->proc~set_model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_model_list Source Code elemental pure subroutine set_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this if (. not . allocated ( this % model_list )) allocate ( this % model_list ( 8 )) this % model_list ( 1 ) = trim ( 'gpt-4' ) this % model_list ( 2 ) = trim ( 'gpt-4-0613' ) this % model_list ( 3 ) = trim ( 'gpt-4-32k' ) this % model_list ( 4 ) = trim ( 'gpt-4-32k-0613' ) this % model_list ( 5 ) = trim ( 'gpt-3.5-turbo' ) this % model_list ( 6 ) = trim ( 'gpt-3.5-turbo-0613' ) this % model_list ( 7 ) = trim ( 'gpt-3.5-turbo-16k' ) this % model_list ( 8 ) = trim ( 'gpt-3.5-turbo-16k-0613' ) end subroutine set_model_list","tags":"","loc":"proc/set_model_list.html"},{"title":"print_model_list – ForOpenAI","text":"private impure elemental subroutine print_model_list(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~print_model_list~~CallsGraph proc~print_model_list foropenai_ChatCompletion::ChatCompletion%print_model_list model_list model_list proc~print_model_list->model_list proc~set_model_list foropenai_ChatCompletion::ChatCompletion%set_model_list proc~print_model_list->proc~set_model_list proc~set_model_list->model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_model_list Source Code elemental impure subroutine print_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this integer :: i call this % set_model_list () do i = 1 , size ( this % model_list ) print \"(I1,': ',A)\" , i , trim ( this % model_list ( i )) end do end subroutine print_model_list","tags":"","loc":"proc/print_model_list.html"},{"title":"set_temperature – ForOpenAI","text":"private pure elemental subroutine set_temperature(this, temperature) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: temperature Called by proc~~set_temperature~2~~CalledByGraph proc~set_temperature~2 foropenai_ChatCompletion::ChatCompletion%set_temperature proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_temperature~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_temperature Source Code elemental pure subroutine set_temperature ( this , temperature ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: temperature this % temperature = temperature end subroutine set_temperature","tags":"","loc":"proc/set_temperature~2.html"},{"title":"set_presence_penalty – ForOpenAI","text":"private pure elemental subroutine set_presence_penalty(this, presence_penalty) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: presence_penalty Called by proc~~set_presence_penalty~~CalledByGraph proc~set_presence_penalty foropenai_ChatCompletion::ChatCompletion%set_presence_penalty proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_presence_penalty Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_presence_penalty Source Code elemental pure subroutine set_presence_penalty ( this , presence_penalty ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: presence_penalty this % presence_penalty = presence_penalty end subroutine set_presence_penalty","tags":"","loc":"proc/set_presence_penalty.html"},{"title":"set_frequency_penalty – ForOpenAI","text":"private pure elemental subroutine set_frequency_penalty(this, frequency_penalty) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: frequency_penalty Called by proc~~set_frequency_penalty~~CalledByGraph proc~set_frequency_penalty foropenai_ChatCompletion::ChatCompletion%set_frequency_penalty proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_frequency_penalty Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_frequency_penalty Source Code elemental pure subroutine set_frequency_penalty ( this , frequency_penalty ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: frequency_penalty this % frequency_penalty = frequency_penalty end subroutine set_frequency_penalty","tags":"","loc":"proc/set_frequency_penalty.html"},{"title":"set_top_p – ForOpenAI","text":"private pure elemental subroutine set_top_p(this, top_p) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: top_p Called by proc~~set_top_p~~CalledByGraph proc~set_top_p foropenai_ChatCompletion::ChatCompletion%set_top_p proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_top_p Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_top_p Source Code elemental pure subroutine set_top_p ( this , top_p ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: top_p this % top_p = top_p end subroutine set_top_p","tags":"","loc":"proc/set_top_p.html"},{"title":"set_n – ForOpenAI","text":"private pure elemental subroutine set_n(this, n) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n Called by proc~~set_n~~CalledByGraph proc~set_n foropenai_ChatCompletion::ChatCompletion%set_n proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_n Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_n Source Code elemental pure subroutine set_n ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n this % n = n end subroutine set_n","tags":"","loc":"proc/set_n.html"},{"title":"set_stream – ForOpenAI","text":"private pure elemental subroutine set_stream(this, stream) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this logical, intent(in) :: stream Called by proc~~set_stream~~CalledByGraph proc~set_stream foropenai_ChatCompletion::ChatCompletion%set_stream proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_stream Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_stream Source Code elemental pure subroutine set_stream ( this , stream ) class ( ChatCompletion ), intent ( inout ) :: this logical , intent ( in ) :: stream this % stream = stream end subroutine set_stream","tags":"","loc":"proc/set_stream.html"},{"title":"set_url – ForOpenAI","text":"private pure elemental subroutine set_url(this, url) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: url Called by proc~~set_url~2~~CalledByGraph proc~set_url~2 foropenai_ChatCompletion::ChatCompletion%set_url proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_url~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_url Source Code elemental pure subroutine set_url ( this , url ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url","tags":"","loc":"proc/set_url~2.html"},{"title":"set_model – ForOpenAI","text":"private pure elemental subroutine set_model(this, model) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: model Called by proc~~set_model~2~~CalledByGraph proc~set_model~2 foropenai_ChatCompletion::ChatCompletion%set_model proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_model~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_model Source Code elemental pure subroutine set_model ( this , model ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: model this % model = trim ( model ) end subroutine set_model","tags":"","loc":"proc/set_model~2.html"},{"title":"init_messages – ForOpenAI","text":"private pure elemental subroutine init_messages(this, n) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n Calls proc~~init_messages~~CallsGraph proc~init_messages foropenai_ChatCompletion::ChatCompletion%init_messages messages messages proc~init_messages->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~init_messages~~CalledByGraph proc~init_messages foropenai_ChatCompletion::ChatCompletion%init_messages proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~init_messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code init_messages Source Code elemental pure subroutine init_messages ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n if (. not . allocated ( this % messages )) allocate ( this % messages ( n )) end subroutine init_messages","tags":"","loc":"proc/init_messages.html"},{"title":"set_role – ForOpenAI","text":"private pure elemental subroutine set_role(this, role) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role Contents Source Code set_role Source Code elemental pure subroutine set_role ( this , role ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: role this % role = role end subroutine set_role","tags":"","loc":"proc/set_role.html"},{"title":"set_content – ForOpenAI","text":"private pure elemental subroutine set_content(this, content) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: content Contents Source Code set_content Source Code elemental pure subroutine set_content ( this , content ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: content this % content = content end subroutine set_content","tags":"","loc":"proc/set_content.html"},{"title":"set_name – ForOpenAI","text":"private pure elemental subroutine set_name(this, name) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: name Contents Source Code set_name Source Code elemental pure subroutine set_name ( this , name ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: name this % name = name end subroutine set_name","tags":"","loc":"proc/set_name.html"},{"title":"check_chat_completion – ForOpenAI","text":"private impure elemental subroutine check_chat_completion(this, error) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(out) :: error Calls proc~~check_chat_completion~~CallsGraph proc~check_chat_completion foropenai_ChatCompletion::ChatCompletion%check_chat_completion messages messages proc~check_chat_completion->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code check_chat_completion Source Code elemental impure subroutine check_chat_completion ( this , error ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( out ) :: error integer :: i if ( len_trim ( this % api_key ) == 0 ) then print '(A)' , 'Error: api_key is not set.' error = 1 stop end if if ( len_trim ( this % url ) == 0 ) then print '(A)' , 'Error: url is not set.' error = 2 stop end if if ( len_trim ( this % model ) == 0 ) then print '(A)' , 'Error: model is not set.' error = 3 stop end if if (. not . allocated ( this % messages )) then print '(A)' , 'Error: messages is not set.' error = 4 stop end if do i = 1 , size ( this % messages ) if ( len_trim ( this % messages ( i )% role ) == 0 ) then print '(A,I1,A)' , 'Error: messages(' , i , ')%role is not set.' error = 5 stop end if end do do i = 1 , size ( this % messages ) if (. not . allocated ( this % messages ( i )% content )) then print '(A,I1,A)' , 'Error: messages(' , i , ')%content is not set.' error = 6 stop end if end do if ( this % temperature < 0.0 . or . this % temperature > 2.0 ) then print '(A)' , 'Error: temperature must be between 0.0 and 2.0.' error = 7 stop end if if ( this % max_tokens < 1 ) then print '(A)' , 'Error: max_tokens must be greater than 1' error = 8 stop end if if ( len_trim ( this % user_name ) == 0 ) then print '(A)' , 'Error: user_name is not set.' error = 9 stop end if error = 0 end subroutine check_chat_completion","tags":"","loc":"proc/check_chat_completion.html"},{"title":"create_chat_completion – ForOpenAI","text":"private impure elemental subroutine create_chat_completion(this) Uses http json_module proc~~create_chat_completion~~UsesGraph proc~create_chat_completion foropenai_ChatCompletion::ChatCompletion%create_chat_completion http http proc~create_chat_completion->http json_module json_module proc~create_chat_completion->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~create_chat_completion~~CallsGraph proc~create_chat_completion foropenai_ChatCompletion::ChatCompletion%create_chat_completion add add proc~create_chat_completion->add check check proc~create_chat_completion->check deserialize deserialize proc~create_chat_completion->deserialize destroy destroy proc~create_chat_completion->destroy get get proc~create_chat_completion->get initialize initialize proc~create_chat_completion->initialize messages messages proc~create_chat_completion->messages pair_type pair_type proc~create_chat_completion->pair_type print_to_string print_to_string proc~create_chat_completion->print_to_string proc~set_asisstant_response foropenai_ChatCompletion::ChatCompletion%set_asisstant_response proc~create_chat_completion->proc~set_asisstant_response request request proc~create_chat_completion->request proc~set_asisstant_response->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code create_chat_completion Source Code elemental impure subroutine create_chat_completion ( this ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this character ( len = :), allocatable :: assistant_response character ( len = :), allocatable :: jsonstr type ( pair_type ), allocatable :: req_header (:) type ( response_type ) :: response type ( json_file ) :: json logical :: found integer :: i character ( len = 10 ) :: i_str integer :: error call this % check ( error ) if ( error == 0 ) then req_header = [& pair_type ( 'Content-Type' , 'application/json' ),& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key ) // '' ),& pair_type ( 'OpenAI-Organization' , ' ' // trim ( this % organization ) // '' )& ] call json % initialize () call json % add ( 'model' , trim ( this % model )) do i = 1 , size ( this % messages ) write ( i_str , \"(I10)\" ) i call json % add ( 'messages(' // trim ( i_str ) // ').role' , this % messages ( i )% role ) call json % add ( 'messages(' // trim ( i_str ) // ').content' , this % messages ( i )% content ) ! call json%add('messages('//trim(i_str)//').name', this%messages(i)%name) end do call json % add ( 'user' , trim ( this % user_name )) call json % add ( 'temperature' , this % temperature ) call json % add ( 'max_tokens' , this % max_tokens ) call json % add ( 'stream' , this % stream ) call json % add ( 'n' , this % n ) call json % add ( 'presence_penalty' , this % presence_penalty ) call json % add ( 'frequency_penalty' , this % frequency_penalty ) call json % add ( 'top_p' , this % top_p ) call json % print_to_string ( jsonstr ) call json % destroy () response = request ( url = trim ( this % url ), method = HTTP_POST , data = jsonstr , header = req_header ) if ( response % ok ) then call json % initialize () call json % deserialize ( response % content ) call json % get ( \"choices(1).finish_reason\" , this % finish_reason ) call json % get ( \"usage.prompt_tokens\" , this % usage % prompt_tokens ) call json % get ( \"usage.completion_tokens\" , this % usage % completion_tokens ) call json % get ( \"usage.total_tokens\" , this % usage % total_tokens ) call json % get ( \"choices(1).message.content\" , assistant_response , found = found ) if (. not . found ) then call json % get ( \"error.message\" , jsonstr ) assistant_response = jsonstr end if call this % set_asisstant_response ( response = trim ( assistant_response )) call json % destroy () else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end if end subroutine create_chat_completion","tags":"","loc":"proc/create_chat_completion.html"},{"title":"deallocate_role – ForOpenAI","text":"private pure elemental subroutine deallocate_role(this) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this Called by proc~~deallocate_role~~CalledByGraph proc~deallocate_role foropenai_ChatCompletion::ChatCompletion_messages%deallocate_role proc~deallocate_chatcompletion_messages foropenai_ChatCompletion::ChatCompletion_messages%deallocate_ChatCompletion_messages proc~deallocate_chatcompletion_messages->proc~deallocate_role Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_role Source Code elemental pure subroutine deallocate_role ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % role )) deallocate ( this % role ) end subroutine deallocate_role","tags":"","loc":"proc/deallocate_role.html"},{"title":"deallocate_content – ForOpenAI","text":"private pure elemental subroutine deallocate_content(this) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this Called by proc~~deallocate_content~~CalledByGraph proc~deallocate_content foropenai_ChatCompletion::ChatCompletion_messages%deallocate_content proc~deallocate_chatcompletion_messages foropenai_ChatCompletion::ChatCompletion_messages%deallocate_ChatCompletion_messages proc~deallocate_chatcompletion_messages->proc~deallocate_content Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_content Source Code elemental pure subroutine deallocate_content ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % content )) deallocate ( this % content ) end subroutine deallocate_content","tags":"","loc":"proc/deallocate_content.html"},{"title":"deallocate_name – ForOpenAI","text":"private pure elemental subroutine deallocate_name(this) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this Called by proc~~deallocate_name~~CalledByGraph proc~deallocate_name foropenai_ChatCompletion::ChatCompletion_messages%deallocate_name proc~deallocate_chatcompletion_messages foropenai_ChatCompletion::ChatCompletion_messages%deallocate_ChatCompletion_messages proc~deallocate_chatcompletion_messages->proc~deallocate_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_name Source Code elemental pure subroutine deallocate_name ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % name )) deallocate ( this % name ) end subroutine deallocate_name","tags":"","loc":"proc/deallocate_name.html"},{"title":"deallocate_messages – ForOpenAI","text":"private pure elemental subroutine deallocate_messages(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_messages~~CalledByGraph proc~deallocate_messages foropenai_ChatCompletion::ChatCompletion%deallocate_messages proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_messages Source Code elemental pure subroutine deallocate_messages ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % messages )) deallocate ( this % messages ) end subroutine deallocate_messages","tags":"","loc":"proc/deallocate_messages.html"},{"title":"select_model – ForOpenAI","text":"private pure elemental subroutine select_model(this, n) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n Calls proc~~select_model~~CallsGraph proc~select_model foropenai_ChatCompletion::ChatCompletion%select_model model_list model_list proc~select_model->model_list proc~set_model_list foropenai_ChatCompletion::ChatCompletion%set_model_list proc~select_model->proc~set_model_list proc~set_model_list->model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code select_model Source Code elemental pure subroutine select_model ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n call this % set_model_list () this % model = this % model_list ( n ) end subroutine select_model","tags":"","loc":"proc/select_model.html"},{"title":"print_model – ForOpenAI","text":"private impure elemental subroutine print_model(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_model Source Code elemental impure subroutine print_model ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('model: ',A)\" , trim ( this % model ) end subroutine print_model","tags":"","loc":"proc/print_model~2.html"},{"title":"print_temperature – ForOpenAI","text":"private impure elemental subroutine print_temperature(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_temperature Source Code elemental impure subroutine print_temperature ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('temperature: ',F3.1)\" , this % temperature end subroutine print_temperature","tags":"","loc":"proc/print_temperature~2.html"},{"title":"print_presence_penalty – ForOpenAI","text":"private impure elemental subroutine print_presence_penalty(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_presence_penalty Source Code elemental impure subroutine print_presence_penalty ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('presence_penalty: ',F3.1)\" , this % presence_penalty end subroutine print_presence_penalty","tags":"","loc":"proc/print_presence_penalty.html"},{"title":"print_frequency_penalty – ForOpenAI","text":"private impure elemental subroutine print_frequency_penalty(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_frequency_penalty Source Code elemental impure subroutine print_frequency_penalty ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('frequency_penalty: ',F3.1)\" , this % frequency_penalty end subroutine print_frequency_penalty","tags":"","loc":"proc/print_frequency_penalty.html"},{"title":"print_top_p – ForOpenAI","text":"private impure elemental subroutine print_top_p(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_top_p Source Code elemental impure subroutine print_top_p ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('top_p: ',F3.1)\" , this % top_p end subroutine print_top_p","tags":"","loc":"proc/print_top_p.html"},{"title":"print_n – ForOpenAI","text":"private impure elemental subroutine print_n(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_n Source Code elemental impure subroutine print_n ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('n: ',I10)\" , this % n end subroutine print_n","tags":"","loc":"proc/print_n.html"},{"title":"print_stream – ForOpenAI","text":"private impure elemental subroutine print_stream(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_stream Source Code elemental impure subroutine print_stream ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('stream: ',L1)\" , this % stream end subroutine print_stream","tags":"","loc":"proc/print_stream.html"},{"title":"set_max_tokens – ForOpenAI","text":"private pure elemental subroutine set_max_tokens(this, max_tokens) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: max_tokens Called by proc~~set_max_tokens~~CalledByGraph proc~set_max_tokens foropenai_ChatCompletion::ChatCompletion%set_max_tokens proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_max_tokens Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_max_tokens Source Code elemental pure subroutine set_max_tokens ( this , max_tokens ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: max_tokens this % max_tokens = max_tokens end subroutine set_max_tokens","tags":"","loc":"proc/set_max_tokens.html"},{"title":"print_max_tokens – ForOpenAI","text":"private impure elemental subroutine print_max_tokens(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_max_tokens Source Code elemental impure subroutine print_max_tokens ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('max tokens: ',I4)\" , this % max_tokens end subroutine print_max_tokens","tags":"","loc":"proc/print_max_tokens.html"},{"title":"set_user_name – ForOpenAI","text":"private pure elemental subroutine set_user_name(this, user_name) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: user_name Called by proc~~set_user_name~~CalledByGraph proc~set_user_name foropenai_ChatCompletion::ChatCompletion%set_user_name proc~set_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%set_ChatCompletion_data proc~set_chatcompletion_data->proc~set_user_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_user_name Source Code elemental pure subroutine set_user_name ( this , user_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: user_name this % user_name = trim ( user_name ) end subroutine set_user_name","tags":"","loc":"proc/set_user_name.html"},{"title":"print_user_name – ForOpenAI","text":"private impure elemental subroutine print_user_name(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_user_name Source Code elemental impure subroutine print_user_name ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('user name: ',A)\" , trim ( this % user_name ) end subroutine print_user_name","tags":"","loc":"proc/print_user_name.html"},{"title":"print_prompt_tokens – ForOpenAI","text":"private impure elemental subroutine print_prompt_tokens(this) Type Bound usage Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Called by proc~~print_prompt_tokens~~CalledByGraph proc~print_prompt_tokens foropenai_ChatCompletion::usage%print_prompt_tokens proc~print_usage foropenai_ChatCompletion::usage%print_usage proc~print_usage->proc~print_prompt_tokens Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_prompt_tokens Source Code elemental impure subroutine print_prompt_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('prompt tokens: ',g0)\" , this % prompt_tokens end subroutine print_prompt_tokens","tags":"","loc":"proc/print_prompt_tokens.html"},{"title":"print_completion_tokens – ForOpenAI","text":"private impure elemental subroutine print_completion_tokens(this) Type Bound usage Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Called by proc~~print_completion_tokens~~CalledByGraph proc~print_completion_tokens foropenai_ChatCompletion::usage%print_completion_tokens proc~print_usage foropenai_ChatCompletion::usage%print_usage proc~print_usage->proc~print_completion_tokens Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_completion_tokens Source Code elemental impure subroutine print_completion_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('completion tokens: ',g0)\" , this % completion_tokens end subroutine print_completion_tokens","tags":"","loc":"proc/print_completion_tokens.html"},{"title":"print_total_tokens – ForOpenAI","text":"private impure elemental subroutine print_total_tokens(this) Type Bound usage Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Called by proc~~print_total_tokens~~CalledByGraph proc~print_total_tokens foropenai_ChatCompletion::usage%print_total_tokens proc~print_usage foropenai_ChatCompletion::usage%print_usage proc~print_usage->proc~print_total_tokens Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_total_tokens Source Code elemental impure subroutine print_total_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('total tokens: ',g0)\" , this % total_tokens end subroutine print_total_tokens","tags":"","loc":"proc/print_total_tokens.html"},{"title":"print_assisstant_response – ForOpenAI","text":"private impure elemental subroutine print_assisstant_response(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Contents Source Code print_assisstant_response Source Code elemental impure subroutine print_assisstant_response ( this ) class ( Translation ), intent ( inout ) :: this print \"('assisstant_response: ',A)\" , trim ( this % assisstant_response ) end subroutine print_assisstant_response","tags":"","loc":"proc/print_assisstant_response.html"},{"title":"set_assisstant_response – ForOpenAI","text":"private pure elemental subroutine set_assisstant_response(this, assisstant_response) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: assisstant_response Contents Source Code set_assisstant_response Source Code elemental pure subroutine set_assisstant_response ( this , assisstant_response ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: assisstant_response this % assisstant_response = trim ( assisstant_response ) end subroutine set_assisstant_response","tags":"","loc":"proc/set_assisstant_response.html"},{"title":"print_prompt – ForOpenAI","text":"private impure elemental subroutine print_prompt(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Contents Source Code print_prompt Source Code elemental impure subroutine print_prompt ( this ) class ( Translation ), intent ( inout ) :: this print \"('prompt: ',A)\" , trim ( this % prompt ) end subroutine print_prompt","tags":"","loc":"proc/print_prompt~2.html"},{"title":"set_prompt – ForOpenAI","text":"private pure elemental subroutine set_prompt(this, prompt) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: prompt Called by proc~~set_prompt~2~~CalledByGraph proc~set_prompt~2 foropenai_Translation::Translation%set_prompt proc~create_translation foropenai_Translation::Translation%create_translation proc~create_translation->proc~set_prompt~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_prompt Source Code elemental pure subroutine set_prompt ( this , prompt ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prompt this % prompt = trim ( prompt ) end subroutine set_prompt","tags":"","loc":"proc/set_prompt~2.html"},{"title":"deallocate_Translation – ForOpenAI","text":"private pure elemental subroutine deallocate_Translation(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Calls proc~~deallocate_translation~~CallsGraph proc~deallocate_translation foropenai_Translation::Translation%deallocate_Translation proc~deallocate_assisstant_response foropenai_Translation::Translation%deallocate_assisstant_response proc~deallocate_translation->proc~deallocate_assisstant_response proc~deallocate_file~2 foropenai_Translation::Translation%deallocate_file proc~deallocate_translation->proc~deallocate_file~2 proc~deallocate_model~3 foropenai_Translation::Translation%deallocate_model proc~deallocate_translation->proc~deallocate_model~3 proc~deallocate_prompt~2 foropenai_Translation::Translation%deallocate_prompt proc~deallocate_translation->proc~deallocate_prompt~2 proc~deallocate_url~3 foropenai_Translation::Translation%deallocate_url proc~deallocate_translation->proc~deallocate_url~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_Translation Source Code elemental pure subroutine deallocate_Translation ( this ) class ( Translation ), intent ( inout ) :: this call this % deallocate_url () call this % deallocate_model () call this % deallocate_prompt () call this % deallocate_file () call this % deallocate_assisstant_response () end subroutine deallocate_Translation","tags":"","loc":"proc/deallocate_translation.html"},{"title":"deallocate_url – ForOpenAI","text":"private pure elemental subroutine deallocate_url(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Called by proc~~deallocate_url~3~~CalledByGraph proc~deallocate_url~3 foropenai_Translation::Translation%deallocate_url proc~deallocate_translation foropenai_Translation::Translation%deallocate_Translation proc~deallocate_translation->proc~deallocate_url~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_url Source Code elemental pure subroutine deallocate_url ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url","tags":"","loc":"proc/deallocate_url~3.html"},{"title":"deallocate_model – ForOpenAI","text":"private pure elemental subroutine deallocate_model(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Called by proc~~deallocate_model~3~~CalledByGraph proc~deallocate_model~3 foropenai_Translation::Translation%deallocate_model proc~deallocate_translation foropenai_Translation::Translation%deallocate_Translation proc~deallocate_translation->proc~deallocate_model~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_model Source Code elemental pure subroutine deallocate_model ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % model )) deallocate ( this % model ) end subroutine deallocate_model","tags":"","loc":"proc/deallocate_model~3.html"},{"title":"deallocate_prompt – ForOpenAI","text":"private pure elemental subroutine deallocate_prompt(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Called by proc~~deallocate_prompt~2~~CalledByGraph proc~deallocate_prompt~2 foropenai_Translation::Translation%deallocate_prompt proc~deallocate_translation foropenai_Translation::Translation%deallocate_Translation proc~deallocate_translation->proc~deallocate_prompt~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_prompt Source Code elemental pure subroutine deallocate_prompt ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % prompt )) deallocate ( this % prompt ) end subroutine deallocate_prompt","tags":"","loc":"proc/deallocate_prompt~2.html"},{"title":"deallocate_file – ForOpenAI","text":"private pure elemental subroutine deallocate_file(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Called by proc~~deallocate_file~2~~CalledByGraph proc~deallocate_file~2 foropenai_Translation::Translation%deallocate_file proc~deallocate_translation foropenai_Translation::Translation%deallocate_Translation proc~deallocate_translation->proc~deallocate_file~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_file Source Code elemental pure subroutine deallocate_file ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % file )) deallocate ( this % file ) end subroutine deallocate_file","tags":"","loc":"proc/deallocate_file~2.html"},{"title":"deallocate_assisstant_response – ForOpenAI","text":"private pure elemental subroutine deallocate_assisstant_response(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Called by proc~~deallocate_assisstant_response~~CalledByGraph proc~deallocate_assisstant_response foropenai_Translation::Translation%deallocate_assisstant_response proc~deallocate_translation foropenai_Translation::Translation%deallocate_Translation proc~deallocate_translation->proc~deallocate_assisstant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_assisstant_response Source Code elemental pure subroutine deallocate_assisstant_response ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % assisstant_response )) deallocate ( this % assisstant_response ) end subroutine deallocate_assisstant_response","tags":"","loc":"proc/deallocate_assisstant_response.html"},{"title":"set_response_format – ForOpenAI","text":"private pure elemental subroutine set_response_format(this, response_format) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: response_format Called by proc~~set_response_format~2~~CalledByGraph proc~set_response_format~2 foropenai_Translation::Translation%set_response_format proc~set_translation_data foropenai_Translation::Translation%set_Translation_data proc~set_translation_data->proc~set_response_format~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_response_format Source Code elemental pure subroutine set_response_format ( this , response_format ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response_format this % response_format = trim ( response_format ) end subroutine set_response_format","tags":"","loc":"proc/set_response_format~2.html"},{"title":"load_response_format – ForOpenAI","text":"private impure elemental subroutine load_response_format(this) Uses json_module proc~~load_response_format~2~~UsesGraph proc~load_response_format~2 foropenai_Translation::Translation%load_response_format json_module json_module proc~load_response_format~2->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Calls proc~~load_response_format~2~~CallsGraph proc~load_response_format~2 foropenai_Translation::Translation%load_response_format destroy destroy proc~load_response_format~2->destroy get get proc~load_response_format~2->get initialize initialize proc~load_response_format~2->initialize load_file load_file proc~load_response_format~2->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_response_format~2~~CalledByGraph proc~load_response_format~2 foropenai_Translation::Translation%load_response_format proc~load_translation_data foropenai_Translation::Translation%load_Translation_data proc~load_translation_data->proc~load_response_format~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_response_format Source Code elemental impure subroutine load_response_format ( this ) use json_module , only : json_file class ( Translation ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Translation.response_format\" , tmp , found = found ) if ( found ) this % response_format = trim ( tmp ) call json % destroy () end subroutine load_response_format","tags":"","loc":"proc/load_response_format~2.html"},{"title":"print_response_format – ForOpenAI","text":"private impure elemental subroutine print_response_format(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Contents Source Code print_response_format Source Code elemental impure subroutine print_response_format ( this ) class ( Translation ), intent ( inout ) :: this print \"('response_format: ',A)\" , trim ( this % response_format ) end subroutine print_response_format","tags":"","loc":"proc/print_response_format~2.html"},{"title":"set_file – ForOpenAI","text":"private pure elemental subroutine set_file(this, file) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file Called by proc~~set_file~2~~CalledByGraph proc~set_file~2 foropenai_Translation::Translation%set_file proc~create_translation foropenai_Translation::Translation%create_translation proc~create_translation->proc~set_file~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_file Source Code elemental pure subroutine set_file ( this , file ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file this % file = trim ( file ) end subroutine set_file","tags":"","loc":"proc/set_file~2.html"},{"title":"set_Translation_data – ForOpenAI","text":"private impure elemental subroutine set_Translation_data(this, file_name, url, model, temperature, response_format) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model real, intent(in), optional :: temperature character(len=*), intent(in), optional :: response_format Calls proc~~set_translation_data~~CallsGraph proc~set_translation_data foropenai_Translation::Translation%set_Translation_data load load proc~set_translation_data->load proc~set_model~3 foropenai_Translation::Translation%set_model proc~set_translation_data->proc~set_model~3 proc~set_response_format~2 foropenai_Translation::Translation%set_response_format proc~set_translation_data->proc~set_response_format~2 proc~set_temperature~3 foropenai_Translation::Translation%set_temperature proc~set_translation_data->proc~set_temperature~3 proc~set_url~3 foropenai_Translation::Translation%set_url proc~set_translation_data->proc~set_url~3 set_file_name set_file_name proc~set_translation_data->set_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_Translation_data Source Code elemental impure subroutine set_Translation_data ( this , file_name , & url , model , temperature , response_format ) class ( Translation ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: url character ( len =* ), optional , intent ( in ) :: model real , optional , intent ( in ) :: temperature character ( len =* ), optional , intent ( in ) :: response_format if ( present ( url )) call this % set_url ( url = url ) if ( present ( model )) call this % set_model ( model = model ) if ( present ( temperature )) call this % set_temperature ( temperature = temperature ) if ( present ( response_format )) call this % set_response_format ( response_format = response_format ) if ( present ( file_name )) then call this % set_file_name ( file_name ) call this % load ( file_name ) end if end subroutine set_Translation_data","tags":"","loc":"proc/set_translation_data.html"},{"title":"load_Translation_data – ForOpenAI","text":"private impure elemental subroutine load_Translation_data(this, file_name) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~load_translation_data~~CallsGraph proc~load_translation_data foropenai_Translation::Translation%load_Translation_data proc~load_model~3 foropenai_Translation::Translation%load_model proc~load_translation_data->proc~load_model~3 proc~load_response_format~2 foropenai_Translation::Translation%load_response_format proc~load_translation_data->proc~load_response_format~2 proc~load_temperature~3 foropenai_Translation::Translation%load_temperature proc~load_translation_data->proc~load_temperature~3 proc~load_url~3 foropenai_Translation::Translation%load_url proc~load_translation_data->proc~load_url~3 set_file_name set_file_name proc~load_translation_data->set_file_name destroy destroy proc~load_model~3->destroy get get proc~load_model~3->get initialize initialize proc~load_model~3->initialize load_file load_file proc~load_model~3->load_file proc~load_response_format~2->destroy proc~load_response_format~2->get proc~load_response_format~2->initialize proc~load_response_format~2->load_file proc~load_temperature~3->destroy proc~load_temperature~3->get proc~load_temperature~3->initialize proc~load_temperature~3->load_file proc~load_url~3->destroy proc~load_url~3->get proc~load_url~3->initialize proc~load_url~3->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_Translation_data Source Code elemental impure subroutine load_Translation_data ( this , file_name ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_model () call this % load_temperature () call this % load_response_format () end subroutine load_Translation_data","tags":"","loc":"proc/load_translation_data.html"},{"title":"load_temperature – ForOpenAI","text":"private impure elemental subroutine load_temperature(this) Uses json_module proc~~load_temperature~3~~UsesGraph proc~load_temperature~3 foropenai_Translation::Translation%load_temperature json_module json_module proc~load_temperature~3->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Calls proc~~load_temperature~3~~CallsGraph proc~load_temperature~3 foropenai_Translation::Translation%load_temperature destroy destroy proc~load_temperature~3->destroy get get proc~load_temperature~3->get initialize initialize proc~load_temperature~3->initialize load_file load_file proc~load_temperature~3->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_temperature~3~~CalledByGraph proc~load_temperature~3 foropenai_Translation::Translation%load_temperature proc~load_translation_data foropenai_Translation::Translation%load_Translation_data proc~load_translation_data->proc~load_temperature~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_temperature Source Code elemental impure subroutine load_temperature ( this ) use json_module , only : json_file class ( Translation ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Translation.temperature\" , tmp , found = found ) if ( found ) this % temperature = tmp call json % destroy () end subroutine load_temperature","tags":"","loc":"proc/load_temperature~3.html"},{"title":"load_url – ForOpenAI","text":"private impure elemental subroutine load_url(this) Uses json_module proc~~load_url~3~~UsesGraph proc~load_url~3 foropenai_Translation::Translation%load_url json_module json_module proc~load_url~3->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Calls proc~~load_url~3~~CallsGraph proc~load_url~3 foropenai_Translation::Translation%load_url destroy destroy proc~load_url~3->destroy get get proc~load_url~3->get initialize initialize proc~load_url~3->initialize load_file load_file proc~load_url~3->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_url~3~~CalledByGraph proc~load_url~3 foropenai_Translation::Translation%load_url proc~load_translation_data foropenai_Translation::Translation%load_Translation_data proc~load_translation_data->proc~load_url~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_url Source Code elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( Translation ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Translation.url\" , tmp , found = found ) if ( found ) this % url = trim ( tmp ) call json % destroy () end subroutine load_url","tags":"","loc":"proc/load_url~3.html"},{"title":"load_model – ForOpenAI","text":"private impure elemental subroutine load_model(this) Uses json_module proc~~load_model~3~~UsesGraph proc~load_model~3 foropenai_Translation::Translation%load_model json_module json_module proc~load_model~3->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Calls proc~~load_model~3~~CallsGraph proc~load_model~3 foropenai_Translation::Translation%load_model destroy destroy proc~load_model~3->destroy get get proc~load_model~3->get initialize initialize proc~load_model~3->initialize load_file load_file proc~load_model~3->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_model~3~~CalledByGraph proc~load_model~3 foropenai_Translation::Translation%load_model proc~load_translation_data foropenai_Translation::Translation%load_Translation_data proc~load_translation_data->proc~load_model~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_model Source Code elemental impure subroutine load_model ( this ) use json_module , only : json_file class ( Translation ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Translation.model\" , tmp , found = found ) if ( found ) this % model = trim ( tmp ) call json % destroy () end subroutine load_model","tags":"","loc":"proc/load_model~3.html"},{"title":"set_temperature – ForOpenAI","text":"private pure elemental subroutine set_temperature(this, temperature) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this real, intent(in) :: temperature Called by proc~~set_temperature~3~~CalledByGraph proc~set_temperature~3 foropenai_Translation::Translation%set_temperature proc~set_translation_data foropenai_Translation::Translation%set_Translation_data proc~set_translation_data->proc~set_temperature~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_temperature Source Code elemental pure subroutine set_temperature ( this , temperature ) class ( Translation ), intent ( inout ) :: this real , intent ( in ) :: temperature this % temperature = temperature end subroutine set_temperature","tags":"","loc":"proc/set_temperature~3.html"},{"title":"set_url – ForOpenAI","text":"private pure elemental subroutine set_url(this, url) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: url Called by proc~~set_url~3~~CalledByGraph proc~set_url~3 foropenai_Translation::Translation%set_url proc~set_translation_data foropenai_Translation::Translation%set_Translation_data proc~set_translation_data->proc~set_url~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_url Source Code elemental pure subroutine set_url ( this , url ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url","tags":"","loc":"proc/set_url~3.html"},{"title":"set_model – ForOpenAI","text":"private pure elemental subroutine set_model(this, model) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: model Called by proc~~set_model~3~~CalledByGraph proc~set_model~3 foropenai_Translation::Translation%set_model proc~set_translation_data foropenai_Translation::Translation%set_Translation_data proc~set_translation_data->proc~set_model~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_model Source Code elemental pure subroutine set_model ( this , model ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: model this % model = trim ( model ) end subroutine set_model","tags":"","loc":"proc/set_model~3.html"},{"title":"create_translation – ForOpenAI","text":"private impure elemental subroutine create_translation(this, file, prompt) Uses http json_module proc~~create_translation~~UsesGraph proc~create_translation foropenai_Translation::Translation%create_translation http http proc~create_translation->http json_module json_module proc~create_translation->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file character(len=*), intent(in), optional :: prompt Calls proc~~create_translation~~CallsGraph proc~create_translation foropenai_Translation::Translation%create_translation deserialize deserialize proc~create_translation->deserialize destroy destroy proc~create_translation->destroy get get proc~create_translation->get initialize initialize proc~create_translation->initialize pair_type pair_type proc~create_translation->pair_type proc~set_file~2 foropenai_Translation::Translation%set_file proc~create_translation->proc~set_file~2 proc~set_prompt~2 foropenai_Translation::Translation%set_prompt proc~create_translation->proc~set_prompt~2 request request proc~create_translation->request Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code create_translation Source Code elemental impure subroutine create_translation ( this , file , prompt ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file character ( len =* ), intent ( in ), optional :: prompt type ( pair_type ), allocatable :: req_header (:), form_data (:), file_data type ( response_type ) :: response type ( json_file ) :: json character ( len = 1024 ) :: temperature_str call this % set_file ( file = file ) if ( present ( prompt )) then call this % set_prompt ( prompt = prompt ) else call this % set_prompt ( prompt = '' ) end if req_header = [& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key )),& pair_type ( 'Content-Type' , 'multipart/form-data' )& ] write ( temperature_str , '(f3.1)' ) this % temperature form_data = [& pair_type ( 'model' , trim ( this % model )),& pair_type ( 'prompt' , trim ( this % prompt )),& pair_type ( 'response_format' , trim ( this % response_format ))& ! pair_type('temperature', trim(temperature_str))& ] file_data = pair_type ( 'file' , trim ( this % file )) response = request ( url = this % url , method = HTTP_POST , header = req_header , form = form_data , file = file_data ) if ( response % ok ) then call json % initialize () call json % deserialize ( response % content ) call json % get ( \"text\" , this % assisstant_response ) call json % destroy () else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end subroutine create_translation","tags":"","loc":"proc/create_translation.html"},{"title":"print_model – ForOpenAI","text":"private impure elemental subroutine print_model(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Contents Source Code print_model Source Code elemental impure subroutine print_model ( this ) class ( Translation ), intent ( inout ) :: this print \"('model: ',A)\" , trim ( this % model ) end subroutine print_model","tags":"","loc":"proc/print_model~3.html"},{"title":"print_temperature – ForOpenAI","text":"private impure elemental subroutine print_temperature(this) Type Bound Translation Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this Contents Source Code print_temperature Source Code elemental impure subroutine print_temperature ( this ) class ( Translation ), intent ( inout ) :: this print \"('temperature: ',F3.1)\" , this % temperature end subroutine print_temperature","tags":"","loc":"proc/print_temperature~3.html"},{"title":"create_image – ForOpenAI","text":"private  subroutine create_image(this, prompt, n, size, response_format, user_name) Uses http json_module proc~~create_image~~UsesGraph proc~create_image foropenai_ImageGeneration::ImageGeneration%create_image http http proc~create_image->http json_module json_module proc~create_image->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: prompt integer, intent(in), optional :: n character(len=*), intent(in), optional :: size character(len=*), intent(in), optional :: response_format character(len=*), intent(in), optional :: user_name Calls proc~~create_image~~CallsGraph proc~create_image foropenai_ImageGeneration::ImageGeneration%create_image add add proc~create_image->add deserialize deserialize proc~create_image->deserialize destroy destroy proc~create_image->destroy get get proc~create_image->get initialize initialize proc~create_image->initialize pair_type pair_type proc~create_image->pair_type print_to_string print_to_string proc~create_image->print_to_string proc~set_assistant_response foropenai_ImageGeneration::ImageGeneration%set_assistant_response proc~create_image->proc~set_assistant_response proc~set_n~2 foropenai_ImageGeneration::ImageGeneration%set_n proc~create_image->proc~set_n~2 proc~set_prompt~3 foropenai_ImageGeneration::ImageGeneration%set_prompt proc~create_image->proc~set_prompt~3 proc~set_response_format~3 foropenai_ImageGeneration::ImageGeneration%set_response_format proc~create_image->proc~set_response_format~3 proc~set_size foropenai_ImageGeneration::ImageGeneration%set_size proc~create_image->proc~set_size proc~set_user_name~2 foropenai_ImageGeneration::ImageGeneration%set_user_name proc~create_image->proc~set_user_name~2 request request proc~create_image->request Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code create_image Source Code subroutine create_image ( this , prompt , n , size , response_format , user_name ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prompt integer , intent ( in ), optional :: n character ( len =* ), intent ( in ), optional :: size character ( len =* ), intent ( in ), optional :: response_format character ( len =* ), intent ( in ), optional :: user_name character ( len = :), allocatable :: assistant_response character ( len = :), allocatable :: jsonstr type ( pair_type ), allocatable :: req_header (:) type ( response_type ) :: response type ( json_file ) :: json logical :: found integer :: i character ( len = 10 ) :: i_str call this % set_prompt ( prompt = prompt ) if ( present ( n )) call this % set_n ( n = n ) if ( present ( size )) call this % set_size ( size = size ) if ( present ( response_format )) call this % set_response_format ( response_format = response_format ) if ( present ( user_name )) call this % set_user_name ( user_name = user_name ) req_header = [& pair_type ( 'Content-Type' , 'application/json' ),& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key ) // '' ),& pair_type ( 'OpenAI-Organization' , ' ' // trim ( this % organization ) // '' )& ] call json % initialize () call json % add ( 'prompt' , trim ( this % prompt )) call json % add ( 'n' , this % n ) call json % add ( 'size' , trim ( this % size )) call json % add ( 'response_format' , trim ( this % response_format )) call json % add ( 'user' , trim ( this % user_name )) call json % print_to_string ( jsonstr ) call json % destroy () response = request ( url = trim ( this % url ), method = HTTP_POST , data = jsonstr , header = req_header ) if ( response % ok ) then allocate ( this % assistant_response ( this % n )) call json % initialize () call json % deserialize ( response % content ) do i = 1 , this % n write ( i_str , \"(I10)\" ) i call json % get ( \"data(\" // trim ( i_str ) // \").url\" , assistant_response , found = found ) call this % set_assistant_response ( assistant_response = assistant_response , i = i ) end do call json % destroy () else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end subroutine create_image","tags":"","loc":"proc/create_image.html"},{"title":"load_url – ForOpenAI","text":"private impure elemental subroutine load_url(this) Uses json_module proc~~load_url~4~~UsesGraph proc~load_url~4 foropenai_ImageGeneration::ImageGeneration%load_url json_module json_module proc~load_url~4->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Calls proc~~load_url~4~~CallsGraph proc~load_url~4 foropenai_ImageGeneration::ImageGeneration%load_url destroy destroy proc~load_url~4->destroy get get proc~load_url~4->get initialize initialize proc~load_url~4->initialize load_file load_file proc~load_url~4->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_url~4~~CalledByGraph proc~load_url~4 foropenai_ImageGeneration::ImageGeneration%load_url proc~load_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%load_ImageGeneration_data proc~load_imagegeneration_data->proc~load_url~4 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_url Source Code elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.url\" , tmp , found = found ) if ( found ) this % url = trim ( tmp ) call json % destroy () end subroutine load_url","tags":"","loc":"proc/load_url~4.html"},{"title":"load_size – ForOpenAI","text":"private impure elemental subroutine load_size(this) Uses json_module proc~~load_size~~UsesGraph proc~load_size foropenai_ImageGeneration::ImageGeneration%load_size json_module json_module proc~load_size->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Calls proc~~load_size~~CallsGraph proc~load_size foropenai_ImageGeneration::ImageGeneration%load_size destroy destroy proc~load_size->destroy get get proc~load_size->get initialize initialize proc~load_size->initialize load_file load_file proc~load_size->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_size~~CalledByGraph proc~load_size foropenai_ImageGeneration::ImageGeneration%load_size proc~load_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%load_ImageGeneration_data proc~load_imagegeneration_data->proc~load_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_size Source Code elemental impure subroutine load_size ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.size\" , tmp , found = found ) if ( found ) this % size = trim ( tmp ) call json % destroy () end subroutine load_size","tags":"","loc":"proc/load_size.html"},{"title":"load_response_format – ForOpenAI","text":"private impure elemental subroutine load_response_format(this) Uses json_module proc~~load_response_format~3~~UsesGraph proc~load_response_format~3 foropenai_ImageGeneration::ImageGeneration%load_response_format json_module json_module proc~load_response_format~3->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Calls proc~~load_response_format~3~~CallsGraph proc~load_response_format~3 foropenai_ImageGeneration::ImageGeneration%load_response_format destroy destroy proc~load_response_format~3->destroy get get proc~load_response_format~3->get initialize initialize proc~load_response_format~3->initialize load_file load_file proc~load_response_format~3->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_response_format~3~~CalledByGraph proc~load_response_format~3 foropenai_ImageGeneration::ImageGeneration%load_response_format proc~load_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%load_ImageGeneration_data proc~load_imagegeneration_data->proc~load_response_format~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_response_format Source Code elemental impure subroutine load_response_format ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.response_format\" , tmp , found = found ) if ( found ) this % response_format = trim ( tmp ) call json % destroy () end subroutine load_response_format","tags":"","loc":"proc/load_response_format~3.html"},{"title":"load_n – ForOpenAI","text":"private impure elemental subroutine load_n(this) Uses json_module proc~~load_n~2~~UsesGraph proc~load_n~2 foropenai_ImageGeneration::ImageGeneration%load_n json_module json_module proc~load_n~2->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Calls proc~~load_n~2~~CallsGraph proc~load_n~2 foropenai_ImageGeneration::ImageGeneration%load_n destroy destroy proc~load_n~2->destroy get get proc~load_n~2->get initialize initialize proc~load_n~2->initialize load_file load_file proc~load_n~2->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_n~2~~CalledByGraph proc~load_n~2 foropenai_ImageGeneration::ImageGeneration%load_n proc~load_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%load_ImageGeneration_data proc~load_imagegeneration_data->proc~load_n~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_n Source Code elemental impure subroutine load_n ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json integer :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.n\" , tmp , found = found ) if ( found ) this % n = tmp call json % destroy () end subroutine load_n","tags":"","loc":"proc/load_n~2.html"},{"title":"load_user_name – ForOpenAI","text":"private impure elemental subroutine load_user_name(this) Uses json_module proc~~load_user_name~2~~UsesGraph proc~load_user_name~2 foropenai_ImageGeneration::ImageGeneration%load_user_name json_module json_module proc~load_user_name~2->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Calls proc~~load_user_name~2~~CallsGraph proc~load_user_name~2 foropenai_ImageGeneration::ImageGeneration%load_user_name destroy destroy proc~load_user_name~2->destroy get get proc~load_user_name~2->get initialize initialize proc~load_user_name~2->initialize load_file load_file proc~load_user_name~2->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_user_name~2~~CalledByGraph proc~load_user_name~2 foropenai_ImageGeneration::ImageGeneration%load_user_name proc~load_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%load_ImageGeneration_data proc~load_imagegeneration_data->proc~load_user_name~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_user_name Source Code elemental impure subroutine load_user_name ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.user_name\" , tmp , found = found ) if ( found ) this % user_name = trim ( tmp ) call json % destroy () end subroutine load_user_name","tags":"","loc":"proc/load_user_name~2.html"},{"title":"print_url – ForOpenAI","text":"private impure elemental subroutine print_url(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this Contents Source Code print_url Source Code elemental impure subroutine print_url ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"url: \" , this % url end subroutine print_url","tags":"","loc":"proc/print_url.html"},{"title":"print_size – ForOpenAI","text":"private impure elemental subroutine print_size(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this Contents Source Code print_size Source Code elemental impure subroutine print_size ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"size: \" , this % size end subroutine print_size","tags":"","loc":"proc/print_size.html"},{"title":"print_prompt – ForOpenAI","text":"private impure elemental subroutine print_prompt(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this Contents Source Code print_prompt Source Code elemental impure subroutine print_prompt ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"prompt: \" , this % prompt end subroutine print_prompt","tags":"","loc":"proc/print_prompt~3.html"},{"title":"print_response_format – ForOpenAI","text":"private impure elemental subroutine print_response_format(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this Contents Source Code print_response_format Source Code elemental impure subroutine print_response_format ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"response_format: \" , this % response_format end subroutine print_response_format","tags":"","loc":"proc/print_response_format~3.html"},{"title":"print_n – ForOpenAI","text":"private impure elemental subroutine print_n(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this Contents Source Code print_n Source Code elemental impure subroutine print_n ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"n: \" , this % n end subroutine print_n","tags":"","loc":"proc/print_n~2.html"},{"title":"print_user_name – ForOpenAI","text":"private impure elemental subroutine print_user_name(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this Contents Source Code print_user_name Source Code elemental impure subroutine print_user_name ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"user_name: \" , this % user_name end subroutine print_user_name","tags":"","loc":"proc/print_user_name~2.html"},{"title":"print_assistant_response – ForOpenAI","text":"private impure elemental subroutine print_assistant_response(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this Contents Source Code print_assistant_response Source Code elemental impure subroutine print_assistant_response ( this ) class ( ImageGeneration ), intent ( in ) :: this integer :: i do i = 1 , this % n print '(a,g0,a,a)' , \"assistant_response(\" , i , \"): \" , trim ( this % assistant_response ( i )) end do end subroutine print_assistant_response","tags":"","loc":"proc/print_assistant_response~2.html"},{"title":"set_url – ForOpenAI","text":"private pure elemental subroutine set_url(this, url) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: url Called by proc~~set_url~4~~CalledByGraph proc~set_url~4 foropenai_ImageGeneration::ImageGeneration%set_url proc~set_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%set_ImageGeneration_data proc~set_imagegeneration_data->proc~set_url~4 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_url Source Code elemental pure subroutine set_url ( this , url ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url","tags":"","loc":"proc/set_url~4.html"},{"title":"set_size – ForOpenAI","text":"private pure elemental subroutine set_size(this, size) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: size Called by proc~~set_size~~CalledByGraph proc~set_size foropenai_ImageGeneration::ImageGeneration%set_size proc~create_image foropenai_ImageGeneration::ImageGeneration%create_image proc~create_image->proc~set_size proc~set_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%set_ImageGeneration_data proc~set_imagegeneration_data->proc~set_size Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_size Source Code elemental pure subroutine set_size ( this , size ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: size this % size = trim ( size ) end subroutine set_size","tags":"","loc":"proc/set_size.html"},{"title":"set_prompt – ForOpenAI","text":"private pure elemental subroutine set_prompt(this, prompt) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: prompt Called by proc~~set_prompt~3~~CalledByGraph proc~set_prompt~3 foropenai_ImageGeneration::ImageGeneration%set_prompt proc~create_image foropenai_ImageGeneration::ImageGeneration%create_image proc~create_image->proc~set_prompt~3 proc~set_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%set_ImageGeneration_data proc~set_imagegeneration_data->proc~set_prompt~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_prompt Source Code elemental pure subroutine set_prompt ( this , prompt ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prompt this % prompt = trim ( prompt ) end subroutine set_prompt","tags":"","loc":"proc/set_prompt~3.html"},{"title":"set_response_format – ForOpenAI","text":"private pure elemental subroutine set_response_format(this, response_format) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: response_format Called by proc~~set_response_format~3~~CalledByGraph proc~set_response_format~3 foropenai_ImageGeneration::ImageGeneration%set_response_format proc~create_image foropenai_ImageGeneration::ImageGeneration%create_image proc~create_image->proc~set_response_format~3 proc~set_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%set_ImageGeneration_data proc~set_imagegeneration_data->proc~set_response_format~3 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_response_format Source Code elemental pure subroutine set_response_format ( this , response_format ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response_format this % response_format = trim ( response_format ) end subroutine set_response_format","tags":"","loc":"proc/set_response_format~3.html"},{"title":"set_n – ForOpenAI","text":"private pure elemental subroutine set_n(this, n) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this integer, intent(in) :: n Called by proc~~set_n~2~~CalledByGraph proc~set_n~2 foropenai_ImageGeneration::ImageGeneration%set_n proc~create_image foropenai_ImageGeneration::ImageGeneration%create_image proc~create_image->proc~set_n~2 proc~set_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%set_ImageGeneration_data proc~set_imagegeneration_data->proc~set_n~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_n Source Code elemental pure subroutine set_n ( this , n ) class ( ImageGeneration ), intent ( inout ) :: this integer , intent ( in ) :: n this % n = n end subroutine set_n","tags":"","loc":"proc/set_n~2.html"},{"title":"set_user_name – ForOpenAI","text":"private pure elemental subroutine set_user_name(this, user_name) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: user_name Called by proc~~set_user_name~2~~CalledByGraph proc~set_user_name~2 foropenai_ImageGeneration::ImageGeneration%set_user_name proc~create_image foropenai_ImageGeneration::ImageGeneration%create_image proc~create_image->proc~set_user_name~2 proc~set_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%set_ImageGeneration_data proc~set_imagegeneration_data->proc~set_user_name~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_user_name Source Code elemental pure subroutine set_user_name ( this , user_name ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: user_name this % user_name = trim ( user_name ) end subroutine set_user_name","tags":"","loc":"proc/set_user_name~2.html"},{"title":"set_assistant_response – ForOpenAI","text":"private pure elemental subroutine set_assistant_response(this, assistant_response, i) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: assistant_response integer, intent(in) :: i Called by proc~~set_assistant_response~~CalledByGraph proc~set_assistant_response foropenai_ImageGeneration::ImageGeneration%set_assistant_response proc~create_image foropenai_ImageGeneration::ImageGeneration%create_image proc~create_image->proc~set_assistant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_assistant_response Source Code elemental pure subroutine set_assistant_response ( this , assistant_response , i ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: assistant_response integer , intent ( in ) :: i this % assistant_response ( i ) = trim ( assistant_response ) end subroutine set_assistant_response","tags":"","loc":"proc/set_assistant_response.html"},{"title":"set_ImageGeneration_data – ForOpenAI","text":"private impure elemental subroutine set_ImageGeneration_data(this, file_name, url, size, prompt, response_format, n, user_name) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: size character(len=*), intent(in), optional :: prompt character(len=*), intent(in), optional :: response_format integer, intent(in), optional :: n character(len=*), intent(in), optional :: user_name Calls proc~~set_imagegeneration_data~~CallsGraph proc~set_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%set_ImageGeneration_data load load proc~set_imagegeneration_data->load proc~set_n~2 foropenai_ImageGeneration::ImageGeneration%set_n proc~set_imagegeneration_data->proc~set_n~2 proc~set_prompt~3 foropenai_ImageGeneration::ImageGeneration%set_prompt proc~set_imagegeneration_data->proc~set_prompt~3 proc~set_response_format~3 foropenai_ImageGeneration::ImageGeneration%set_response_format proc~set_imagegeneration_data->proc~set_response_format~3 proc~set_size foropenai_ImageGeneration::ImageGeneration%set_size proc~set_imagegeneration_data->proc~set_size proc~set_url~4 foropenai_ImageGeneration::ImageGeneration%set_url proc~set_imagegeneration_data->proc~set_url~4 proc~set_user_name~2 foropenai_ImageGeneration::ImageGeneration%set_user_name proc~set_imagegeneration_data->proc~set_user_name~2 set_file_name set_file_name proc~set_imagegeneration_data->set_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_ImageGeneration_data Source Code elemental impure subroutine set_ImageGeneration_data ( this , file_name , & url , size , prompt , response_format , n , user_name ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: url character ( len =* ), optional , intent ( in ) :: size character ( len =* ), optional , intent ( in ) :: prompt character ( len =* ), optional , intent ( in ) :: response_format integer , optional , intent ( in ) :: n character ( len =* ), optional , intent ( in ) :: user_name if ( present ( url )) call this % set_url ( url = url ) if ( present ( size )) call this % set_size ( size = size ) if ( present ( prompt )) call this % set_prompt ( prompt = prompt ) if ( present ( response_format )) call this % set_response_format ( response_format = response_format ) if ( present ( n )) call this % set_n ( n = n ) if ( present ( user_name )) call this % set_user_name ( user_name = user_name ) if ( present ( file_name )) then call this % set_file_name ( file_name ) call this % load ( file_name ) end if end subroutine set_ImageGeneration_data","tags":"","loc":"proc/set_imagegeneration_data.html"},{"title":"load_ImageGeneration_data – ForOpenAI","text":"private impure elemental subroutine load_ImageGeneration_data(this, file_name) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~load_imagegeneration_data~~CallsGraph proc~load_imagegeneration_data foropenai_ImageGeneration::ImageGeneration%load_ImageGeneration_data proc~load_n~2 foropenai_ImageGeneration::ImageGeneration%load_n proc~load_imagegeneration_data->proc~load_n~2 proc~load_response_format~3 foropenai_ImageGeneration::ImageGeneration%load_response_format proc~load_imagegeneration_data->proc~load_response_format~3 proc~load_size foropenai_ImageGeneration::ImageGeneration%load_size proc~load_imagegeneration_data->proc~load_size proc~load_url~4 foropenai_ImageGeneration::ImageGeneration%load_url proc~load_imagegeneration_data->proc~load_url~4 proc~load_user_name~2 foropenai_ImageGeneration::ImageGeneration%load_user_name proc~load_imagegeneration_data->proc~load_user_name~2 set_file_name set_file_name proc~load_imagegeneration_data->set_file_name destroy destroy proc~load_n~2->destroy get get proc~load_n~2->get initialize initialize proc~load_n~2->initialize load_file load_file proc~load_n~2->load_file proc~load_response_format~3->destroy proc~load_response_format~3->get proc~load_response_format~3->initialize proc~load_response_format~3->load_file proc~load_size->destroy proc~load_size->get proc~load_size->initialize proc~load_size->load_file proc~load_url~4->destroy proc~load_url~4->get proc~load_url~4->initialize proc~load_url~4->load_file proc~load_user_name~2->destroy proc~load_user_name~2->get proc~load_user_name~2->initialize proc~load_user_name~2->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_ImageGeneration_data Source Code elemental impure subroutine load_ImageGeneration_data ( this , file_name ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_size () call this % load_response_format () call this % load_n () call this % load_user_name () end subroutine load_ImageGeneration_data","tags":"","loc":"proc/load_imagegeneration_data.html"},{"title":"deallocate_url – ForOpenAI","text":"private pure elemental subroutine deallocate_url(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Called by proc~~deallocate_url~4~~CalledByGraph proc~deallocate_url~4 foropenai_ImageGeneration::ImageGeneration%deallocate_url proc~deallocate_imagegeneration foropenai_ImageGeneration::ImageGeneration%deallocate_ImageGeneration proc~deallocate_imagegeneration->proc~deallocate_url~4 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_url Source Code elemental pure subroutine deallocate_url ( this ) class ( ImageGeneration ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url","tags":"","loc":"proc/deallocate_url~4.html"},{"title":"deallocate_user_name – ForOpenAI","text":"private pure elemental subroutine deallocate_user_name(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Called by proc~~deallocate_user_name~2~~CalledByGraph proc~deallocate_user_name~2 foropenai_ImageGeneration::ImageGeneration%deallocate_user_name proc~deallocate_imagegeneration foropenai_ImageGeneration::ImageGeneration%deallocate_ImageGeneration proc~deallocate_imagegeneration->proc~deallocate_user_name~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_user_name Source Code elemental pure subroutine deallocate_user_name ( this ) class ( ImageGeneration ), intent ( inout ) :: this if ( allocated ( this % user_name )) deallocate ( this % user_name ) end subroutine deallocate_user_name","tags":"","loc":"proc/deallocate_user_name~2.html"},{"title":"deallocate_assistant_response – ForOpenAI","text":"private pure elemental subroutine deallocate_assistant_response(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Called by proc~~deallocate_assistant_response~~CalledByGraph proc~deallocate_assistant_response foropenai_ImageGeneration::ImageGeneration%deallocate_assistant_response proc~deallocate_imagegeneration foropenai_ImageGeneration::ImageGeneration%deallocate_ImageGeneration proc~deallocate_imagegeneration->proc~deallocate_assistant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_assistant_response Source Code elemental pure subroutine deallocate_assistant_response ( this ) class ( ImageGeneration ), intent ( inout ) :: this if ( allocated ( this % assistant_response )) deallocate ( this % assistant_response ) end subroutine deallocate_assistant_response","tags":"","loc":"proc/deallocate_assistant_response.html"},{"title":"deallocate_ImageGeneration – ForOpenAI","text":"private pure elemental subroutine deallocate_ImageGeneration(this) Type Bound ImageGeneration Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this Calls proc~~deallocate_imagegeneration~~CallsGraph proc~deallocate_imagegeneration foropenai_ImageGeneration::ImageGeneration%deallocate_ImageGeneration proc~deallocate_assistant_response foropenai_ImageGeneration::ImageGeneration%deallocate_assistant_response proc~deallocate_imagegeneration->proc~deallocate_assistant_response proc~deallocate_url~4 foropenai_ImageGeneration::ImageGeneration%deallocate_url proc~deallocate_imagegeneration->proc~deallocate_url~4 proc~deallocate_user_name~2 foropenai_ImageGeneration::ImageGeneration%deallocate_user_name proc~deallocate_imagegeneration->proc~deallocate_user_name~2 Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_ImageGeneration Source Code elemental pure subroutine deallocate_ImageGeneration ( this ) class ( ImageGeneration ), intent ( inout ) :: this call this % deallocate_url () call this % deallocate_user_name () call this % deallocate_assistant_response () end subroutine deallocate_ImageGeneration","tags":"","loc":"proc/deallocate_imagegeneration.html"},{"title":"foropenai_base – ForOpenAI","text":"Used by module~~foropenai_base~~UsedByGraph module~foropenai_base foropenai_base module~foropenai foropenai module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai->module~foropenai_imagegeneration module~foropenai_transcription foropenai_Transcription module~foropenai->module~foropenai_transcription module~foropenai_translation foropenai_Translation module~foropenai->module~foropenai_translation module~foropenai_chatcompletion->module~foropenai_base module~foropenai_imagegeneration->module~foropenai_base module~foropenai_transcription->module~foropenai_base module~foropenai_translation->module~foropenai_base program~test_base test_base program~test_base->module~foropenai program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai program~test_imagegeneration test_ImageGeneration program~test_imagegeneration->module~foropenai program~test_transcription test_Transcription program~test_transcription->module~foropenai program~test_translation test_Translation program~test_translation->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Derived Types openai Subroutines set_base_data set_api_key_env set_organization_env deallocate_openai deallocate_api_key deallocate_organization deallocate_file_name load_base_data set_organization set_api_key load_api_key set_file_name load_organization print_api_key print_organization print_file_name Derived Types type, public :: openai Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' Type-Bound Procedures procedure\n                    ,                  private\n                  :: deallocate_api_key Subroutine procedure\n                    ,                  private\n                  :: deallocate_organization Subroutine procedure\n                    ,                  private\n                  :: deallocate_file_name Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_openai Subroutine procedure\n                    ,                  private\n                  :: load_api_key Subroutine procedure\n                    ,                  private\n                  :: load_organization Subroutine procedure\n                    ,                  public\n,                   :: load_base_data Subroutine procedure\n                    ,                  public\n,                   :: print_api_key Subroutine procedure\n                    ,                  public\n,                   :: print_organization Subroutine procedure\n                    ,                  public\n,                   :: print_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_file_name Subroutine procedure\n                    ,                  private\n                  :: set_api_key Subroutine procedure\n                    ,                  private\n                  :: set_organization Subroutine procedure\n                    ,                  private\n                  :: set_api_key_env Subroutine procedure\n                    ,                  private\n                  :: set_organization_env Subroutine procedure\n                    ,                  public\n,                   :: set_base_data Subroutine Subroutines private impure elemental subroutine set_base_data (this, file_name, api_key, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: api_key character(len=*), intent(in), optional :: organization private impure elemental subroutine set_api_key_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status private impure elemental subroutine set_organization_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status private pure elemental subroutine deallocate_openai (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private pure elemental subroutine deallocate_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private pure elemental subroutine deallocate_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private pure elemental subroutine deallocate_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name private pure elemental subroutine set_organization (this, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: organization private pure elemental subroutine set_api_key (this, api_key) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: api_key private impure elemental subroutine load_api_key (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name private impure elemental subroutine load_organization (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this","tags":"","loc":"module/foropenai_base.html"},{"title":"foropenai_Transcription – ForOpenAI","text":"Uses foropenai_base module~~foropenai_transcription~~UsesGraph module~foropenai_transcription foropenai_Transcription module~foropenai_base foropenai_base module~foropenai_transcription->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~foropenai_transcription~~UsedByGraph module~foropenai_transcription foropenai_Transcription module~foropenai foropenai module~foropenai->module~foropenai_transcription program~test_base test_base program~test_base->module~foropenai program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai program~test_imagegeneration test_ImageGeneration program~test_imagegeneration->module~foropenai program~test_transcription test_Transcription program~test_transcription->module~foropenai program~test_translation test_Translation program~test_translation->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Derived Types Transcription Subroutines print_text set_text print_prompt set_prompt deallocate_Transcription deallocate_url deallocate_model deallocate_language deallocate_prompt deallocate_file deallocate_text set_response_format load_response_format print_response_format load_language print_language set_language set_file set_Transcription_data load_Transcription_data load_temperature load_url load_model set_temperature set_url set_model create_transcription print_model print_temperature Derived Types type, public, extends( openai ) :: Transcription Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=:), public, allocatable :: model character(len=:), public, allocatable :: language character(len=:), public, allocatable :: prompt character(len=:), public, allocatable :: file character(len=:), public, allocatable :: text character(len=4), public :: response_format = 'json' real, public :: temperature = 1.0 Type-Bound Procedures procedure\n                    ,                  public\n,                   :: load_base_data Subroutine procedure\n                    ,                  public\n,                   :: print_api_key Subroutine procedure\n                    ,                  public\n,                   :: print_organization Subroutine procedure\n                    ,                  public\n,                   :: print_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_base_data Subroutine procedure\n                    ,                  public\n,                   :: create => create_transcription Subroutine procedure\n                    ,                  public\n,                   :: deallocate_url Subroutine procedure\n                    ,                  public\n,                   :: deallocate_model Subroutine procedure\n                    ,                  public\n,                   :: deallocate_language Subroutine procedure\n                    ,                  public\n,                   :: deallocate_prompt Subroutine procedure\n                    ,                  public\n,                   :: deallocate_file Subroutine procedure\n                    ,                  public\n,                   :: deallocate_text Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_Transcription Subroutine procedure\n                    ,                  public\n,                   :: load => load_Transcription_data Subroutine procedure\n                    ,                  public\n,                   :: load_url Subroutine procedure\n                    ,                  public\n,                   :: load_model Subroutine procedure\n                    ,                  public\n,                   :: load_temperature Subroutine procedure\n                    ,                  public\n,                   :: load_language Subroutine procedure\n                    ,                  public\n,                   :: load_response_format Subroutine procedure\n                    ,                  public\n,                   :: print_model Subroutine procedure\n                    ,                  public\n,                   :: print_temperature Subroutine procedure\n                    ,                  public\n,                   :: print_language Subroutine procedure\n                    ,                  public\n,                   :: print_response_format Subroutine procedure\n                    ,                  public\n,                   :: print_prompt Subroutine procedure\n                    ,                  public\n,                   :: print_text Subroutine procedure\n                    ,                  public\n,                   :: set_text Subroutine procedure\n                    ,                  public\n,                   :: set_prompt Subroutine procedure\n                    ,                  public\n,                   :: set_url Subroutine procedure\n                    ,                  public\n,                   :: set_model Subroutine procedure\n                    ,                  public\n,                   :: set_temperature Subroutine procedure\n                    ,                  public\n,                   :: set_language Subroutine procedure\n                    ,                  public\n,                   :: set_response_format Subroutine procedure\n                    ,                  public\n,                   :: set_file Subroutine procedure\n                    ,                  public\n,                   :: set => set_Transcription_data Subroutine Subroutines private impure elemental subroutine print_text (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine set_text (this, text) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: text private impure elemental subroutine print_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine set_prompt (this, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: prompt private pure elemental subroutine deallocate_Transcription (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine deallocate_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine deallocate_language (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine deallocate_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine deallocate_file (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine deallocate_text (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine set_response_format (this, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: response_format private impure elemental subroutine load_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private impure elemental subroutine print_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private impure elemental subroutine load_language (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private impure elemental subroutine print_language (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine set_language (this, language) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: language private pure elemental subroutine set_file (this, file) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file private impure elemental subroutine set_Transcription_data (this, file_name, url, model, temperature, language, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model real, intent(in), optional :: temperature character(len=*), intent(in), optional :: language character(len=*), intent(in), optional :: response_format private impure elemental subroutine load_Transcription_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file_name private impure elemental subroutine load_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private impure elemental subroutine load_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private pure elemental subroutine set_temperature (this, temperature) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this real, intent(in) :: temperature private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: url private pure elemental subroutine set_model (this, model) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: model private impure elemental subroutine create_transcription (this, file, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this character(len=*), intent(in) :: file character(len=*), intent(in), optional :: prompt private impure elemental subroutine print_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this private impure elemental subroutine print_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Transcription ), intent(inout) :: this","tags":"","loc":"module/foropenai_transcription.html"},{"title":"foropenai_ChatCompletion – ForOpenAI","text":"Uses foropenai_base module~~foropenai_chatcompletion~~UsesGraph module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai_base foropenai_base module~foropenai_chatcompletion->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~foropenai_chatcompletion~~UsedByGraph module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai foropenai module~foropenai->module~foropenai_chatcompletion program~test_base test_base program~test_base->module~foropenai program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai program~test_imagegeneration test_ImageGeneration program~test_imagegeneration->module~foropenai program~test_transcription test_Transcription program~test_transcription->module~foropenai program~test_translation test_Translation program~test_translation->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Derived Types usage ChatCompletion_messages ChatCompletion Functions get_assistant_response get_user_message Subroutines print_usage set_ChatCompletion_data set_user_message set_asisstant_response print_assistant_response print_user_message deallocate_finish_reason print_finish_reason conversation write_history read_user_message deallocate_ChatCompletion_messages deallocate_ChatCompletion deallocate_url deallocate_model deallocate_user_name load_ChatCompletion_data set_message load_max_tokens load_temperature load_presence_penalty load_frequency_penalty load_top_p load_n load_stream load_url load_model load_user_name deallocate_model_list set_model_list print_model_list set_temperature set_presence_penalty set_frequency_penalty set_top_p set_n set_stream set_url set_model init_messages set_role set_content set_name check_chat_completion create_chat_completion deallocate_role deallocate_content deallocate_name deallocate_messages select_model print_model print_temperature print_presence_penalty print_frequency_penalty print_top_p print_n print_stream set_max_tokens print_max_tokens set_user_name print_user_name print_prompt_tokens print_completion_tokens print_total_tokens Derived Types type, private :: usage Components Type Visibility Attributes Name Initial integer, public :: prompt_tokens = 0 integer, public :: completion_tokens = 0 integer, public :: total_tokens = 0 Type-Bound Procedures procedure\n                    ,                  public\n,                   :: print_prompt_tokens Subroutine procedure\n                    ,                  public\n,                   :: print_completion_tokens Subroutine procedure\n                    ,                  public\n,                   :: print_total_tokens Subroutine procedure\n                    ,                  public\n,                   :: print => print_usage Subroutine type, private :: ChatCompletion_messages Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: role character(len=:), public, allocatable :: content character(len=:), public, allocatable :: name Type-Bound Procedures procedure\n                    ,                  public\n,                   :: deallocate_role Subroutine procedure\n                    ,                  public\n,                   :: deallocate_content Subroutine procedure\n                    ,                  public\n,                   :: deallocate_name Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_ChatCompletion_messages Subroutine procedure\n                    ,                  public\n,                   :: set => set_message Subroutine procedure\n                    ,                  public\n,                   :: set_role Subroutine procedure\n                    ,                  public\n,                   :: set_content Subroutine procedure\n                    ,                  public\n,                   :: set_name Subroutine type, public, extends( openai ) :: ChatCompletion Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=:), public, allocatable :: model character(len=:), public, allocatable :: user_name character(len=256), public, allocatable :: model_list (:) type( ChatCompletion_messages ), public, allocatable :: messages (:) integer, public :: max_tokens type( usage ), public :: usage real, public :: temperature = 1.0 real, public :: presence_penalty = 0.0 real, public :: frequency_penalty = 0.0 real, public :: top_p = 1.0 logical, public :: stream = .false. integer, public :: n = 1 character(len=:), public, allocatable :: finish_reason Type-Bound Procedures procedure\n                    ,                  public\n,                   :: load_base_data Subroutine procedure\n                    ,                  public\n,                   :: print_api_key Subroutine procedure\n                    ,                  public\n,                   :: print_organization Subroutine procedure\n                    ,                  public\n,                   :: print_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_base_data Subroutine procedure\n                    ,                  public\n,                   :: check => check_chat_completion Subroutine procedure\n                    ,                  public\n,                   :: create => create_chat_completion Subroutine procedure\n                    ,                  public\n,                   :: conversation Subroutine procedure\n                    ,                  public\n,                   :: deallocate_messages Subroutine procedure\n                    ,                  public\n,                   :: deallocate_model_list Subroutine procedure\n                    ,                  public\n,                   :: deallocate_url Subroutine procedure\n                    ,                  public\n,                   :: deallocate_model Subroutine procedure\n                    ,                  public\n,                   :: deallocate_user_name Subroutine procedure\n                    ,                  public\n,                   :: deallocate_finish_reason Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_ChatCompletion Subroutine procedure\n                    ,                  public\n,                   :: get_assistant_response Function procedure\n                    ,                  public\n,                   :: get_user_message Function procedure\n                    ,                  public\n,                   :: init_messages Subroutine procedure\n                    ,                  public\n,                   :: load => load_ChatCompletion_data Subroutine procedure\n                    ,                  public\n,                   :: load_user_name Subroutine procedure\n                    ,                  public\n,                   :: load_url Subroutine procedure\n                    ,                  public\n,                   :: load_model Subroutine procedure\n                    ,                  public\n,                   :: load_temperature Subroutine procedure\n                    ,                  public\n,                   :: load_presence_penalty Subroutine procedure\n                    ,                  public\n,                   :: load_frequency_penalty Subroutine procedure\n                    ,                  public\n,                   :: load_top_p Subroutine procedure\n                    ,                  public\n,                   :: load_n Subroutine procedure\n                    ,                  public\n,                   :: load_stream Subroutine procedure\n                    ,                  public\n,                   :: load_max_tokens Subroutine procedure\n                    ,                  public\n,                   :: read_user_message Subroutine procedure\n                    ,                  public\n,                   :: print_user_name Subroutine procedure\n                    ,                  public\n,                   :: print_model_list Subroutine procedure\n                    ,                  public\n,                   :: print_model Subroutine procedure\n                    ,                  public\n,                   :: print_temperature Subroutine procedure\n                    ,                  public\n,                   :: print_presence_penalty Subroutine procedure\n                    ,                  public\n,                   :: print_frequency_penalty Subroutine procedure\n                    ,                  public\n,                   :: print_top_p Subroutine procedure\n                    ,                  public\n,                   :: print_n Subroutine procedure\n                    ,                  public\n,                   :: print_stream Subroutine procedure\n                    ,                  public\n,                   :: print_max_tokens Subroutine procedure\n                    ,                  public\n,                   :: print_user_message Subroutine procedure\n                    ,                  public\n,                   :: print_assistant_response Subroutine procedure\n                    ,                  public\n,                   :: set_user_name Subroutine procedure\n                    ,                  public\n,                   :: set_url Subroutine procedure\n                    ,                  public\n,                   :: set_model Subroutine procedure\n                    ,                  public\n,                   :: set_model_list Subroutine procedure\n                    ,                  public\n,                   :: select_model Subroutine procedure\n                    ,                  public\n,                   :: set_temperature Subroutine procedure\n                    ,                  public\n,                   :: set_presence_penalty Subroutine procedure\n                    ,                  public\n,                   :: set_frequency_penalty Subroutine procedure\n                    ,                  public\n,                   :: set_top_p Subroutine procedure\n                    ,                  public\n,                   :: set_n Subroutine procedure\n                    ,                  public\n,                   :: set_stream Subroutine procedure\n                    ,                  public\n,                   :: set_max_tokens Subroutine procedure\n                    ,                  public\n,                   :: set_asisstant_response Subroutine procedure\n                    ,                  public\n,                   :: set_user_message Subroutine procedure\n                    ,                  public\n,                   :: set => set_ChatCompletion_data Subroutine procedure\n                    ,                  public\n,                   :: write_history Subroutine procedure\n                    ,                  public\n,                   :: print_finish_reason Subroutine Functions private pure function get_assistant_response (this) result(response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable private pure function get_user_message (this) result(message) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable Subroutines private impure elemental subroutine print_usage (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this private impure elemental subroutine set_ChatCompletion_data (this, file_name, url, model, user_name, temperature, presence_penalty, frequency_penalty, top_p, n, stream, max_tokens) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model character(len=*), intent(in), optional :: user_name real, intent(in), optional :: temperature real, intent(in), optional :: presence_penalty real, intent(in), optional :: frequency_penalty real, intent(in), optional :: top_p integer, intent(in), optional :: n logical, intent(in), optional :: stream integer, intent(in), optional :: max_tokens private pure elemental subroutine set_user_message (this, message) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: message private pure elemental subroutine set_asisstant_response (this, response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: response private impure elemental subroutine print_assistant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_user_message (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_finish_reason (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_finish_reason (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine conversation (this, file_name_base, file_name_ChatCompletion, input_file, output_file, inputfile_command, exit_command) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name_base character(len=*), intent(in) :: file_name_ChatCompletion character(len=*), intent(in) :: input_file character(len=*), intent(in) :: output_file character(len=*), intent(in) :: inputfile_command character(len=*), intent(in) :: exit_command private impure elemental subroutine write_history (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name private impure elemental subroutine read_user_message (this, file_name, command) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in) :: command private pure elemental subroutine deallocate_ChatCompletion_messages (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this private pure elemental subroutine deallocate_ChatCompletion (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_ChatCompletion_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name private pure elemental subroutine set_message (this, role, content, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role character(len=*), intent(in) :: content character(len=*), intent(in), optional :: name private impure elemental subroutine load_max_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_presence_penalty (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_frequency_penalty (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_top_p (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_n (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_stream (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine set_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine set_temperature (this, temperature) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: temperature private pure elemental subroutine set_presence_penalty (this, presence_penalty) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: presence_penalty private pure elemental subroutine set_frequency_penalty (this, frequency_penalty) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: frequency_penalty private pure elemental subroutine set_top_p (this, top_p) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: top_p private pure elemental subroutine set_n (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n private pure elemental subroutine set_stream (this, stream) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this logical, intent(in) :: stream private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: url private pure elemental subroutine set_model (this, model) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: model private pure elemental subroutine init_messages (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n private pure elemental subroutine set_role (this, role) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role private pure elemental subroutine set_content (this, content) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: content private pure elemental subroutine set_name (this, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: name private impure elemental subroutine check_chat_completion (this, error) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(out) :: error private impure elemental subroutine create_chat_completion (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_role (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this private pure elemental subroutine deallocate_content (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this private pure elemental subroutine deallocate_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this private pure elemental subroutine deallocate_messages (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine select_model (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n private impure elemental subroutine print_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_presence_penalty (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_frequency_penalty (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_top_p (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_n (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_stream (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine set_max_tokens (this, max_tokens) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: max_tokens private impure elemental subroutine print_max_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine set_user_name (this, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: user_name private impure elemental subroutine print_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_prompt_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this private impure elemental subroutine print_completion_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this private impure elemental subroutine print_total_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this","tags":"","loc":"module/foropenai_chatcompletion.html"},{"title":"foropenai_Translation – ForOpenAI","text":"Uses foropenai_base module~~foropenai_translation~~UsesGraph module~foropenai_translation foropenai_Translation module~foropenai_base foropenai_base module~foropenai_translation->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~foropenai_translation~~UsedByGraph module~foropenai_translation foropenai_Translation module~foropenai foropenai module~foropenai->module~foropenai_translation program~test_base test_base program~test_base->module~foropenai program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai program~test_imagegeneration test_ImageGeneration program~test_imagegeneration->module~foropenai program~test_transcription test_Transcription program~test_transcription->module~foropenai program~test_translation test_Translation program~test_translation->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Derived Types Translation Subroutines print_assisstant_response set_assisstant_response print_prompt set_prompt deallocate_Translation deallocate_url deallocate_model deallocate_prompt deallocate_file deallocate_assisstant_response set_response_format load_response_format print_response_format set_file set_Translation_data load_Translation_data load_temperature load_url load_model set_temperature set_url set_model create_translation print_model print_temperature Derived Types type, public, extends( openai ) :: Translation Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=:), public, allocatable :: model character(len=:), public, allocatable :: prompt character(len=:), public, allocatable :: file character(len=:), public, allocatable :: assisstant_response character(len=4), public :: response_format = 'json' real, public :: temperature = 1.0 Type-Bound Procedures procedure\n                    ,                  public\n,                   :: load_base_data Subroutine procedure\n                    ,                  public\n,                   :: print_api_key Subroutine procedure\n                    ,                  public\n,                   :: print_organization Subroutine procedure\n                    ,                  public\n,                   :: print_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_base_data Subroutine procedure\n                    ,                  public\n,                   :: create => create_translation Subroutine procedure\n                    ,                  public\n,                   :: deallocate_url Subroutine procedure\n                    ,                  public\n,                   :: deallocate_model Subroutine procedure\n                    ,                  public\n,                   :: deallocate_prompt Subroutine procedure\n                    ,                  public\n,                   :: deallocate_file Subroutine procedure\n                    ,                  public\n,                   :: deallocate_assisstant_response Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_Translation Subroutine procedure\n                    ,                  public\n,                   :: load => load_Translation_data Subroutine procedure\n                    ,                  public\n,                   :: load_url Subroutine procedure\n                    ,                  public\n,                   :: load_model Subroutine procedure\n                    ,                  public\n,                   :: load_temperature Subroutine procedure\n                    ,                  public\n,                   :: load_response_format Subroutine procedure\n                    ,                  public\n,                   :: print_model Subroutine procedure\n                    ,                  public\n,                   :: print_temperature Subroutine procedure\n                    ,                  public\n,                   :: print_response_format Subroutine procedure\n                    ,                  public\n,                   :: print_prompt Subroutine procedure\n                    ,                  public\n,                   :: print_assisstant_response Subroutine procedure\n                    ,                  public\n,                   :: set_assisstant_response Subroutine procedure\n                    ,                  public\n,                   :: set_prompt Subroutine procedure\n                    ,                  public\n,                   :: set_url Subroutine procedure\n                    ,                  public\n,                   :: set_model Subroutine procedure\n                    ,                  public\n,                   :: set_temperature Subroutine procedure\n                    ,                  public\n,                   :: set_response_format Subroutine procedure\n                    ,                  public\n,                   :: set_file Subroutine procedure\n                    ,                  public\n,                   :: set => set_Translation_data Subroutine Subroutines private impure elemental subroutine print_assisstant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine set_assisstant_response (this, assisstant_response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: assisstant_response private impure elemental subroutine print_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine set_prompt (this, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: prompt private pure elemental subroutine deallocate_Translation (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine deallocate_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine deallocate_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine deallocate_file (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine deallocate_assisstant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine set_response_format (this, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: response_format private impure elemental subroutine load_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private impure elemental subroutine print_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine set_file (this, file) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file private impure elemental subroutine set_Translation_data (this, file_name, url, model, temperature, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: model real, intent(in), optional :: temperature character(len=*), intent(in), optional :: response_format private impure elemental subroutine load_Translation_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file_name private impure elemental subroutine load_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private impure elemental subroutine load_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private pure elemental subroutine set_temperature (this, temperature) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this real, intent(in) :: temperature private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: url private pure elemental subroutine set_model (this, model) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: model private impure elemental subroutine create_translation (this, file, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this character(len=*), intent(in) :: file character(len=*), intent(in), optional :: prompt private impure elemental subroutine print_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this private impure elemental subroutine print_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( Translation ), intent(inout) :: this","tags":"","loc":"module/foropenai_translation.html"},{"title":"foropenai – ForOpenAI","text":"Uses foropenai_ChatCompletion foropenai_base foropenai_Transcription foropenai_Translation foropenai_ImageGeneration module~~foropenai~~UsesGraph module~foropenai foropenai module~foropenai_base foropenai_base module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai->module~foropenai_imagegeneration module~foropenai_transcription foropenai_Transcription module~foropenai->module~foropenai_transcription module~foropenai_translation foropenai_Translation module~foropenai->module~foropenai_translation module~foropenai_chatcompletion->module~foropenai_base module~foropenai_imagegeneration->module~foropenai_base module~foropenai_transcription->module~foropenai_base module~foropenai_translation->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~foropenai~~UsedByGraph module~foropenai foropenai program~test_base test_base program~test_base->module~foropenai program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai program~test_imagegeneration test_ImageGeneration program~test_imagegeneration->module~foropenai program~test_transcription test_Transcription program~test_transcription->module~foropenai program~test_translation test_Translation program~test_translation->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents None","tags":"","loc":"module/foropenai.html"},{"title":"foropenai_ImageGeneration – ForOpenAI","text":"Uses foropenai_base module~~foropenai_imagegeneration~~UsesGraph module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai_base foropenai_base module~foropenai_imagegeneration->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~foropenai_imagegeneration~~UsedByGraph module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai foropenai module~foropenai->module~foropenai_imagegeneration program~test_base test_base program~test_base->module~foropenai program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai program~test_imagegeneration test_ImageGeneration program~test_imagegeneration->module~foropenai program~test_transcription test_Transcription program~test_transcription->module~foropenai program~test_translation test_Translation program~test_translation->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Derived Types ImageGeneration Subroutines create_image load_url load_size load_response_format load_n load_user_name print_url print_size print_prompt print_response_format print_n print_user_name print_assistant_response set_url set_size set_prompt set_response_format set_n set_user_name set_assistant_response set_ImageGeneration_data load_ImageGeneration_data deallocate_url deallocate_user_name deallocate_assistant_response deallocate_ImageGeneration Derived Types type, public, extends( openai ) :: ImageGeneration Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=9), public :: size = '1024x1024' character(len=1000), public :: prompt character(len=4), public :: response_format = 'url' integer, public :: n = 1 character(len=:), public, allocatable :: user_name character(len=1024), public, allocatable :: assistant_response (:) Type-Bound Procedures procedure\n                    ,                  public\n,                   :: load_base_data Subroutine procedure\n                    ,                  public\n,                   :: print_api_key Subroutine procedure\n                    ,                  public\n,                   :: print_organization Subroutine procedure\n                    ,                  public\n,                   :: print_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_base_data Subroutine procedure\n                    ,                  public\n,                   :: create => create_image Subroutine procedure\n                    ,                  public\n,                   :: deallocate_url Subroutine procedure\n                    ,                  public\n,                   :: deallocate_user_name Subroutine procedure\n                    ,                  public\n,                   :: deallocate_assistant_response Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_ImageGeneration Subroutine procedure\n                    ,                  public\n,                   :: load_url Subroutine procedure\n                    ,                  public\n,                   :: load_size Subroutine procedure\n                    ,                  public\n,                   :: load_response_format Subroutine procedure\n                    ,                  public\n,                   :: load_n Subroutine procedure\n                    ,                  public\n,                   :: load_user_name Subroutine procedure\n                    ,                  public\n,                   :: load => load_ImageGeneration_data Subroutine procedure\n                    ,                  public\n,                   :: print_url Subroutine procedure\n                    ,                  public\n,                   :: print_size Subroutine procedure\n                    ,                  public\n,                   :: print_prompt Subroutine procedure\n                    ,                  public\n,                   :: print_response_format Subroutine procedure\n                    ,                  public\n,                   :: print_n Subroutine procedure\n                    ,                  public\n,                   :: print_user_name Subroutine procedure\n                    ,                  public\n,                   :: print_assistant_response Subroutine procedure\n                    ,                  public\n,                   :: set_url Subroutine procedure\n                    ,                  public\n,                   :: set_size Subroutine procedure\n                    ,                  public\n,                   :: set_prompt Subroutine procedure\n                    ,                  public\n,                   :: set_response_format Subroutine procedure\n                    ,                  public\n,                   :: set_n Subroutine procedure\n                    ,                  public\n,                   :: set_user_name Subroutine procedure\n                    ,                  public\n,                   :: set_assistant_response Subroutine procedure\n                    ,                  public\n,                   :: set => set_ImageGeneration_data Subroutine Subroutines private  subroutine create_image (this, prompt, n, size, response_format, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: prompt integer, intent(in), optional :: n character(len=*), intent(in), optional :: size character(len=*), intent(in), optional :: response_format character(len=*), intent(in), optional :: user_name private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this private impure elemental subroutine load_size (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this private impure elemental subroutine load_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this private impure elemental subroutine load_n (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this private impure elemental subroutine load_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this private impure elemental subroutine print_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this private impure elemental subroutine print_size (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this private impure elemental subroutine print_prompt (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this private impure elemental subroutine print_response_format (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this private impure elemental subroutine print_n (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this private impure elemental subroutine print_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this private impure elemental subroutine print_assistant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(in) :: this private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: url private pure elemental subroutine set_size (this, size) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: size private pure elemental subroutine set_prompt (this, prompt) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: prompt private pure elemental subroutine set_response_format (this, response_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: response_format private pure elemental subroutine set_n (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this integer, intent(in) :: n private pure elemental subroutine set_user_name (this, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: user_name private pure elemental subroutine set_assistant_response (this, assistant_response, i) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: assistant_response integer, intent(in) :: i private impure elemental subroutine set_ImageGeneration_data (this, file_name, url, size, prompt, response_format, n, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in), optional :: file_name character(len=*), intent(in), optional :: url character(len=*), intent(in), optional :: size character(len=*), intent(in), optional :: prompt character(len=*), intent(in), optional :: response_format integer, intent(in), optional :: n character(len=*), intent(in), optional :: user_name private impure elemental subroutine load_ImageGeneration_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this character(len=*), intent(in) :: file_name private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this private pure elemental subroutine deallocate_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this private pure elemental subroutine deallocate_assistant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this private pure elemental subroutine deallocate_ImageGeneration (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ImageGeneration ), intent(inout) :: this","tags":"","loc":"module/foropenai_imagegeneration.html"},{"title":"test_Translation – ForOpenAI","text":"Uses foropenai program~~test_translation~~UsesGraph program~test_translation test_Translation module~foropenai foropenai program~test_translation->module~foropenai module~foropenai_base foropenai_base module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai->module~foropenai_imagegeneration module~foropenai_transcription foropenai_Transcription module~foropenai->module~foropenai_transcription module~foropenai_translation foropenai_Translation module~foropenai->module~foropenai_translation module~foropenai_chatcompletion->module~foropenai_base module~foropenai_imagegeneration->module~foropenai_base module~foropenai_transcription->module~foropenai_base module~foropenai_translation->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables trs Source Code test_Translation Variables Type Attributes Name Initial type( Translation ) :: trs Source Code program test_Translation use foropenai , only : Translation implicit none type ( Translation ) :: trs call trs % set_base_data ( file_name = 'foropenai.json' ) call trs % set ( file_name = 'foropenai.json' ) call trs % create ( file = 'test/audio_de.mp3' ) call trs % print_assisstant_response () call trs % finalize () end program test_Translation","tags":"","loc":"program/test_translation.html"},{"title":"test_ChatCompletion – ForOpenAI","text":"Uses foropenai program~~test_chatcompletion~~UsesGraph program~test_chatcompletion test_ChatCompletion module~foropenai foropenai program~test_chatcompletion->module~foropenai module~foropenai_base foropenai_base module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai->module~foropenai_imagegeneration module~foropenai_transcription foropenai_Transcription module~foropenai->module~foropenai_transcription module~foropenai_translation foropenai_Translation module~foropenai->module~foropenai_translation module~foropenai_chatcompletion->module~foropenai_base module~foropenai_imagegeneration->module~foropenai_base module~foropenai_transcription->module~foropenai_base module~foropenai_translation->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables chat Source Code test_ChatCompletion Variables Type Attributes Name Initial type( ChatCompletion ) :: chat Source Code program test_ChatCompletion use foropenai , only : ChatCompletion implicit none type ( ChatCompletion ) :: chat call chat % set_base_data ( file_name = 'foropenai.json' ) call chat % set ( file_name = 'foropenai.json' ) call chat % init_messages ( n = 3 ) call chat % messages ( 1 )% set ( role = 'system' , content = 'You are a helpful assistant.' ) call chat % messages ( 2 )% set ( role = 'user' , content = 'Hello?' ) call chat % messages ( 3 )% set ( role = 'assistant' , content = '' ) call chat % print_user_message () call chat % create () call chat % print_assistant_response () call chat % usage % print () call chat % finalize () end program test_ChatCompletion","tags":"","loc":"program/test_chatcompletion.html"},{"title":"test_ImageGeneration – ForOpenAI","text":"Uses foropenai program~~test_imagegeneration~~UsesGraph program~test_imagegeneration test_ImageGeneration module~foropenai foropenai program~test_imagegeneration->module~foropenai module~foropenai_base foropenai_base module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai->module~foropenai_imagegeneration module~foropenai_transcription foropenai_Transcription module~foropenai->module~foropenai_transcription module~foropenai_translation foropenai_Translation module~foropenai->module~foropenai_translation module~foropenai_chatcompletion->module~foropenai_base module~foropenai_imagegeneration->module~foropenai_base module~foropenai_transcription->module~foropenai_base module~foropenai_translation->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables image Source Code test_ImageGeneration Variables Type Attributes Name Initial type( ImageGeneration ) :: image Source Code program test_ImageGeneration use foropenai , only : ImageGeneration implicit none type ( ImageGeneration ) :: image call image % set_base_data ( file_name = 'foropenai.json' ) call image % set ( file_name = 'foropenai.json' ) call image % create ( prompt = 'a cat with a computer' ) call image % print_assistant_response () call image % finalize () end program test_ImageGeneration","tags":"","loc":"program/test_imagegeneration.html"},{"title":"test_Transcription – ForOpenAI","text":"Uses foropenai program~~test_transcription~~UsesGraph program~test_transcription test_Transcription module~foropenai foropenai program~test_transcription->module~foropenai module~foropenai_base foropenai_base module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai->module~foropenai_imagegeneration module~foropenai_transcription foropenai_Transcription module~foropenai->module~foropenai_transcription module~foropenai_translation foropenai_Translation module~foropenai->module~foropenai_translation module~foropenai_chatcompletion->module~foropenai_base module~foropenai_imagegeneration->module~foropenai_base module~foropenai_transcription->module~foropenai_base module~foropenai_translation->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables trs Source Code test_Transcription Variables Type Attributes Name Initial type( Transcription ) :: trs Source Code program test_Transcription use foropenai , only : Transcription implicit none type ( Transcription ) :: trs call trs % set_base_data ( file_name = 'foropenai.json' ) call trs % set ( file_name = 'foropenai.json' ) call trs % create ( file = 'test/audio.mp3' ) call trs % print_text () call trs % finalize () end program test_Transcription","tags":"","loc":"program/test_transcription.html"},{"title":"test_base – ForOpenAI","text":"Uses foropenai program~~test_base~~UsesGraph program~test_base test_base module~foropenai foropenai program~test_base->module~foropenai module~foropenai_base foropenai_base module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_imagegeneration foropenai_ImageGeneration module~foropenai->module~foropenai_imagegeneration module~foropenai_transcription foropenai_Transcription module~foropenai->module~foropenai_transcription module~foropenai_translation foropenai_Translation module~foropenai->module~foropenai_translation module~foropenai_chatcompletion->module~foropenai_base module~foropenai_imagegeneration->module~foropenai_base module~foropenai_transcription->module~foropenai_base module~foropenai_translation->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables base Source Code test_base Variables Type Attributes Name Initial type( openai ) :: base Source Code program test_base use foropenai , only : openai implicit none type ( openai ) :: base call base % set_base_data ( file_name = 'foropenai.json' ) call base % print_api_key () call base % print_organization () call base % print_file_name () call base % finalize () end program test_base","tags":"","loc":"program/test_base.html"},{"title":"foropenai_base.f90 – ForOpenAI","text":"Files dependent on this one sourcefile~~foropenai_base.f90~~AfferentGraph sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai.f90->sourcefile~foropenai_imagegeneration.f90 sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai.f90->sourcefile~foropenai_transcription.f90 sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai.f90->sourcefile~foropenai_translation.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_imagegeneration.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_transcription.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_translation.f90->sourcefile~foropenai_base.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 sourcefile~test2.f90 test2.f90 sourcefile~test2.f90->sourcefile~foropenai.f90 sourcefile~test3.f90 test3.f90 sourcefile~test3.f90->sourcefile~foropenai.f90 sourcefile~test4.f90 test4.f90 sourcefile~test4.f90->sourcefile~foropenai.f90 sourcefile~test5.f90 test5.f90 sourcefile~test5.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai_base Source Code foropenai_base.f90 Source Code module foropenai_base implicit none private public :: openai !=============================================================================== !> author: Seyed Ali Ghasemi type openai character ( len = :), allocatable :: organization character ( len = :), allocatable :: api_key character ( len = :), allocatable :: file_name character ( len = 14 ) :: api_key_env = 'OPENAI_API_KEY' character ( len = 10 ) :: organization_env = 'OPENAI_ORG' contains procedure , private :: deallocate_api_key procedure , private :: deallocate_organization procedure , private :: deallocate_file_name procedure :: finalize => deallocate_openai procedure , private :: load_api_key procedure , private :: load_organization procedure :: load_base_data procedure :: print_api_key procedure :: print_organization procedure :: print_file_name procedure :: set_file_name procedure , private :: set_api_key procedure , private :: set_organization procedure , private :: set_api_key_env procedure , private :: set_organization_env procedure :: set_base_data end type openai !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_base_data ( this , file_name , api_key , organization ) class ( openai ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: api_key character ( len =* ), optional , intent ( in ) :: organization integer :: stat_api_key , stat_organization if ( present ( api_key )) call this % set_api_key ( api_key ) if ( present ( organization )) call this % set_organization ( organization ) if ( present ( file_name )) call this % set_file_name ( file_name ) call this % set_api_key_env ( status = stat_api_key ) if ( stat_api_key == 1 ) call this % load_api_key ( file_name ) call this % set_organization_env ( status = stat_organization ) if ( stat_organization == 1 ) call this % load_organization ( file_name ) end subroutine set_base_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_api_key_env ( this , status ) class ( openai ), intent ( inout ) :: this integer , intent ( out ), optional :: status character ( len = 1024 ) :: tmp call get_environment_variable ( this % api_key_env , tmp , status = status ) if ( status == 0 ) call this % set_api_key ( trim ( tmp )) end subroutine set_api_key_env !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_organization_env ( this , status ) class ( openai ), intent ( inout ) :: this integer , intent ( out ), optional :: status character ( len = 1024 ) :: tmp call get_environment_variable ( this % organization_env , tmp , status = status ) if ( status == 0 ) call this % set_organization ( trim ( tmp )) end subroutine set_organization_env !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_openai ( this ) class ( openai ), intent ( inout ) :: this call this % deallocate_api_key () call this % deallocate_organization () call this % deallocate_file_name () end subroutine deallocate_openai !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_api_key ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % api_key )) deallocate ( this % api_key ) end subroutine deallocate_api_key !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_organization ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % organization )) deallocate ( this % organization ) end subroutine deallocate_organization !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_file_name ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % file_name )) deallocate ( this % file_name ) end subroutine deallocate_file_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_base_data ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_api_key () call this % load_organization () end subroutine load_base_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_organization ( this , organization ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: organization this % organization = trim ( organization ) end subroutine set_organization !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_api_key ( this , api_key ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: api_key this % api_key = trim ( api_key ) end subroutine set_api_key !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_api_key ( this , file_name ) use json_module , only : json_file class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ), optional :: file_name type ( json_file ) :: json if ( present ( file_name )) call this % set_file_name ( file_name ) call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"base.api_key\" , this % api_key ) call json % destroy () end subroutine load_api_key !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_file_name ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name this % file_name = trim ( file_name ) end subroutine set_file_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_organization ( this , file_name ) use json_module , only : json_file class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ), optional :: file_name type ( json_file ) :: json if ( present ( file_name )) call this % set_file_name ( file_name ) call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"base.organization\" , this % organization ) call json % destroy () end subroutine load_organization !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_api_key ( this ) class ( openai ), intent ( inout ) :: this print \"('api key: ',A)\" , trim ( this % api_key ) end subroutine print_api_key !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_organization ( this ) class ( openai ), intent ( inout ) :: this print \"('organization: ',A)\" , trim ( this % organization ) end subroutine print_organization !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_file_name ( this ) class ( openai ), intent ( inout ) :: this print \"('file name: ',A)\" , trim ( this % file_name ) end subroutine print_file_name !=============================================================================== end module foropenai_base","tags":"","loc":"sourcefile/foropenai_base.f90.html"},{"title":"foropenai_Transcription.f90 – ForOpenAI","text":"This file depends on sourcefile~~foropenai_transcription.f90~~EfferentGraph sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai_transcription.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~foropenai_transcription.f90~~AfferentGraph sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai.f90->sourcefile~foropenai_transcription.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 sourcefile~test2.f90 test2.f90 sourcefile~test2.f90->sourcefile~foropenai.f90 sourcefile~test3.f90 test3.f90 sourcefile~test3.f90->sourcefile~foropenai.f90 sourcefile~test4.f90 test4.f90 sourcefile~test4.f90->sourcefile~foropenai.f90 sourcefile~test5.f90 test5.f90 sourcefile~test5.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai_Transcription Source Code foropenai_Transcription.f90 Source Code module foropenai_Transcription use foropenai_base implicit none private public :: Transcription !=============================================================================== !> author: Seyed Ali Ghasemi type , extends ( openai ) :: Transcription character ( len = :), allocatable :: url character ( len = :), allocatable :: model character ( len = :), allocatable :: language character ( len = :), allocatable :: prompt character ( len = :), allocatable :: file character ( len = :), allocatable :: text character ( len = 4 ) :: response_format = 'json' real :: temperature = 1.0 contains procedure :: create => create_transcription procedure :: deallocate_url procedure :: deallocate_model procedure :: deallocate_language procedure :: deallocate_prompt procedure :: deallocate_file procedure :: deallocate_text procedure :: finalize => deallocate_Transcription procedure :: load => load_Transcription_data procedure :: load_url procedure :: load_model procedure :: load_temperature procedure :: load_language procedure :: load_response_format procedure :: print_model procedure :: print_temperature procedure :: print_language procedure :: print_response_format procedure :: print_prompt procedure :: print_text procedure :: set_text procedure :: set_prompt procedure :: set_url procedure :: set_model procedure :: set_temperature procedure :: set_language procedure :: set_response_format procedure :: set_file procedure :: set => set_Transcription_data end type Transcription !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_text ( this ) class ( Transcription ), intent ( inout ) :: this print \"('text: ',A)\" , trim ( this % text ) end subroutine print_text !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_text ( this , text ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: text this % text = trim ( text ) end subroutine set_text !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_prompt ( this ) class ( Transcription ), intent ( inout ) :: this print \"('prompt: ',A)\" , trim ( this % prompt ) end subroutine print_prompt !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_prompt ( this , prompt ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prompt this % prompt = trim ( prompt ) end subroutine set_prompt !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_Transcription ( this ) class ( Transcription ), intent ( inout ) :: this call this % deallocate_url () call this % deallocate_model () call this % deallocate_language () call this % deallocate_prompt () call this % deallocate_file () call this % deallocate_text () end subroutine deallocate_Transcription !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_url ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_model ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % model )) deallocate ( this % model ) end subroutine deallocate_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_language ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % language )) deallocate ( this % language ) end subroutine deallocate_language !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_prompt ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % prompt )) deallocate ( this % prompt ) end subroutine deallocate_prompt !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_file ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % file )) deallocate ( this % file ) end subroutine deallocate_file !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_text ( this ) class ( Transcription ), intent ( inout ) :: this if ( allocated ( this % text )) deallocate ( this % text ) end subroutine deallocate_text !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_response_format ( this , response_format ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response_format this % response_format = trim ( response_format ) end subroutine set_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_response_format ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.response_format\" , tmp , found = found ) if ( found ) this % response_format = trim ( tmp ) call json % destroy () end subroutine load_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_response_format ( this ) class ( Transcription ), intent ( inout ) :: this print \"('response_format: ',A)\" , trim ( this % response_format ) end subroutine print_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_language ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.language\" , tmp , found = found ) if ( found ) this % language = trim ( tmp ) call json % destroy () end subroutine load_language !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_language ( this ) class ( Transcription ), intent ( inout ) :: this print \"('language: ',A)\" , trim ( this % language ) end subroutine print_language !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_language ( this , language ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: language this % language = trim ( language ) end subroutine set_language !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_file ( this , file ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file this % file = trim ( file ) end subroutine set_file !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_Transcription_data ( this , file_name , & url , model , temperature , language , response_format ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: url character ( len =* ), optional , intent ( in ) :: model real , optional , intent ( in ) :: temperature character ( len =* ), optional , intent ( in ) :: language character ( len =* ), optional , intent ( in ) :: response_format if ( present ( url )) call this % set_url ( url = url ) if ( present ( model )) call this % set_model ( model = model ) if ( present ( temperature )) call this % set_temperature ( temperature = temperature ) if ( present ( language )) call this % set_language ( language = language ) if ( present ( response_format )) call this % set_response_format ( response_format = response_format ) if ( present ( file_name )) then call this % set_file_name ( file_name ) call this % load ( file_name ) end if end subroutine set_Transcription_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_Transcription_data ( this , file_name ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_model () call this % load_temperature () call this % load_language () call this % load_response_format () end subroutine load_Transcription_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_temperature ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.temperature\" , tmp , found = found ) if ( found ) this % temperature = tmp call json % destroy () end subroutine load_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.url\" , tmp , found = found ) if ( found ) this % url = trim ( tmp ) call json % destroy () end subroutine load_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_model ( this ) use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Transcription.model\" , tmp , found = found ) if ( found ) this % model = trim ( tmp ) call json % destroy () end subroutine load_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_temperature ( this , temperature ) class ( Transcription ), intent ( inout ) :: this real , intent ( in ) :: temperature this % temperature = temperature end subroutine set_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_url ( this , url ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_model ( this , model ) class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: model this % model = trim ( model ) end subroutine set_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine create_transcription ( this , file , prompt ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( Transcription ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file character ( len =* ), intent ( in ), optional :: prompt type ( pair_type ), allocatable :: req_header (:), form_data (:), file_data type ( response_type ) :: response type ( json_file ) :: json character ( len = 1024 ) :: tempereture_str call this % set_file ( file = file ) if ( present ( prompt )) then call this % set_prompt ( prompt = prompt ) else call this % set_prompt ( prompt = '' ) end if req_header = [& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key ) // '' ),& pair_type ( 'Content-Type' , 'multipart/form-data' )& ] write ( tempereture_str , '(f3.1)' ) this % temperature form_data = [& pair_type ( 'model' , trim ( this % model )),& pair_type ( ' language' , trim ( this % language )),& pair_type ( ' response_format' , trim ( this % response_format )),& pair_type ( ' prompt' , trim ( this % prompt )),& pair_type ( ' temperature' , trim ( tempereture_str ))& ] file_data = pair_type ( 'file' , trim ( this % file )) response = request ( url = this % url , method = HTTP_POST , header = req_header , form = form_data , file = file_data ) if ( response % ok ) then call json % initialize () call json % deserialize ( response % content ) call json % get ( \"text\" , this % text ) call json % destroy () else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end subroutine create_transcription !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_model ( this ) class ( Transcription ), intent ( inout ) :: this print \"('model: ',A)\" , trim ( this % model ) end subroutine print_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_temperature ( this ) class ( Transcription ), intent ( inout ) :: this print \"('temperature: ',F3.1)\" , this % temperature end subroutine print_temperature !=============================================================================== end module foropenai_Transcription","tags":"","loc":"sourcefile/foropenai_transcription.f90.html"},{"title":"foropenai_ChatCompletion.f90 – ForOpenAI","text":"This file depends on sourcefile~~foropenai_chatcompletion.f90~~EfferentGraph sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~foropenai_chatcompletion.f90~~AfferentGraph sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 sourcefile~test2.f90 test2.f90 sourcefile~test2.f90->sourcefile~foropenai.f90 sourcefile~test3.f90 test3.f90 sourcefile~test3.f90->sourcefile~foropenai.f90 sourcefile~test4.f90 test4.f90 sourcefile~test4.f90->sourcefile~foropenai.f90 sourcefile~test5.f90 test5.f90 sourcefile~test5.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai_ChatCompletion Source Code foropenai_ChatCompletion.f90 Source Code module foropenai_ChatCompletion use foropenai_base implicit none private public :: ChatCompletion !=============================================================================== !> author: Seyed Ali Ghasemi type usage integer :: prompt_tokens = 0 integer :: completion_tokens = 0 integer :: total_tokens = 0 contains procedure :: print_prompt_tokens procedure :: print_completion_tokens procedure :: print_total_tokens procedure :: print => print_usage end type usage !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi type :: ChatCompletion_messages character ( len = :), allocatable :: role character ( len = :), allocatable :: content character ( len = :), allocatable :: name contains procedure :: deallocate_role procedure :: deallocate_content procedure :: deallocate_name procedure :: finalize => deallocate_ChatCompletion_messages procedure :: set => set_message procedure :: set_role procedure :: set_content procedure :: set_name end type ChatCompletion_messages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi type , extends ( openai ) :: ChatCompletion character ( len = :), allocatable :: url character ( len = :), allocatable :: model character ( len = :), allocatable :: user_name character ( len = 256 ), allocatable :: model_list (:) type ( ChatCompletion_messages ), allocatable :: messages (:) integer :: max_tokens type ( usage ) :: usage real :: temperature = 1.0 real :: presence_penalty = 0.0 real :: frequency_penalty = 0.0 real :: top_p = 1.0 logical :: stream = . false . integer :: n = 1 character ( len = :), allocatable :: finish_reason contains procedure :: check => check_chat_completion procedure :: create => create_chat_completion procedure :: conversation procedure :: deallocate_messages procedure :: deallocate_model_list procedure :: deallocate_url procedure :: deallocate_model procedure :: deallocate_user_name procedure :: deallocate_finish_reason procedure :: finalize => deallocate_ChatCompletion procedure :: get_assistant_response procedure :: get_user_message procedure :: init_messages procedure :: load => load_ChatCompletion_data procedure :: load_user_name procedure :: load_url procedure :: load_model procedure :: load_temperature procedure :: load_presence_penalty procedure :: load_frequency_penalty procedure :: load_top_p procedure :: load_n procedure :: load_stream procedure :: load_max_tokens procedure :: read_user_message procedure :: print_user_name procedure :: print_model_list procedure :: print_model procedure :: print_temperature procedure :: print_presence_penalty procedure :: print_frequency_penalty procedure :: print_top_p procedure :: print_n procedure :: print_stream procedure :: print_max_tokens procedure :: print_user_message procedure :: print_assistant_response procedure :: set_user_name procedure :: set_url procedure :: set_model procedure :: set_model_list procedure :: select_model procedure :: set_temperature procedure :: set_presence_penalty procedure :: set_frequency_penalty procedure :: set_top_p procedure :: set_n procedure :: set_stream procedure :: set_max_tokens procedure :: set_asisstant_response procedure :: set_user_message procedure :: set => set_ChatCompletion_data procedure :: write_history procedure :: print_finish_reason end type ChatCompletion !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_usage ( this ) class ( usage ), intent ( inout ) :: this call this % print_prompt_tokens () call this % print_completion_tokens () call this % print_total_tokens () end subroutine print_usage !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_ChatCompletion_data ( this , file_name , & url , model , user_name , temperature , presence_penalty , frequency_penalty , top_p , n , stream , max_tokens ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: url character ( len =* ), optional , intent ( in ) :: model character ( len =* ), optional , intent ( in ) :: user_name real , optional , intent ( in ) :: temperature real , optional , intent ( in ) :: presence_penalty real , optional , intent ( in ) :: frequency_penalty real , optional , intent ( in ) :: top_p integer , optional , intent ( in ) :: n logical , optional , intent ( in ) :: stream integer , optional , intent ( in ) :: max_tokens if ( present ( url )) call this % set_url ( url = url ) if ( present ( model )) call this % set_model ( model = model ) if ( present ( user_name )) call this % set_user_name ( user_name = user_name ) if ( present ( temperature )) call this % set_temperature ( temperature = temperature ) if ( present ( presence_penalty )) call this % set_presence_penalty ( presence_penalty = presence_penalty ) if ( present ( frequency_penalty )) call this % set_frequency_penalty ( frequency_penalty = frequency_penalty ) if ( present ( top_p )) call this % set_top_p ( top_p = top_p ) if ( present ( n )) call this % set_n ( n = n ) if ( present ( stream )) call this % set_stream ( stream = stream ) if ( present ( max_tokens )) call this % set_max_tokens ( max_tokens = max_tokens ) if ( present ( file_name )) then call this % set_file_name ( file_name ) call this % load ( file_name ) end if end subroutine set_ChatCompletion_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_user_message ( this , message ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: message integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then call this % messages ( i )% set_content ( content = message ) end if end do end subroutine set_user_message !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_asisstant_response ( this , response ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then call this % messages ( i )% set_content ( content = response ) end if end do end subroutine set_asisstant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure function get_assistant_response ( this ) result ( response ) class ( ChatCompletion ), intent ( in ) :: this character ( len = :), allocatable :: response integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then response = this % messages ( i )% content end if end do end function !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure function get_user_message ( this ) result ( message ) class ( ChatCompletion ), intent ( in ) :: this character ( len = :), allocatable :: message integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then message = this % messages ( i )% content end if end do end function !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_assistant_response ( this ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then print \"(A,': ',A)\" , colorize ( \"ChatGPT\" , color_bg = 'blue' ), this % messages ( i )% content end if end do end subroutine print_assistant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_user_message ( this ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then print \"(A,': ',A)\" , colorize ( trim ( this % user_name ), color_bg = 'green' ), this % messages ( i )% content end if end do end subroutine print_user_message !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_finish_reason ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % finish_reason )) deallocate ( this % finish_reason ) end subroutine deallocate_finish_reason !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_finish_reason ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('finish reason: ',A)\" , trim ( this % finish_reason ) end subroutine print_finish_reason !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine conversation ( this , file_name_base , file_name_ChatCompletion , & input_file , output_file , inputfile_command , exit_command ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name_base character ( len =* ), intent ( in ) :: file_name_ChatCompletion character ( len =* ), intent ( in ) :: input_file character ( len =* ), intent ( in ) :: output_file character ( len =* ), intent ( in ) :: inputfile_command character ( len =* ), intent ( in ) :: exit_command call this % set_base_data ( file_name_base ) call this % set ( file_name_ChatCompletion ) call this % init_messages ( n = 3 ) call this % messages ( 1 )% set ( role = 'system' , content = 'You are a helpful assistant.' ) call this % messages ( 2 )% set ( role = 'assistant' , content = '' ) call this % messages ( 3 )% set_role ( role = 'user' ) do call this % read_user_message ( file_name = trim ( input_file ), command = trim ( inputfile_command )) if ( trim ( this % get_user_message ()) == trim ( exit_command )) exit call this % create () call this % set_asisstant_response ( response = this % get_assistant_response ()) call this % print_assistant_response () call this % write_history ( file_name = trim ( output_file )) end do call this % usage % print_prompt_tokens () call this % usage % print_completion_tokens () call this % usage % print_total_tokens () end subroutine conversation !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine write_history ( this , file_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name integer :: iounit open ( newunit = iounit , file = trim ( file_name ), status = 'unknown' , access = 'append' , action = 'write' ) write ( iounit , \"(A,': ',A)\" ) this % user_name , this % get_user_message () write ( iounit , \"('ChatGPT: ',A)\" ) this % get_assistant_response () close ( iounit ) end subroutine write_history !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine read_user_message ( this , file_name , command ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name character ( len =* ), intent ( in ) :: command character ( len = :), allocatable :: message character ( len = :), allocatable :: whole_message character ( len = 1000000 ) :: tmp integer :: iounit , iostat write ( * , \"(A,': ')\" , advance = 'no' ) colorize ( trim ( this % user_name ), color_bg = 'green' ) read * , tmp message = trim ( tmp ) if ( trim ( message ) == trim ( command )) then open ( newunit = iounit , file = trim ( file_name ), status = 'old' , action = 'read' ) whole_message = '' do read ( iounit , '(A)' , iostat = iostat ) tmp if ( iostat /= 0 ) exit whole_message = trim ( whole_message ) // trim ( tmp ) // new_line ( ' ' ) end do close ( iounit ) call this % set_user_message ( message = whole_message ) else call this % set_user_message ( message = message ) end if end subroutine read_user_message !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_ChatCompletion_messages ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this call this % deallocate_role () call this % deallocate_content () call this % deallocate_name () end subroutine deallocate_ChatCompletion_messages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_ChatCompletion ( this ) class ( ChatCompletion ), intent ( inout ) :: this call this % deallocate_messages () call this % deallocate_model_list () call this % deallocate_url () call this % deallocate_model () call this % deallocate_user_name () call this % deallocate_finish_reason () end subroutine deallocate_ChatCompletion !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_url ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_model ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % model )) deallocate ( this % model ) end subroutine deallocate_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_user_name ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % user_name )) deallocate ( this % user_name ) end subroutine deallocate_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_ChatCompletion_data ( this , file_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_model () call this % load_user_name () call this % load_temperature () call this % load_presence_penalty () call this % load_frequency_penalty () call this % load_top_p () call this % load_n () call this % load_stream () call this % load_max_tokens () end subroutine load_ChatCompletion_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_message ( this , role , content , name ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: role character ( len =* ), intent ( in ) :: content character ( len =* ), optional , intent ( in ) :: name this % role = trim ( role ) this % content = trim ( content ) if ( present ( name )) this % name = trim ( name ) end subroutine set_message !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_max_tokens ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.max_tokens\" , this % max_tokens ) call json % destroy () end subroutine load_max_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_temperature ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.temperature\" , tmp , found = found ) if ( found ) this % temperature = tmp call json % destroy () end subroutine load_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_presence_penalty ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.presence_penalty\" , tmp , found = found ) if ( found ) this % presence_penalty = tmp call json % destroy () end subroutine load_presence_penalty !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_frequency_penalty ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.frequency_penalty\" , tmp , found = found ) if ( found ) this % frequency_penalty = tmp call json % destroy () end subroutine load_frequency_penalty !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_top_p ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.top_p\" , tmp , found = found ) if ( found ) this % top_p = tmp call json % destroy () end subroutine load_top_p !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_n ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json integer :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.n\" , tmp , found = found ) if ( found ) this % n = tmp call json % destroy () end subroutine load_n !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_stream ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json logical :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.stream\" , tmp , found = found ) if ( found ) this % stream = tmp call json % destroy () end subroutine load_stream !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.url\" , this % url ) call json % destroy () end subroutine load_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_model ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.model\" , this % model ) call json % destroy () end subroutine load_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_user_name ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.user_name\" , this % user_name ) call json % destroy () end subroutine load_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % model_list )) deallocate ( this % model_list ) end subroutine deallocate_model_list !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this if (. not . allocated ( this % model_list )) allocate ( this % model_list ( 8 )) this % model_list ( 1 ) = trim ( 'gpt-4' ) this % model_list ( 2 ) = trim ( 'gpt-4-0613' ) this % model_list ( 3 ) = trim ( 'gpt-4-32k' ) this % model_list ( 4 ) = trim ( 'gpt-4-32k-0613' ) this % model_list ( 5 ) = trim ( 'gpt-3.5-turbo' ) this % model_list ( 6 ) = trim ( 'gpt-3.5-turbo-0613' ) this % model_list ( 7 ) = trim ( 'gpt-3.5-turbo-16k' ) this % model_list ( 8 ) = trim ( 'gpt-3.5-turbo-16k-0613' ) end subroutine set_model_list !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this integer :: i call this % set_model_list () do i = 1 , size ( this % model_list ) print \"(I1,': ',A)\" , i , trim ( this % model_list ( i )) end do end subroutine print_model_list !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_temperature ( this , temperature ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: temperature this % temperature = temperature end subroutine set_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_presence_penalty ( this , presence_penalty ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: presence_penalty this % presence_penalty = presence_penalty end subroutine set_presence_penalty !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_frequency_penalty ( this , frequency_penalty ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: frequency_penalty this % frequency_penalty = frequency_penalty end subroutine set_frequency_penalty !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_top_p ( this , top_p ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: top_p this % top_p = top_p end subroutine set_top_p !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_n ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n this % n = n end subroutine set_n !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_stream ( this , stream ) class ( ChatCompletion ), intent ( inout ) :: this logical , intent ( in ) :: stream this % stream = stream end subroutine set_stream !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_url ( this , url ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_model ( this , model ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: model this % model = trim ( model ) end subroutine set_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine init_messages ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n if (. not . allocated ( this % messages )) allocate ( this % messages ( n )) end subroutine init_messages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_role ( this , role ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: role this % role = role end subroutine set_role !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_content ( this , content ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: content this % content = content end subroutine set_content !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_name ( this , name ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: name this % name = name end subroutine set_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine check_chat_completion ( this , error ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( out ) :: error integer :: i if ( len_trim ( this % api_key ) == 0 ) then print '(A)' , 'Error: api_key is not set.' error = 1 stop end if if ( len_trim ( this % url ) == 0 ) then print '(A)' , 'Error: url is not set.' error = 2 stop end if if ( len_trim ( this % model ) == 0 ) then print '(A)' , 'Error: model is not set.' error = 3 stop end if if (. not . allocated ( this % messages )) then print '(A)' , 'Error: messages is not set.' error = 4 stop end if do i = 1 , size ( this % messages ) if ( len_trim ( this % messages ( i )% role ) == 0 ) then print '(A,I1,A)' , 'Error: messages(' , i , ')%role is not set.' error = 5 stop end if end do do i = 1 , size ( this % messages ) if (. not . allocated ( this % messages ( i )% content )) then print '(A,I1,A)' , 'Error: messages(' , i , ')%content is not set.' error = 6 stop end if end do if ( this % temperature < 0.0 . or . this % temperature > 2.0 ) then print '(A)' , 'Error: temperature must be between 0.0 and 2.0.' error = 7 stop end if if ( this % max_tokens < 1 ) then print '(A)' , 'Error: max_tokens must be greater than 1' error = 8 stop end if if ( len_trim ( this % user_name ) == 0 ) then print '(A)' , 'Error: user_name is not set.' error = 9 stop end if error = 0 end subroutine check_chat_completion !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine create_chat_completion ( this ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this character ( len = :), allocatable :: assistant_response character ( len = :), allocatable :: jsonstr type ( pair_type ), allocatable :: req_header (:) type ( response_type ) :: response type ( json_file ) :: json logical :: found integer :: i character ( len = 10 ) :: i_str integer :: error call this % check ( error ) if ( error == 0 ) then req_header = [& pair_type ( 'Content-Type' , 'application/json' ),& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key ) // '' ),& pair_type ( 'OpenAI-Organization' , ' ' // trim ( this % organization ) // '' )& ] call json % initialize () call json % add ( 'model' , trim ( this % model )) do i = 1 , size ( this % messages ) write ( i_str , \"(I10)\" ) i call json % add ( 'messages(' // trim ( i_str ) // ').role' , this % messages ( i )% role ) call json % add ( 'messages(' // trim ( i_str ) // ').content' , this % messages ( i )% content ) ! call json%add('messages('//trim(i_str)//').name', this%messages(i)%name) end do call json % add ( 'user' , trim ( this % user_name )) call json % add ( 'temperature' , this % temperature ) call json % add ( 'max_tokens' , this % max_tokens ) call json % add ( 'stream' , this % stream ) call json % add ( 'n' , this % n ) call json % add ( 'presence_penalty' , this % presence_penalty ) call json % add ( 'frequency_penalty' , this % frequency_penalty ) call json % add ( 'top_p' , this % top_p ) call json % print_to_string ( jsonstr ) call json % destroy () response = request ( url = trim ( this % url ), method = HTTP_POST , data = jsonstr , header = req_header ) if ( response % ok ) then call json % initialize () call json % deserialize ( response % content ) call json % get ( \"choices(1).finish_reason\" , this % finish_reason ) call json % get ( \"usage.prompt_tokens\" , this % usage % prompt_tokens ) call json % get ( \"usage.completion_tokens\" , this % usage % completion_tokens ) call json % get ( \"usage.total_tokens\" , this % usage % total_tokens ) call json % get ( \"choices(1).message.content\" , assistant_response , found = found ) if (. not . found ) then call json % get ( \"error.message\" , jsonstr ) assistant_response = jsonstr end if call this % set_asisstant_response ( response = trim ( assistant_response )) call json % destroy () else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end if end subroutine create_chat_completion !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_role ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % role )) deallocate ( this % role ) end subroutine deallocate_role !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_content ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % content )) deallocate ( this % content ) end subroutine deallocate_content !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_name ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % name )) deallocate ( this % name ) end subroutine deallocate_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_messages ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % messages )) deallocate ( this % messages ) end subroutine deallocate_messages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine select_model ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n call this % set_model_list () this % model = this % model_list ( n ) end subroutine select_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_model ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('model: ',A)\" , trim ( this % model ) end subroutine print_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_temperature ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('temperature: ',F3.1)\" , this % temperature end subroutine print_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_presence_penalty ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('presence_penalty: ',F3.1)\" , this % presence_penalty end subroutine print_presence_penalty !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_frequency_penalty ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('frequency_penalty: ',F3.1)\" , this % frequency_penalty end subroutine print_frequency_penalty !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_top_p ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('top_p: ',F3.1)\" , this % top_p end subroutine print_top_p !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_n ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('n: ',I10)\" , this % n end subroutine print_n !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_stream ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('stream: ',L1)\" , this % stream end subroutine print_stream !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_max_tokens ( this , max_tokens ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: max_tokens this % max_tokens = max_tokens end subroutine set_max_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_max_tokens ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('max tokens: ',I4)\" , this % max_tokens end subroutine print_max_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_user_name ( this , user_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: user_name this % user_name = trim ( user_name ) end subroutine set_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_user_name ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('user name: ',A)\" , trim ( this % user_name ) end subroutine print_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_prompt_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('prompt tokens: ',g0)\" , this % prompt_tokens end subroutine print_prompt_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_completion_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('completion tokens: ',g0)\" , this % completion_tokens end subroutine print_completion_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_total_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('total tokens: ',g0)\" , this % total_tokens end subroutine print_total_tokens !=============================================================================== end module foropenai_ChatCompletion","tags":"","loc":"sourcefile/foropenai_chatcompletion.f90.html"},{"title":"foropenai_Translation.f90 – ForOpenAI","text":"This file depends on sourcefile~~foropenai_translation.f90~~EfferentGraph sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai_translation.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~foropenai_translation.f90~~AfferentGraph sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai.f90->sourcefile~foropenai_translation.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 sourcefile~test2.f90 test2.f90 sourcefile~test2.f90->sourcefile~foropenai.f90 sourcefile~test3.f90 test3.f90 sourcefile~test3.f90->sourcefile~foropenai.f90 sourcefile~test4.f90 test4.f90 sourcefile~test4.f90->sourcefile~foropenai.f90 sourcefile~test5.f90 test5.f90 sourcefile~test5.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai_Translation Source Code foropenai_Translation.f90 Source Code module foropenai_Translation use foropenai_base implicit none private public :: Translation !=============================================================================== !> author: Seyed Ali Ghasemi type , extends ( openai ) :: Translation character ( len = :), allocatable :: url character ( len = :), allocatable :: model character ( len = :), allocatable :: prompt character ( len = :), allocatable :: file character ( len = :), allocatable :: assisstant_response character ( len = 4 ) :: response_format = 'json' real :: temperature = 1.0 contains procedure :: create => create_translation procedure :: deallocate_url procedure :: deallocate_model procedure :: deallocate_prompt procedure :: deallocate_file procedure :: deallocate_assisstant_response procedure :: finalize => deallocate_Translation procedure :: load => load_Translation_data procedure :: load_url procedure :: load_model procedure :: load_temperature procedure :: load_response_format procedure :: print_model procedure :: print_temperature procedure :: print_response_format procedure :: print_prompt procedure :: print_assisstant_response procedure :: set_assisstant_response procedure :: set_prompt procedure :: set_url procedure :: set_model procedure :: set_temperature procedure :: set_response_format procedure :: set_file procedure :: set => set_Translation_data end type Translation !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_assisstant_response ( this ) class ( Translation ), intent ( inout ) :: this print \"('assisstant_response: ',A)\" , trim ( this % assisstant_response ) end subroutine print_assisstant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_assisstant_response ( this , assisstant_response ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: assisstant_response this % assisstant_response = trim ( assisstant_response ) end subroutine set_assisstant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_prompt ( this ) class ( Translation ), intent ( inout ) :: this print \"('prompt: ',A)\" , trim ( this % prompt ) end subroutine print_prompt !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_prompt ( this , prompt ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prompt this % prompt = trim ( prompt ) end subroutine set_prompt !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_Translation ( this ) class ( Translation ), intent ( inout ) :: this call this % deallocate_url () call this % deallocate_model () call this % deallocate_prompt () call this % deallocate_file () call this % deallocate_assisstant_response () end subroutine deallocate_Translation !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_url ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_model ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % model )) deallocate ( this % model ) end subroutine deallocate_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_prompt ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % prompt )) deallocate ( this % prompt ) end subroutine deallocate_prompt !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_file ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % file )) deallocate ( this % file ) end subroutine deallocate_file !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_assisstant_response ( this ) class ( Translation ), intent ( inout ) :: this if ( allocated ( this % assisstant_response )) deallocate ( this % assisstant_response ) end subroutine deallocate_assisstant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_response_format ( this , response_format ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response_format this % response_format = trim ( response_format ) end subroutine set_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_response_format ( this ) use json_module , only : json_file class ( Translation ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Translation.response_format\" , tmp , found = found ) if ( found ) this % response_format = trim ( tmp ) call json % destroy () end subroutine load_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_response_format ( this ) class ( Translation ), intent ( inout ) :: this print \"('response_format: ',A)\" , trim ( this % response_format ) end subroutine print_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_file ( this , file ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file this % file = trim ( file ) end subroutine set_file !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_Translation_data ( this , file_name , & url , model , temperature , response_format ) class ( Translation ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: url character ( len =* ), optional , intent ( in ) :: model real , optional , intent ( in ) :: temperature character ( len =* ), optional , intent ( in ) :: response_format if ( present ( url )) call this % set_url ( url = url ) if ( present ( model )) call this % set_model ( model = model ) if ( present ( temperature )) call this % set_temperature ( temperature = temperature ) if ( present ( response_format )) call this % set_response_format ( response_format = response_format ) if ( present ( file_name )) then call this % set_file_name ( file_name ) call this % load ( file_name ) end if end subroutine set_Translation_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_Translation_data ( this , file_name ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_model () call this % load_temperature () call this % load_response_format () end subroutine load_Translation_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_temperature ( this ) use json_module , only : json_file class ( Translation ), intent ( inout ) :: this type ( json_file ) :: json real :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Translation.temperature\" , tmp , found = found ) if ( found ) this % temperature = tmp call json % destroy () end subroutine load_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( Translation ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Translation.url\" , tmp , found = found ) if ( found ) this % url = trim ( tmp ) call json % destroy () end subroutine load_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_model ( this ) use json_module , only : json_file class ( Translation ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"Translation.model\" , tmp , found = found ) if ( found ) this % model = trim ( tmp ) call json % destroy () end subroutine load_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_temperature ( this , temperature ) class ( Translation ), intent ( inout ) :: this real , intent ( in ) :: temperature this % temperature = temperature end subroutine set_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_url ( this , url ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_model ( this , model ) class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: model this % model = trim ( model ) end subroutine set_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine create_translation ( this , file , prompt ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( Translation ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file character ( len =* ), intent ( in ), optional :: prompt type ( pair_type ), allocatable :: req_header (:), form_data (:), file_data type ( response_type ) :: response type ( json_file ) :: json character ( len = 1024 ) :: temperature_str call this % set_file ( file = file ) if ( present ( prompt )) then call this % set_prompt ( prompt = prompt ) else call this % set_prompt ( prompt = '' ) end if req_header = [& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key )),& pair_type ( 'Content-Type' , 'multipart/form-data' )& ] write ( temperature_str , '(f3.1)' ) this % temperature form_data = [& pair_type ( 'model' , trim ( this % model )),& pair_type ( 'prompt' , trim ( this % prompt )),& pair_type ( 'response_format' , trim ( this % response_format ))& ! pair_type('temperature', trim(temperature_str))& ] file_data = pair_type ( 'file' , trim ( this % file )) response = request ( url = this % url , method = HTTP_POST , header = req_header , form = form_data , file = file_data ) if ( response % ok ) then call json % initialize () call json % deserialize ( response % content ) call json % get ( \"text\" , this % assisstant_response ) call json % destroy () else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end subroutine create_translation !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_model ( this ) class ( Translation ), intent ( inout ) :: this print \"('model: ',A)\" , trim ( this % model ) end subroutine print_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_temperature ( this ) class ( Translation ), intent ( inout ) :: this print \"('temperature: ',F3.1)\" , this % temperature end subroutine print_temperature !=============================================================================== end module foropenai_Translation","tags":"","loc":"sourcefile/foropenai_translation.f90.html"},{"title":"foropenai.f90 – ForOpenAI","text":"This file depends on sourcefile~~foropenai.f90~~EfferentGraph sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai.f90->sourcefile~foropenai_imagegeneration.f90 sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai.f90->sourcefile~foropenai_transcription.f90 sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai.f90->sourcefile~foropenai_translation.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_imagegeneration.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_transcription.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_translation.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~foropenai.f90~~AfferentGraph sourcefile~foropenai.f90 foropenai.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 sourcefile~test2.f90 test2.f90 sourcefile~test2.f90->sourcefile~foropenai.f90 sourcefile~test3.f90 test3.f90 sourcefile~test3.f90->sourcefile~foropenai.f90 sourcefile~test4.f90 test4.f90 sourcefile~test4.f90->sourcefile~foropenai.f90 sourcefile~test5.f90 test5.f90 sourcefile~test5.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai Source Code foropenai.f90 Source Code module foropenai use foropenai_base use foropenai_ChatCompletion use foropenai_Transcription use foropenai_Translation use foropenai_ImageGeneration end module foropenai","tags":"","loc":"sourcefile/foropenai.f90.html"},{"title":"foropenai_ImageGeneration.f90 – ForOpenAI","text":"This file depends on sourcefile~~foropenai_imagegeneration.f90~~EfferentGraph sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai_imagegeneration.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~foropenai_imagegeneration.f90~~AfferentGraph sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai.f90->sourcefile~foropenai_imagegeneration.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 sourcefile~test2.f90 test2.f90 sourcefile~test2.f90->sourcefile~foropenai.f90 sourcefile~test3.f90 test3.f90 sourcefile~test3.f90->sourcefile~foropenai.f90 sourcefile~test4.f90 test4.f90 sourcefile~test4.f90->sourcefile~foropenai.f90 sourcefile~test5.f90 test5.f90 sourcefile~test5.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai_ImageGeneration Source Code foropenai_ImageGeneration.f90 Source Code module foropenai_ImageGeneration use foropenai_base implicit none private public :: ImageGeneration !=============================================================================== !> author: Seyed Ali Ghasemi type , extends ( openai ) :: ImageGeneration character ( len = :), allocatable :: url character ( len = 9 ) :: size = '1024x1024' character ( len = 1000 ) :: prompt character ( len = 4 ) :: response_format = 'url' integer :: n = 1 character ( len = :), allocatable :: user_name character ( len = 1024 ), allocatable :: assistant_response (:) contains procedure :: create => create_image procedure :: deallocate_url procedure :: deallocate_user_name procedure :: deallocate_assistant_response procedure :: finalize => deallocate_ImageGeneration procedure :: load_url procedure :: load_size procedure :: load_response_format procedure :: load_n procedure :: load_user_name procedure :: load => load_ImageGeneration_data procedure :: print_url procedure :: print_size procedure :: print_prompt procedure :: print_response_format procedure :: print_n procedure :: print_user_name procedure :: print_assistant_response procedure :: set_url procedure :: set_size procedure :: set_prompt procedure :: set_response_format procedure :: set_n procedure :: set_user_name procedure :: set_assistant_response procedure :: set => set_ImageGeneration_data end type ImageGeneration !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi subroutine create_image ( this , prompt , n , size , response_format , user_name ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prompt integer , intent ( in ), optional :: n character ( len =* ), intent ( in ), optional :: size character ( len =* ), intent ( in ), optional :: response_format character ( len =* ), intent ( in ), optional :: user_name character ( len = :), allocatable :: assistant_response character ( len = :), allocatable :: jsonstr type ( pair_type ), allocatable :: req_header (:) type ( response_type ) :: response type ( json_file ) :: json logical :: found integer :: i character ( len = 10 ) :: i_str call this % set_prompt ( prompt = prompt ) if ( present ( n )) call this % set_n ( n = n ) if ( present ( size )) call this % set_size ( size = size ) if ( present ( response_format )) call this % set_response_format ( response_format = response_format ) if ( present ( user_name )) call this % set_user_name ( user_name = user_name ) req_header = [& pair_type ( 'Content-Type' , 'application/json' ),& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key ) // '' ),& pair_type ( 'OpenAI-Organization' , ' ' // trim ( this % organization ) // '' )& ] call json % initialize () call json % add ( 'prompt' , trim ( this % prompt )) call json % add ( 'n' , this % n ) call json % add ( 'size' , trim ( this % size )) call json % add ( 'response_format' , trim ( this % response_format )) call json % add ( 'user' , trim ( this % user_name )) call json % print_to_string ( jsonstr ) call json % destroy () response = request ( url = trim ( this % url ), method = HTTP_POST , data = jsonstr , header = req_header ) if ( response % ok ) then allocate ( this % assistant_response ( this % n )) call json % initialize () call json % deserialize ( response % content ) do i = 1 , this % n write ( i_str , \"(I10)\" ) i call json % get ( \"data(\" // trim ( i_str ) // \").url\" , assistant_response , found = found ) call this % set_assistant_response ( assistant_response = assistant_response , i = i ) end do call json % destroy () else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end subroutine create_image !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.url\" , tmp , found = found ) if ( found ) this % url = trim ( tmp ) call json % destroy () end subroutine load_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_size ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.size\" , tmp , found = found ) if ( found ) this % size = trim ( tmp ) call json % destroy () end subroutine load_size !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_response_format ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.response_format\" , tmp , found = found ) if ( found ) this % response_format = trim ( tmp ) call json % destroy () end subroutine load_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_n ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json integer :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.n\" , tmp , found = found ) if ( found ) this % n = tmp call json % destroy () end subroutine load_n !================================================================================ !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_user_name ( this ) use json_module , only : json_file class ( ImageGeneration ), intent ( inout ) :: this type ( json_file ) :: json character ( len = :), allocatable :: tmp logical :: found call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"ImageGeneration.user_name\" , tmp , found = found ) if ( found ) this % user_name = trim ( tmp ) call json % destroy () end subroutine load_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_url ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"url: \" , this % url end subroutine print_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_size ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"size: \" , this % size end subroutine print_size !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_prompt ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"prompt: \" , this % prompt end subroutine print_prompt !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_response_format ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"response_format: \" , this % response_format end subroutine print_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_n ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"n: \" , this % n end subroutine print_n !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_user_name ( this ) class ( ImageGeneration ), intent ( in ) :: this print * , \"user_name: \" , this % user_name end subroutine print_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_assistant_response ( this ) class ( ImageGeneration ), intent ( in ) :: this integer :: i do i = 1 , this % n print '(a,g0,a,a)' , \"assistant_response(\" , i , \"): \" , trim ( this % assistant_response ( i )) end do end subroutine print_assistant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_url ( this , url ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_size ( this , size ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: size this % size = trim ( size ) end subroutine set_size !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_prompt ( this , prompt ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: prompt this % prompt = trim ( prompt ) end subroutine set_prompt !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_response_format ( this , response_format ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response_format this % response_format = trim ( response_format ) end subroutine set_response_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_n ( this , n ) class ( ImageGeneration ), intent ( inout ) :: this integer , intent ( in ) :: n this % n = n end subroutine set_n !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_user_name ( this , user_name ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: user_name this % user_name = trim ( user_name ) end subroutine set_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_assistant_response ( this , assistant_response , i ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: assistant_response integer , intent ( in ) :: i this % assistant_response ( i ) = trim ( assistant_response ) end subroutine set_assistant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_ImageGeneration_data ( this , file_name , & url , size , prompt , response_format , n , user_name ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), optional , intent ( in ) :: file_name character ( len =* ), optional , intent ( in ) :: url character ( len =* ), optional , intent ( in ) :: size character ( len =* ), optional , intent ( in ) :: prompt character ( len =* ), optional , intent ( in ) :: response_format integer , optional , intent ( in ) :: n character ( len =* ), optional , intent ( in ) :: user_name if ( present ( url )) call this % set_url ( url = url ) if ( present ( size )) call this % set_size ( size = size ) if ( present ( prompt )) call this % set_prompt ( prompt = prompt ) if ( present ( response_format )) call this % set_response_format ( response_format = response_format ) if ( present ( n )) call this % set_n ( n = n ) if ( present ( user_name )) call this % set_user_name ( user_name = user_name ) if ( present ( file_name )) then call this % set_file_name ( file_name ) call this % load ( file_name ) end if end subroutine set_ImageGeneration_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_ImageGeneration_data ( this , file_name ) class ( ImageGeneration ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_size () call this % load_response_format () call this % load_n () call this % load_user_name () end subroutine load_ImageGeneration_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_url ( this ) class ( ImageGeneration ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_user_name ( this ) class ( ImageGeneration ), intent ( inout ) :: this if ( allocated ( this % user_name )) deallocate ( this % user_name ) end subroutine deallocate_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_assistant_response ( this ) class ( ImageGeneration ), intent ( inout ) :: this if ( allocated ( this % assistant_response )) deallocate ( this % assistant_response ) end subroutine deallocate_assistant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_ImageGeneration ( this ) class ( ImageGeneration ), intent ( inout ) :: this call this % deallocate_url () call this % deallocate_user_name () call this % deallocate_assistant_response () end subroutine deallocate_ImageGeneration !=============================================================================== end module foropenai_ImageGeneration","tags":"","loc":"sourcefile/foropenai_imagegeneration.f90.html"},{"title":"test5.f90 – ForOpenAI","text":"This file depends on sourcefile~~test5.f90~~EfferentGraph sourcefile~test5.f90 test5.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~test5.f90->sourcefile~foropenai.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai.f90->sourcefile~foropenai_imagegeneration.f90 sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai.f90->sourcefile~foropenai_transcription.f90 sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai.f90->sourcefile~foropenai_translation.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_imagegeneration.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_transcription.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_translation.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Programs test_Translation Source Code test5.f90 Source Code program test_Translation use foropenai , only : Translation implicit none type ( Translation ) :: trs call trs % set_base_data ( file_name = 'foropenai.json' ) call trs % set ( file_name = 'foropenai.json' ) call trs % create ( file = 'test/audio_de.mp3' ) call trs % print_assisstant_response () call trs % finalize () end program test_Translation","tags":"","loc":"sourcefile/test5.f90.html"},{"title":"test2.f90 – ForOpenAI","text":"This file depends on sourcefile~~test2.f90~~EfferentGraph sourcefile~test2.f90 test2.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~test2.f90->sourcefile~foropenai.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai.f90->sourcefile~foropenai_imagegeneration.f90 sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai.f90->sourcefile~foropenai_transcription.f90 sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai.f90->sourcefile~foropenai_translation.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_imagegeneration.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_transcription.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_translation.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Programs test_ChatCompletion Source Code test2.f90 Source Code program test_ChatCompletion use foropenai , only : ChatCompletion implicit none type ( ChatCompletion ) :: chat call chat % set_base_data ( file_name = 'foropenai.json' ) call chat % set ( file_name = 'foropenai.json' ) call chat % init_messages ( n = 3 ) call chat % messages ( 1 )% set ( role = 'system' , content = 'You are a helpful assistant.' ) call chat % messages ( 2 )% set ( role = 'user' , content = 'Hello?' ) call chat % messages ( 3 )% set ( role = 'assistant' , content = '' ) call chat % print_user_message () call chat % create () call chat % print_assistant_response () call chat % usage % print () call chat % finalize () end program test_ChatCompletion","tags":"","loc":"sourcefile/test2.f90.html"},{"title":"test4.f90 – ForOpenAI","text":"This file depends on sourcefile~~test4.f90~~EfferentGraph sourcefile~test4.f90 test4.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~test4.f90->sourcefile~foropenai.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai.f90->sourcefile~foropenai_imagegeneration.f90 sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai.f90->sourcefile~foropenai_transcription.f90 sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai.f90->sourcefile~foropenai_translation.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_imagegeneration.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_transcription.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_translation.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Programs test_ImageGeneration Source Code test4.f90 Source Code program test_ImageGeneration use foropenai , only : ImageGeneration implicit none type ( ImageGeneration ) :: image call image % set_base_data ( file_name = 'foropenai.json' ) call image % set ( file_name = 'foropenai.json' ) call image % create ( prompt = 'a cat with a computer' ) call image % print_assistant_response () call image % finalize () end program test_ImageGeneration","tags":"","loc":"sourcefile/test4.f90.html"},{"title":"test3.f90 – ForOpenAI","text":"This file depends on sourcefile~~test3.f90~~EfferentGraph sourcefile~test3.f90 test3.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~test3.f90->sourcefile~foropenai.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai.f90->sourcefile~foropenai_imagegeneration.f90 sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai.f90->sourcefile~foropenai_transcription.f90 sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai.f90->sourcefile~foropenai_translation.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_imagegeneration.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_transcription.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_translation.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Programs test_Transcription Source Code test3.f90 Source Code program test_Transcription use foropenai , only : Transcription implicit none type ( Transcription ) :: trs call trs % set_base_data ( file_name = 'foropenai.json' ) call trs % set ( file_name = 'foropenai.json' ) call trs % create ( file = 'test/audio.mp3' ) call trs % print_text () call trs % finalize () end program test_Transcription","tags":"","loc":"sourcefile/test3.f90.html"},{"title":"test1.f90 – ForOpenAI","text":"This file depends on sourcefile~~test1.f90~~EfferentGraph sourcefile~test1.f90 test1.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_imagegeneration.f90 foropenai_ImageGeneration.f90 sourcefile~foropenai.f90->sourcefile~foropenai_imagegeneration.f90 sourcefile~foropenai_transcription.f90 foropenai_Transcription.f90 sourcefile~foropenai.f90->sourcefile~foropenai_transcription.f90 sourcefile~foropenai_translation.f90 foropenai_Translation.f90 sourcefile~foropenai.f90->sourcefile~foropenai_translation.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_imagegeneration.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_transcription.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_translation.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Programs test_base Source Code test1.f90 Source Code program test_base use foropenai , only : openai implicit none type ( openai ) :: base call base % set_base_data ( file_name = 'foropenai.json' ) call base % print_api_key () call base % print_organization () call base % print_file_name () call base % finalize () end program test_base","tags":"","loc":"sourcefile/test1.f90.html"}]}