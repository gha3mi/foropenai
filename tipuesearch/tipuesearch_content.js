var tipuesearch = {"pages":[{"title":" ForOpenAI ","text":"ForOpenAI ForOpenAI : A community-maintained Fortran wrapper for the OpenAI API. How to use Prerequisites: On Ubuntu, you need to install the curl development headers. Use the following command: sudo apt install -y libcurl4-openssl-dev Clone the repository: You can clone the ForOpenAI repository from GitHub using the following command: git clone https://github.com/gha3mi/foropenai.git cd foropenai OpenAI API Key Configuration: Your Secret API key can be located by accessing the OpenAI User settings . For enhanced security and convenience, it is strongly recommended to configure the API key as an environment variable. On Ubuntu, use the following command, replacing \"your_api_key\" with your actual API key: shell\nexport OPENAI_API_KEY=\"your_api_key\" (Optional) If desired for organizational purposes, you can also establish an optional environment variable on Ubuntu: shell\nexport OPENAI_ORG=\"your_organization\" Alternatively, the OpenAI API key can be included in the foropenai.json configuration file. json\n{\n    \"base\": {\n        \"api_key\": \"OPENAI_API_KEY\",\n        \"organization\": \"\"\n    }\n} Use ChatGPT from the terminal: fpm run Example fpm dependency If you want to use ForOpenAI as a dependency in your own fpm project,\nyou can easily include it by adding the following line to your fpm.toml file: [dependencies] foropenai = { git = \"https://github.com/gha3mi/foropenai.git\" } API documentation The most up-to-date API documentation for the master branch is available here .\nTo generate the API documentation for ForOpenAI using ford run the following\ncommand: ford ford.yml Contributing Contributions to ForOpenAI are welcome!\nIf you find any issues or would like to suggest improvements, please open an issue. Developer Info Seyed Ali Ghasemi","tags":"home","loc":"index.html"},{"title":"usage – ForOpenAI ","text":"type, private :: usage Inherited by type~~usage~~InheritedByGraph type~usage usage type~chatcompletion ChatCompletion type~chatcompletion->type~usage usage Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables prompt_tokens completion_tokens total_tokens Type-Bound Procedures print_prompt_tokens print_completion_tokens print_total_tokens Source Code usage Components Type Visibility Attributes Name Initial integer, public :: prompt_tokens = 0 integer, public :: completion_tokens = 0 integer, public :: total_tokens = 0 Type-Bound Procedures procedure, public,  :: print_prompt_tokens private impure elemental subroutine print_prompt_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this procedure, public,  :: print_completion_tokens private impure elemental subroutine print_completion_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this procedure, public,  :: print_total_tokens private impure elemental subroutine print_total_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Source Code type usage integer :: prompt_tokens = 0 integer :: completion_tokens = 0 integer :: total_tokens = 0 contains procedure :: print_prompt_tokens procedure :: print_completion_tokens procedure :: print_total_tokens end type usage","tags":"","loc":"type/usage.html"},{"title":"ChatCompletion_messages – ForOpenAI ","text":"type, private :: ChatCompletion_messages Inherited by type~~chatcompletion_messages~~InheritedByGraph type~chatcompletion_messages ChatCompletion_messages type~chatcompletion ChatCompletion type~chatcompletion->type~chatcompletion_messages messages Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables role content name Type-Bound Procedures deallocate_role deallocate_content deallocate_name finalize set set_role set_content set_name Source Code ChatCompletion_messages Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: role character(len=:), public, allocatable :: content character(len=:), public, allocatable :: name Type-Bound Procedures procedure, public,  :: deallocate_role private pure elemental subroutine deallocate_role (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this procedure, public,  :: deallocate_content private pure elemental subroutine deallocate_content (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this procedure, public,  :: deallocate_name private pure elemental subroutine deallocate_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this procedure, public,  :: finalize => deallocate_ChatCompletion_messages private pure elemental subroutine deallocate_ChatCompletion_messages (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this procedure, public,  :: set => set_message private pure elemental subroutine set_message (this, role, content, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role character(len=*), intent(in) :: content character(len=*), intent(in), optional :: name procedure, public,  :: set_role private pure elemental subroutine set_role (this, role) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role procedure, public,  :: set_content private pure elemental subroutine set_content (this, content) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: content procedure, public,  :: set_name private pure elemental subroutine set_name (this, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: name Source Code type :: ChatCompletion_messages character ( len = :), allocatable :: role character ( len = :), allocatable :: content character ( len = :), allocatable :: name contains procedure :: deallocate_role procedure :: deallocate_content procedure :: deallocate_name procedure :: finalize => deallocate_ChatCompletion_messages procedure :: set => set_message procedure :: set_role procedure :: set_content procedure :: set_name end type ChatCompletion_messages","tags":"","loc":"type/chatcompletion_messages.html"},{"title":"ChatCompletion – ForOpenAI ","text":"type, public, extends( openai ) :: ChatCompletion Inherits type~~chatcompletion~~InheritsGraph type~chatcompletion ChatCompletion type~chatcompletion_messages ChatCompletion_messages type~chatcompletion->type~chatcompletion_messages messages type~openai openai type~chatcompletion->type~openai type~usage usage type~chatcompletion->type~usage usage Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables organization api_key file_name api_key_env organization_env url model user_name model_list messages max_tokens usage temperature finish_reason Type-Bound Procedures deallocate_api_key deallocate_organization deallocate_file_name load_api_key load_organization load_base_data print_api_key print_organization print_file_name set_organization set_api_key set_file_name set_api_key_env set_organization_env set_base_data check create conversation deallocate_messages deallocate_model_list deallocate_url deallocate_model deallocate_user_name deallocate_finish_reason finalize get_assistant_response get_user_message init_messages load_ChatCompletion_data load_user_name load_url load_model load_temperature load_max_tokens read_user_message print_user_name print_model_list print_model print_temperature print_max_tokens print_user_message print_assistant_response set_user_name set_url set_model set_model_list select_model set_temperature set_max_tokens set_asisstant_response set_user_message write_history print_finish_reason Source Code ChatCompletion Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=:), public, allocatable :: model character(len=:), public, allocatable :: user_name character(len=256), public, allocatable :: model_list (:) type( ChatCompletion_messages ), public, allocatable :: messages (:) integer, public :: max_tokens type( usage ), public :: usage real, public :: temperature character(len=:), public, allocatable :: finish_reason Type-Bound Procedures procedure, public,  :: deallocate_api_key private pure elemental subroutine deallocate_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: deallocate_organization private pure elemental subroutine deallocate_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: deallocate_file_name private pure elemental subroutine deallocate_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: load_api_key private impure elemental subroutine load_api_key (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name procedure, public,  :: load_organization private impure elemental subroutine load_organization (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name procedure, public,  :: load_base_data private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_api_key private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_organization private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_file_name private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: set_organization private pure elemental subroutine set_organization (this, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: organization procedure, public,  :: set_api_key private pure elemental subroutine set_api_key (this, api_key) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: api_key procedure, public,  :: set_file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: set_api_key_env private impure elemental subroutine set_api_key_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status procedure, public,  :: set_organization_env private impure elemental subroutine set_organization_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status procedure, public,  :: set_base_data private impure elemental subroutine set_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: check => check_chat_completion private impure elemental subroutine check_chat_completion (this, error) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(out) :: error procedure, public,  :: create => create_chat_completion private impure elemental subroutine create_chat_completion (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: conversation private impure elemental subroutine conversation (this, config_file, input_file, output_file, inputfile_command, exit_command) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: config_file character(len=*), intent(in) :: input_file character(len=*), intent(in) :: output_file character(len=*), intent(in) :: inputfile_command character(len=*), intent(in) :: exit_command procedure, public,  :: deallocate_messages private pure elemental subroutine deallocate_messages (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_model_list private pure elemental subroutine deallocate_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_url private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_model private pure elemental subroutine deallocate_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_user_name private pure elemental subroutine deallocate_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: deallocate_finish_reason private pure elemental subroutine deallocate_finish_reason (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: finalize => deallocate_ChatCompletion private pure elemental subroutine deallocate_ChatCompletion (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: get_assistant_response private pure function get_assistant_response (this) result(response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable procedure, public,  :: get_user_message private pure function get_user_message (this) result(message) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable procedure, public,  :: init_messages private pure elemental subroutine init_messages (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n procedure, public,  :: load_ChatCompletion_data private impure elemental subroutine load_ChatCompletion_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: load_user_name private impure elemental subroutine load_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_url private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_model private impure elemental subroutine load_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_temperature private impure elemental subroutine load_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: load_max_tokens private impure elemental subroutine load_max_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: read_user_message private impure elemental subroutine read_user_message (this, file_name, command) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in) :: command procedure, public,  :: print_user_name private impure elemental subroutine print_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_model_list private impure elemental subroutine print_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_model private impure elemental subroutine print_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_temperature private impure elemental subroutine print_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_max_tokens private impure elemental subroutine print_max_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_user_message private impure elemental subroutine print_user_message (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: print_assistant_response private impure elemental subroutine print_assistant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: set_user_name private pure elemental subroutine set_user_name (this, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: user_name procedure, public,  :: set_url private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: url procedure, public,  :: set_model private pure elemental subroutine set_model (this, model) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: model procedure, public,  :: set_model_list private pure elemental subroutine set_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this procedure, public,  :: select_model private pure elemental subroutine select_model (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n procedure, public,  :: set_temperature private pure elemental subroutine set_temperature (this, temperature) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: temperature procedure, public,  :: set_max_tokens private pure elemental subroutine set_max_tokens (this, max_tokens) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: max_tokens procedure, public,  :: set_asisstant_response private pure elemental subroutine set_asisstant_response (this, response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: response procedure, public,  :: set_user_message private pure elemental subroutine set_user_message (this, message) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: message procedure, public,  :: write_history private impure elemental subroutine write_history (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_finish_reason private impure elemental subroutine print_finish_reason (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Source Code type , extends ( openai ) :: ChatCompletion character ( len = :), allocatable :: url character ( len = :), allocatable :: model character ( len = :), allocatable :: user_name character ( len = 256 ), allocatable :: model_list (:) type ( ChatCompletion_messages ), allocatable :: messages (:) integer :: max_tokens type ( usage ) :: usage real :: temperature character ( len = :), allocatable :: finish_reason contains procedure :: check => check_chat_completion procedure :: create => create_chat_completion procedure :: conversation procedure :: deallocate_messages procedure :: deallocate_model_list procedure :: deallocate_url procedure :: deallocate_model procedure :: deallocate_user_name procedure :: deallocate_finish_reason procedure :: finalize => deallocate_ChatCompletion procedure :: get_assistant_response procedure :: get_user_message procedure :: init_messages procedure :: load_ChatCompletion_data procedure :: load_user_name procedure :: load_url procedure :: load_model procedure :: load_temperature procedure :: load_max_tokens procedure :: read_user_message procedure :: print_user_name procedure :: print_model_list procedure :: print_model procedure :: print_temperature procedure :: print_max_tokens procedure :: print_user_message procedure :: print_assistant_response procedure :: set_user_name procedure :: set_url procedure :: set_model procedure :: set_model_list procedure :: select_model procedure :: set_temperature procedure :: set_max_tokens procedure :: set_asisstant_response procedure :: set_user_message procedure :: write_history procedure :: print_finish_reason end type ChatCompletion","tags":"","loc":"type/chatcompletion.html"},{"title":"openai – ForOpenAI ","text":"type, public :: openai Inherited by type~~openai~~InheritedByGraph type~openai openai type~chatcompletion ChatCompletion type~chatcompletion->type~openai Help × Graph Key Nodes of different colours represent the following: Graph Key Type Type This Page's Entity This Page's Entity Solid arrows point from a derived type to the parent type which it\nextends. Dashed arrows point from a derived type to the other\ntypes it contains as a components, with a label listing the name(s) of\nsaid component(s). Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables organization api_key file_name api_key_env organization_env Type-Bound Procedures deallocate_api_key deallocate_organization deallocate_file_name finalize load_api_key load_organization load_base_data print_api_key print_organization print_file_name set_organization set_api_key set_file_name set_api_key_env set_organization_env set_base_data Source Code openai Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' Type-Bound Procedures procedure, public,  :: deallocate_api_key private pure elemental subroutine deallocate_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: deallocate_organization private pure elemental subroutine deallocate_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: deallocate_file_name private pure elemental subroutine deallocate_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: finalize => deallocate_openai private pure elemental subroutine deallocate_openai (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: load_api_key private impure elemental subroutine load_api_key (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name procedure, public,  :: load_organization private impure elemental subroutine load_organization (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name procedure, public,  :: load_base_data private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: print_api_key private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_organization private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: print_file_name private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this procedure, public,  :: set_organization private pure elemental subroutine set_organization (this, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: organization procedure, public,  :: set_api_key private pure elemental subroutine set_api_key (this, api_key) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: api_key procedure, public,  :: set_file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: set_api_key_env private impure elemental subroutine set_api_key_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status procedure, public,  :: set_organization_env private impure elemental subroutine set_organization_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status procedure, public,  :: set_base_data private impure elemental subroutine set_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name Source Code type openai character ( len = :), allocatable :: organization character ( len = :), allocatable :: api_key character ( len = :), allocatable :: file_name character ( len = 14 ) :: api_key_env = 'OPENAI_API_KEY' character ( len = 10 ) :: organization_env = 'OPENAI_ORG' contains procedure :: deallocate_api_key procedure :: deallocate_organization procedure :: deallocate_file_name procedure :: finalize => deallocate_openai procedure :: load_api_key procedure :: load_organization procedure :: load_base_data procedure :: print_api_key procedure :: print_organization procedure :: print_file_name procedure :: set_organization procedure :: set_api_key procedure :: set_file_name procedure :: set_api_key_env procedure :: set_organization_env procedure :: set_base_data end type openai","tags":"","loc":"type/openai.html"},{"title":"get_assistant_response – ForOpenAI","text":"private pure function get_assistant_response(this) result(response) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable Calls proc~~get_assistant_response~~CallsGraph proc~get_assistant_response foropenai_ChatCompletion::ChatCompletion%get_assistant_response messages messages proc~get_assistant_response->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~get_assistant_response~~CalledByGraph proc~get_assistant_response foropenai_ChatCompletion::ChatCompletion%get_assistant_response proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~get_assistant_response proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~conversation->proc~write_history proc~write_history->proc~get_assistant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents","tags":"","loc":"proc/get_assistant_response.html"},{"title":"get_user_message – ForOpenAI","text":"private pure function get_user_message(this) result(message) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable Calls proc~~get_user_message~~CallsGraph proc~get_user_message foropenai_ChatCompletion::ChatCompletion%get_user_message messages messages proc~get_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~get_user_message~~CalledByGraph proc~get_user_message foropenai_ChatCompletion::ChatCompletion%get_user_message proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~get_user_message proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~conversation->proc~write_history proc~write_history->proc~get_user_message Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents","tags":"","loc":"proc/get_user_message.html"},{"title":"set_user_message – ForOpenAI","text":"private pure elemental subroutine set_user_message(this, message) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: message Calls proc~~set_user_message~~CallsGraph proc~set_user_message foropenai_ChatCompletion::ChatCompletion%set_user_message messages messages proc~set_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_user_message~~CalledByGraph proc~set_user_message foropenai_ChatCompletion::ChatCompletion%set_user_message proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message proc~read_user_message->proc~set_user_message proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~read_user_message Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_user_message Source Code elemental pure subroutine set_user_message ( this , message ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: message integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then call this % messages ( i )% set_content ( content = message ) end if end do end subroutine set_user_message","tags":"","loc":"proc/set_user_message.html"},{"title":"set_asisstant_response – ForOpenAI","text":"private pure elemental subroutine set_asisstant_response(this, response) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: response Calls proc~~set_asisstant_response~~CallsGraph proc~set_asisstant_response foropenai_ChatCompletion::ChatCompletion%set_asisstant_response messages messages proc~set_asisstant_response->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_asisstant_response~~CalledByGraph proc~set_asisstant_response foropenai_ChatCompletion::ChatCompletion%set_asisstant_response proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~set_asisstant_response proc~create_chat_completion foropenai_ChatCompletion::ChatCompletion%create_chat_completion proc~create_chat_completion->proc~set_asisstant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_asisstant_response Source Code elemental pure subroutine set_asisstant_response ( this , response ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then call this % messages ( i )% set_content ( content = response ) end if end do end subroutine set_asisstant_response","tags":"","loc":"proc/set_asisstant_response.html"},{"title":"print_assistant_response – ForOpenAI","text":"private impure elemental subroutine print_assistant_response(this) Uses face proc~~print_assistant_response~~UsesGraph proc~print_assistant_response foropenai_ChatCompletion::ChatCompletion%print_assistant_response face face proc~print_assistant_response->face Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~print_assistant_response~~CallsGraph proc~print_assistant_response foropenai_ChatCompletion::ChatCompletion%print_assistant_response colorize colorize proc~print_assistant_response->colorize messages messages proc~print_assistant_response->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~print_assistant_response~~CalledByGraph proc~print_assistant_response foropenai_ChatCompletion::ChatCompletion%print_assistant_response proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~print_assistant_response Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_assistant_response Source Code elemental impure subroutine print_assistant_response ( this ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then print \"(A,': ',A)\" , colorize ( \"ChatGPT\" , color_bg = 'blue' ), this % messages ( i )% content end if end do end subroutine print_assistant_response","tags":"","loc":"proc/print_assistant_response.html"},{"title":"print_user_message – ForOpenAI","text":"private impure elemental subroutine print_user_message(this) Uses face proc~~print_user_message~~UsesGraph proc~print_user_message foropenai_ChatCompletion::ChatCompletion%print_user_message face face proc~print_user_message->face Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~print_user_message~~CallsGraph proc~print_user_message foropenai_ChatCompletion::ChatCompletion%print_user_message colorize colorize proc~print_user_message->colorize messages messages proc~print_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_user_message Source Code elemental impure subroutine print_user_message ( this ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then print \"(A,': ',A)\" , colorize ( trim ( this % user_name ), color_bg = 'green' ), this % messages ( i )% content end if end do end subroutine print_user_message","tags":"","loc":"proc/print_user_message.html"},{"title":"deallocate_finish_reason – ForOpenAI","text":"private pure elemental subroutine deallocate_finish_reason(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_finish_reason~~CalledByGraph proc~deallocate_finish_reason foropenai_ChatCompletion::ChatCompletion%deallocate_finish_reason proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_finish_reason Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_finish_reason Source Code elemental pure subroutine deallocate_finish_reason ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % finish_reason )) deallocate ( this % finish_reason ) end subroutine deallocate_finish_reason","tags":"","loc":"proc/deallocate_finish_reason.html"},{"title":"print_finish_reason – ForOpenAI","text":"private impure elemental subroutine print_finish_reason(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_finish_reason Source Code elemental impure subroutine print_finish_reason ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('finish reason: ',A)\" , trim ( this % finish_reason ) end subroutine print_finish_reason","tags":"","loc":"proc/print_finish_reason.html"},{"title":"conversation – ForOpenAI","text":"private impure elemental subroutine conversation(this, config_file, input_file, output_file, inputfile_command, exit_command) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: config_file character(len=*), intent(in) :: input_file character(len=*), intent(in) :: output_file character(len=*), intent(in) :: inputfile_command character(len=*), intent(in) :: exit_command Calls proc~~conversation~~CallsGraph proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation create create proc~conversation->create messages messages proc~conversation->messages proc~get_assistant_response foropenai_ChatCompletion::ChatCompletion%get_assistant_response proc~conversation->proc~get_assistant_response proc~get_user_message foropenai_ChatCompletion::ChatCompletion%get_user_message proc~conversation->proc~get_user_message proc~init_messages foropenai_ChatCompletion::ChatCompletion%init_messages proc~conversation->proc~init_messages proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~conversation->proc~load_chatcompletion_data proc~print_assistant_response foropenai_ChatCompletion::ChatCompletion%print_assistant_response proc~conversation->proc~print_assistant_response proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message proc~conversation->proc~read_user_message proc~set_asisstant_response foropenai_ChatCompletion::ChatCompletion%set_asisstant_response proc~conversation->proc~set_asisstant_response proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~conversation->proc~write_history set_base_data set_base_data proc~conversation->set_base_data proc~get_assistant_response->messages proc~get_user_message->messages proc~init_messages->messages proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens proc~load_chatcompletion_data->proc~load_max_tokens proc~load_model foropenai_ChatCompletion::ChatCompletion%load_model proc~load_chatcompletion_data->proc~load_model proc~load_temperature foropenai_ChatCompletion::ChatCompletion%load_temperature proc~load_chatcompletion_data->proc~load_temperature proc~load_url foropenai_ChatCompletion::ChatCompletion%load_url proc~load_chatcompletion_data->proc~load_url proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name proc~load_chatcompletion_data->proc~load_user_name set_file_name set_file_name proc~load_chatcompletion_data->set_file_name proc~print_assistant_response->messages colorize colorize proc~print_assistant_response->colorize proc~read_user_message->colorize proc~set_user_message foropenai_ChatCompletion::ChatCompletion%set_user_message proc~read_user_message->proc~set_user_message proc~set_asisstant_response->messages proc~write_history->proc~get_assistant_response proc~write_history->proc~get_user_message get get proc~load_max_tokens->get load_file load_file proc~load_max_tokens->load_file proc~load_model->get proc~load_model->load_file proc~load_temperature->get proc~load_temperature->load_file proc~load_url->get proc~load_url->load_file proc~load_user_name->get proc~load_user_name->load_file proc~set_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code conversation Source Code elemental impure subroutine conversation ( this , config_file , input_file , output_file , inputfile_command , exit_command ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: config_file character ( len =* ), intent ( in ) :: input_file character ( len =* ), intent ( in ) :: output_file character ( len =* ), intent ( in ) :: inputfile_command character ( len =* ), intent ( in ) :: exit_command call this % set_base_data ( config_file ) call this % load_ChatCompletion_data ( config_file ) call this % init_messages ( n = 3 ) call this % messages ( 1 )% set ( role = 'system' , content = 'You are a helpful assistant.' ) call this % messages ( 2 )% set ( role = 'assistant' , content = '' ) call this % messages ( 3 )% set_role ( role = 'user' ) do call this % read_user_message ( file_name = trim ( input_file ), command = trim ( inputfile_command )) if ( trim ( this % get_user_message ()) == trim ( exit_command )) exit call this % create () call this % set_asisstant_response ( response = this % get_assistant_response ()) call this % print_assistant_response () call this % write_history ( file_name = trim ( output_file )) end do call this % usage % print_prompt_tokens () call this % usage % print_completion_tokens () call this % usage % print_total_tokens () end subroutine conversation","tags":"","loc":"proc/conversation.html"},{"title":"write_history – ForOpenAI","text":"private impure elemental subroutine write_history(this, file_name) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~write_history~~CallsGraph proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~get_assistant_response foropenai_ChatCompletion::ChatCompletion%get_assistant_response proc~write_history->proc~get_assistant_response proc~get_user_message foropenai_ChatCompletion::ChatCompletion%get_user_message proc~write_history->proc~get_user_message messages messages proc~get_assistant_response->messages proc~get_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~write_history~~CalledByGraph proc~write_history foropenai_ChatCompletion::ChatCompletion%write_history proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~write_history Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code write_history Source Code elemental impure subroutine write_history ( this , file_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name integer :: iounit open ( newunit = iounit , file = trim ( file_name ), status = 'unknown' , access = 'append' , action = 'write' ) write ( iounit , \"(A,': ',A)\" ) this % user_name , this % get_user_message () write ( iounit , \"('ChatGPT: ',A)\" ) this % get_assistant_response () close ( iounit ) end subroutine write_history","tags":"","loc":"proc/write_history.html"},{"title":"read_user_message – ForOpenAI","text":"private impure elemental subroutine read_user_message(this, file_name, command) Uses face proc~~read_user_message~~UsesGraph proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message face face proc~read_user_message->face Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in) :: command Calls proc~~read_user_message~~CallsGraph proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message colorize colorize proc~read_user_message->colorize proc~set_user_message foropenai_ChatCompletion::ChatCompletion%set_user_message proc~read_user_message->proc~set_user_message messages messages proc~set_user_message->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~read_user_message~~CalledByGraph proc~read_user_message foropenai_ChatCompletion::ChatCompletion%read_user_message proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~read_user_message Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code read_user_message Source Code elemental impure subroutine read_user_message ( this , file_name , command ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name character ( len =* ), intent ( in ) :: command character ( len = :), allocatable :: message character ( len = :), allocatable :: whole_message character ( len = 1000000 ) :: tmp integer :: iounit , iostat write ( * , \"(A,': ')\" , advance = 'no' ) colorize ( trim ( this % user_name ), color_bg = 'green' ) read * , tmp message = trim ( tmp ) if ( trim ( message ) == trim ( command )) then open ( newunit = iounit , file = trim ( file_name ), status = 'old' , action = 'read' ) whole_message = '' do read ( iounit , '(A)' , iostat = iostat ) tmp if ( iostat /= 0 ) exit whole_message = trim ( whole_message ) // trim ( tmp ) // new_line ( ' ' ) end do close ( iounit ) call this % set_user_message ( message = whole_message ) else call this % set_user_message ( message = message ) end if end subroutine read_user_message","tags":"","loc":"proc/read_user_message.html"},{"title":"deallocate_ChatCompletion_messages – ForOpenAI","text":"private pure elemental subroutine deallocate_ChatCompletion_messages(this) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this Calls proc~~deallocate_chatcompletion_messages~~CallsGraph proc~deallocate_chatcompletion_messages foropenai_ChatCompletion::ChatCompletion_messages%deallocate_ChatCompletion_messages proc~deallocate_content foropenai_ChatCompletion::ChatCompletion_messages%deallocate_content proc~deallocate_chatcompletion_messages->proc~deallocate_content proc~deallocate_name foropenai_ChatCompletion::ChatCompletion_messages%deallocate_name proc~deallocate_chatcompletion_messages->proc~deallocate_name proc~deallocate_role foropenai_ChatCompletion::ChatCompletion_messages%deallocate_role proc~deallocate_chatcompletion_messages->proc~deallocate_role Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_ChatCompletion_messages Source Code elemental pure subroutine deallocate_ChatCompletion_messages ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this call this % deallocate_role () call this % deallocate_content () call this % deallocate_name () end subroutine deallocate_ChatCompletion_messages","tags":"","loc":"proc/deallocate_chatcompletion_messages.html"},{"title":"deallocate_ChatCompletion – ForOpenAI","text":"private pure elemental subroutine deallocate_ChatCompletion(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~deallocate_chatcompletion~~CallsGraph proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_finish_reason foropenai_ChatCompletion::ChatCompletion%deallocate_finish_reason proc~deallocate_chatcompletion->proc~deallocate_finish_reason proc~deallocate_messages foropenai_ChatCompletion::ChatCompletion%deallocate_messages proc~deallocate_chatcompletion->proc~deallocate_messages proc~deallocate_model foropenai_ChatCompletion::ChatCompletion%deallocate_model proc~deallocate_chatcompletion->proc~deallocate_model proc~deallocate_model_list foropenai_ChatCompletion::ChatCompletion%deallocate_model_list proc~deallocate_chatcompletion->proc~deallocate_model_list proc~deallocate_url foropenai_ChatCompletion::ChatCompletion%deallocate_url proc~deallocate_chatcompletion->proc~deallocate_url proc~deallocate_user_name foropenai_ChatCompletion::ChatCompletion%deallocate_user_name proc~deallocate_chatcompletion->proc~deallocate_user_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_ChatCompletion Source Code elemental pure subroutine deallocate_ChatCompletion ( this ) class ( ChatCompletion ), intent ( inout ) :: this call this % deallocate_messages () call this % deallocate_model_list () call this % deallocate_url () call this % deallocate_model () call this % deallocate_user_name () call this % deallocate_finish_reason () end subroutine deallocate_ChatCompletion","tags":"","loc":"proc/deallocate_chatcompletion.html"},{"title":"deallocate_url – ForOpenAI","text":"private pure elemental subroutine deallocate_url(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_url~~CalledByGraph proc~deallocate_url foropenai_ChatCompletion::ChatCompletion%deallocate_url proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_url Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_url Source Code elemental pure subroutine deallocate_url ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url","tags":"","loc":"proc/deallocate_url.html"},{"title":"deallocate_model – ForOpenAI","text":"private pure elemental subroutine deallocate_model(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_model~~CalledByGraph proc~deallocate_model foropenai_ChatCompletion::ChatCompletion%deallocate_model proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_model Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_model Source Code elemental pure subroutine deallocate_model ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % model )) deallocate ( this % model ) end subroutine deallocate_model","tags":"","loc":"proc/deallocate_model.html"},{"title":"deallocate_user_name – ForOpenAI","text":"private pure elemental subroutine deallocate_user_name(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_user_name~~CalledByGraph proc~deallocate_user_name foropenai_ChatCompletion::ChatCompletion%deallocate_user_name proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_user_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_user_name Source Code elemental pure subroutine deallocate_user_name ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % user_name )) deallocate ( this % user_name ) end subroutine deallocate_user_name","tags":"","loc":"proc/deallocate_user_name.html"},{"title":"load_ChatCompletion_data – ForOpenAI","text":"private impure elemental subroutine load_ChatCompletion_data(this, file_name) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~load_chatcompletion_data~~CallsGraph proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens proc~load_chatcompletion_data->proc~load_max_tokens proc~load_model foropenai_ChatCompletion::ChatCompletion%load_model proc~load_chatcompletion_data->proc~load_model proc~load_temperature foropenai_ChatCompletion::ChatCompletion%load_temperature proc~load_chatcompletion_data->proc~load_temperature proc~load_url foropenai_ChatCompletion::ChatCompletion%load_url proc~load_chatcompletion_data->proc~load_url proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name proc~load_chatcompletion_data->proc~load_user_name set_file_name set_file_name proc~load_chatcompletion_data->set_file_name get get proc~load_max_tokens->get load_file load_file proc~load_max_tokens->load_file proc~load_model->get proc~load_model->load_file proc~load_temperature->get proc~load_temperature->load_file proc~load_url->get proc~load_url->load_file proc~load_user_name->get proc~load_user_name->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_chatcompletion_data~~CalledByGraph proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~load_chatcompletion_data Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_ChatCompletion_data Source Code elemental impure subroutine load_ChatCompletion_data ( this , file_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_model () call this % load_user_name () call this % load_temperature () call this % load_max_tokens () end subroutine load_ChatCompletion_data","tags":"","loc":"proc/load_chatcompletion_data.html"},{"title":"set_message – ForOpenAI","text":"private pure elemental subroutine set_message(this, role, content, name) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role character(len=*), intent(in) :: content character(len=*), intent(in), optional :: name Contents Source Code set_message Source Code elemental pure subroutine set_message ( this , role , content , name ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: role character ( len =* ), intent ( in ) :: content character ( len =* ), optional , intent ( in ) :: name this % role = trim ( role ) this % content = trim ( content ) if ( present ( name )) this % name = trim ( name ) end subroutine set_message","tags":"","loc":"proc/set_message.html"},{"title":"load_max_tokens – ForOpenAI","text":"private impure elemental subroutine load_max_tokens(this) Uses json_module proc~~load_max_tokens~~UsesGraph proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens json_module json_module proc~load_max_tokens->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_max_tokens~~CallsGraph proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens get get proc~load_max_tokens->get load_file load_file proc~load_max_tokens->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_max_tokens~~CalledByGraph proc~load_max_tokens foropenai_ChatCompletion::ChatCompletion%load_max_tokens proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_max_tokens proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~load_chatcompletion_data Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_max_tokens Source Code elemental impure subroutine load_max_tokens ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.max_tokens\" , this % max_tokens ) end subroutine load_max_tokens","tags":"","loc":"proc/load_max_tokens.html"},{"title":"load_temperature – ForOpenAI","text":"private impure elemental subroutine load_temperature(this) Uses json_module proc~~load_temperature~~UsesGraph proc~load_temperature foropenai_ChatCompletion::ChatCompletion%load_temperature json_module json_module proc~load_temperature->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_temperature~~CallsGraph proc~load_temperature foropenai_ChatCompletion::ChatCompletion%load_temperature get get proc~load_temperature->get load_file load_file proc~load_temperature->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_temperature~~CalledByGraph proc~load_temperature foropenai_ChatCompletion::ChatCompletion%load_temperature proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_temperature proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~load_chatcompletion_data Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_temperature Source Code elemental impure subroutine load_temperature ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.temperature\" , this % temperature ) end subroutine load_temperature","tags":"","loc":"proc/load_temperature.html"},{"title":"load_url – ForOpenAI","text":"private impure elemental subroutine load_url(this) Uses json_module proc~~load_url~~UsesGraph proc~load_url foropenai_ChatCompletion::ChatCompletion%load_url json_module json_module proc~load_url->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_url~~CallsGraph proc~load_url foropenai_ChatCompletion::ChatCompletion%load_url get get proc~load_url->get load_file load_file proc~load_url->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_url~~CalledByGraph proc~load_url foropenai_ChatCompletion::ChatCompletion%load_url proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_url proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~load_chatcompletion_data Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_url Source Code elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.url\" , this % url ) end subroutine load_url","tags":"","loc":"proc/load_url.html"},{"title":"load_model – ForOpenAI","text":"private impure elemental subroutine load_model(this) Uses json_module proc~~load_model~~UsesGraph proc~load_model foropenai_ChatCompletion::ChatCompletion%load_model json_module json_module proc~load_model->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_model~~CallsGraph proc~load_model foropenai_ChatCompletion::ChatCompletion%load_model get get proc~load_model->get load_file load_file proc~load_model->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_model~~CalledByGraph proc~load_model foropenai_ChatCompletion::ChatCompletion%load_model proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_model proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~load_chatcompletion_data Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_model Source Code elemental impure subroutine load_model ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.model\" , this % model ) end subroutine load_model","tags":"","loc":"proc/load_model.html"},{"title":"load_user_name – ForOpenAI","text":"private impure elemental subroutine load_user_name(this) Uses json_module proc~~load_user_name~~UsesGraph proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name json_module json_module proc~load_user_name->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~load_user_name~~CallsGraph proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name get get proc~load_user_name->get load_file load_file proc~load_user_name->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_user_name~~CalledByGraph proc~load_user_name foropenai_ChatCompletion::ChatCompletion%load_user_name proc~load_chatcompletion_data foropenai_ChatCompletion::ChatCompletion%load_ChatCompletion_data proc~load_chatcompletion_data->proc~load_user_name proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~load_chatcompletion_data Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_user_name Source Code elemental impure subroutine load_user_name ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.user_name\" , this % user_name ) end subroutine load_user_name","tags":"","loc":"proc/load_user_name.html"},{"title":"deallocate_model_list – ForOpenAI","text":"private pure elemental subroutine deallocate_model_list(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_model_list~~CalledByGraph proc~deallocate_model_list foropenai_ChatCompletion::ChatCompletion%deallocate_model_list proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_model_list Source Code elemental pure subroutine deallocate_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % model_list )) deallocate ( this % model_list ) end subroutine deallocate_model_list","tags":"","loc":"proc/deallocate_model_list.html"},{"title":"set_model_list – ForOpenAI","text":"private pure elemental subroutine set_model_list(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~set_model_list~~CallsGraph proc~set_model_list foropenai_ChatCompletion::ChatCompletion%set_model_list model_list model_list proc~set_model_list->model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_model_list~~CalledByGraph proc~set_model_list foropenai_ChatCompletion::ChatCompletion%set_model_list proc~print_model_list foropenai_ChatCompletion::ChatCompletion%print_model_list proc~print_model_list->proc~set_model_list proc~select_model foropenai_ChatCompletion::ChatCompletion%select_model proc~select_model->proc~set_model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_model_list Source Code elemental pure subroutine set_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this if (. not . allocated ( this % model_list )) allocate ( this % model_list ( 8 )) this % model_list ( 1 ) = trim ( 'gpt-4' ) this % model_list ( 2 ) = trim ( 'gpt-4-0613' ) this % model_list ( 3 ) = trim ( 'gpt-4-32k' ) this % model_list ( 4 ) = trim ( 'gpt-4-32k-0613' ) this % model_list ( 5 ) = trim ( 'gpt-3.5-turbo' ) this % model_list ( 6 ) = trim ( 'gpt-3.5-turbo-0613' ) this % model_list ( 7 ) = trim ( 'gpt-3.5-turbo-16k' ) this % model_list ( 8 ) = trim ( 'gpt-3.5-turbo-16k-0613' ) end subroutine set_model_list","tags":"","loc":"proc/set_model_list.html"},{"title":"print_model_list – ForOpenAI","text":"private impure elemental subroutine print_model_list(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~print_model_list~~CallsGraph proc~print_model_list foropenai_ChatCompletion::ChatCompletion%print_model_list model_list model_list proc~print_model_list->model_list proc~set_model_list foropenai_ChatCompletion::ChatCompletion%set_model_list proc~print_model_list->proc~set_model_list proc~set_model_list->model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code print_model_list Source Code elemental impure subroutine print_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this integer :: i call this % set_model_list () do i = 1 , size ( this % model_list ) print \"(I1,': ',A)\" , i , trim ( this % model_list ( i )) end do end subroutine print_model_list","tags":"","loc":"proc/print_model_list.html"},{"title":"set_temperature – ForOpenAI","text":"private pure elemental subroutine set_temperature(this, temperature) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: temperature Contents Source Code set_temperature Source Code elemental pure subroutine set_temperature ( this , temperature ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: temperature this % temperature = temperature end subroutine set_temperature","tags":"","loc":"proc/set_temperature.html"},{"title":"set_url – ForOpenAI","text":"private pure elemental subroutine set_url(this, url) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: url Contents Source Code set_url Source Code elemental pure subroutine set_url ( this , url ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url","tags":"","loc":"proc/set_url.html"},{"title":"set_model – ForOpenAI","text":"private pure elemental subroutine set_model(this, model) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: model Contents Source Code set_model Source Code elemental pure subroutine set_model ( this , model ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: model this % model = trim ( model ) end subroutine set_model","tags":"","loc":"proc/set_model.html"},{"title":"init_messages – ForOpenAI","text":"private pure elemental subroutine init_messages(this, n) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n Calls proc~~init_messages~~CallsGraph proc~init_messages foropenai_ChatCompletion::ChatCompletion%init_messages messages messages proc~init_messages->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~init_messages~~CalledByGraph proc~init_messages foropenai_ChatCompletion::ChatCompletion%init_messages proc~conversation foropenai_ChatCompletion::ChatCompletion%conversation proc~conversation->proc~init_messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code init_messages Source Code elemental pure subroutine init_messages ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n if (. not . allocated ( this % messages )) allocate ( this % messages ( n )) end subroutine init_messages","tags":"","loc":"proc/init_messages.html"},{"title":"set_role – ForOpenAI","text":"private pure elemental subroutine set_role(this, role) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role Contents Source Code set_role Source Code elemental pure subroutine set_role ( this , role ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: role this % role = role end subroutine set_role","tags":"","loc":"proc/set_role.html"},{"title":"set_content – ForOpenAI","text":"private pure elemental subroutine set_content(this, content) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: content Contents Source Code set_content Source Code elemental pure subroutine set_content ( this , content ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: content this % content = content end subroutine set_content","tags":"","loc":"proc/set_content.html"},{"title":"set_name – ForOpenAI","text":"private pure elemental subroutine set_name(this, name) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: name Contents Source Code set_name Source Code elemental pure subroutine set_name ( this , name ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: name this % name = name end subroutine set_name","tags":"","loc":"proc/set_name.html"},{"title":"check_chat_completion – ForOpenAI","text":"private impure elemental subroutine check_chat_completion(this, error) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(out) :: error Calls proc~~check_chat_completion~~CallsGraph proc~check_chat_completion foropenai_ChatCompletion::ChatCompletion%check_chat_completion messages messages proc~check_chat_completion->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code check_chat_completion Source Code elemental impure subroutine check_chat_completion ( this , error ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( out ) :: error integer :: i if ( len_trim ( this % api_key ) == 0 ) then print '(A)' , 'Error: api_key is not set.' error = 1 stop end if if ( len_trim ( this % url ) == 0 ) then print '(A)' , 'Error: url is not set.' error = 2 stop end if if ( len_trim ( this % model ) == 0 ) then print '(A)' , 'Error: model is not set.' error = 3 stop end if if (. not . allocated ( this % messages )) then print '(A)' , 'Error: messages is not set.' error = 4 stop end if do i = 1 , size ( this % messages ) if ( len_trim ( this % messages ( i )% role ) == 0 ) then print '(A,I1,A)' , 'Error: messages(' , i , ')%role is not set.' error = 5 stop end if end do do i = 1 , size ( this % messages ) if (. not . allocated ( this % messages ( i )% content )) then print '(A,I1,A)' , 'Error: messages(' , i , ')%content is not set.' error = 6 stop end if end do if ( this % temperature < 0.0 . or . this % temperature > 2.0 ) then print '(A)' , 'Error: temperature must be between 0.0 and 2.0.' error = 7 stop end if if ( this % max_tokens < 1 ) then print '(A)' , 'Error: max_tokens must be greater than 1' error = 8 stop end if if ( len_trim ( this % user_name ) == 0 ) then print '(A)' , 'Error: user_name is not set.' error = 9 stop end if error = 0 end subroutine check_chat_completion","tags":"","loc":"proc/check_chat_completion.html"},{"title":"create_chat_completion – ForOpenAI","text":"private impure elemental subroutine create_chat_completion(this) Uses json_module http proc~~create_chat_completion~~UsesGraph proc~create_chat_completion foropenai_ChatCompletion::ChatCompletion%create_chat_completion http http proc~create_chat_completion->http json_module json_module proc~create_chat_completion->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Calls proc~~create_chat_completion~~CallsGraph proc~create_chat_completion foropenai_ChatCompletion::ChatCompletion%create_chat_completion add add proc~create_chat_completion->add check check proc~create_chat_completion->check get get proc~create_chat_completion->get messages messages proc~create_chat_completion->messages pair_type pair_type proc~create_chat_completion->pair_type print_to_string print_to_string proc~create_chat_completion->print_to_string proc~set_asisstant_response foropenai_ChatCompletion::ChatCompletion%set_asisstant_response proc~create_chat_completion->proc~set_asisstant_response request request proc~create_chat_completion->request proc~set_asisstant_response->messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code create_chat_completion Source Code elemental impure subroutine create_chat_completion ( this ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this character ( len = :), allocatable :: assistant_response character ( len = :), allocatable :: jsonstr type ( pair_type ), allocatable :: req_header (:) type ( response_type ) :: response type ( json_file ) :: json logical :: found integer :: i character ( len = 10 ) :: i_str integer :: error call this % check ( error ) if ( error == 0 ) then req_header = [& pair_type ( 'Content-Type' , 'application/json' ),& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key ) // '' ),& pair_type ( 'OpenAI-Organization' , ' ' // trim ( this % organization ) // '' )& ] call json % add ( 'model' , trim ( this % model )) do i = 1 , size ( this % messages ) write ( i_str , \"(I10)\" ) i call json % add ( 'messages(' // trim ( i_str ) // ').role' , this % messages ( i )% role ) call json % add ( 'messages(' // trim ( i_str ) // ').content' , this % messages ( i )% content ) ! call json%add('messages('//trim(i_str)//').name', this%messages(i)%name) end do call json % add ( 'user' , trim ( this % user_name )) call json % add ( 'temperature' , this % temperature ) call json % add ( 'max_tokens' , this % max_tokens ) call json % print_to_string ( jsonstr ) response = request ( url = trim ( this % url ), method = HTTP_POST , data = jsonstr , header = req_header ) if ( response % ok ) then json = response % content call json % get ( \"choices(1).finish_reason\" , this % finish_reason ) call json % get ( \"usage.prompt_tokens\" , this % usage % prompt_tokens ) call json % get ( \"usage.completion_tokens\" , this % usage % completion_tokens ) call json % get ( \"usage.total_tokens\" , this % usage % total_tokens ) call json % get ( \"choices(1).message.content\" , assistant_response , found = found ) if (. not . found ) then call json % get ( \"error.message\" , jsonstr ) assistant_response = jsonstr end if call this % set_asisstant_response ( response = trim ( assistant_response )) else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end if end subroutine create_chat_completion","tags":"","loc":"proc/create_chat_completion.html"},{"title":"deallocate_role – ForOpenAI","text":"private pure elemental subroutine deallocate_role(this) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this Called by proc~~deallocate_role~~CalledByGraph proc~deallocate_role foropenai_ChatCompletion::ChatCompletion_messages%deallocate_role proc~deallocate_chatcompletion_messages foropenai_ChatCompletion::ChatCompletion_messages%deallocate_ChatCompletion_messages proc~deallocate_chatcompletion_messages->proc~deallocate_role Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_role Source Code elemental pure subroutine deallocate_role ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % role )) deallocate ( this % role ) end subroutine deallocate_role","tags":"","loc":"proc/deallocate_role.html"},{"title":"deallocate_content – ForOpenAI","text":"private pure elemental subroutine deallocate_content(this) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this Called by proc~~deallocate_content~~CalledByGraph proc~deallocate_content foropenai_ChatCompletion::ChatCompletion_messages%deallocate_content proc~deallocate_chatcompletion_messages foropenai_ChatCompletion::ChatCompletion_messages%deallocate_ChatCompletion_messages proc~deallocate_chatcompletion_messages->proc~deallocate_content Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_content Source Code elemental pure subroutine deallocate_content ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % content )) deallocate ( this % content ) end subroutine deallocate_content","tags":"","loc":"proc/deallocate_content.html"},{"title":"deallocate_name – ForOpenAI","text":"private pure elemental subroutine deallocate_name(this) Type Bound ChatCompletion_messages Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this Called by proc~~deallocate_name~~CalledByGraph proc~deallocate_name foropenai_ChatCompletion::ChatCompletion_messages%deallocate_name proc~deallocate_chatcompletion_messages foropenai_ChatCompletion::ChatCompletion_messages%deallocate_ChatCompletion_messages proc~deallocate_chatcompletion_messages->proc~deallocate_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_name Source Code elemental pure subroutine deallocate_name ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % name )) deallocate ( this % name ) end subroutine deallocate_name","tags":"","loc":"proc/deallocate_name.html"},{"title":"deallocate_messages – ForOpenAI","text":"private pure elemental subroutine deallocate_messages(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Called by proc~~deallocate_messages~~CalledByGraph proc~deallocate_messages foropenai_ChatCompletion::ChatCompletion%deallocate_messages proc~deallocate_chatcompletion foropenai_ChatCompletion::ChatCompletion%deallocate_ChatCompletion proc~deallocate_chatcompletion->proc~deallocate_messages Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_messages Source Code elemental pure subroutine deallocate_messages ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % messages )) deallocate ( this % messages ) end subroutine deallocate_messages","tags":"","loc":"proc/deallocate_messages.html"},{"title":"select_model – ForOpenAI","text":"private pure elemental subroutine select_model(this, n) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n Calls proc~~select_model~~CallsGraph proc~select_model foropenai_ChatCompletion::ChatCompletion%select_model model_list model_list proc~select_model->model_list proc~set_model_list foropenai_ChatCompletion::ChatCompletion%set_model_list proc~select_model->proc~set_model_list proc~set_model_list->model_list Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code select_model Source Code elemental pure subroutine select_model ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n call this % set_model_list () this % model = this % model_list ( n ) end subroutine select_model","tags":"","loc":"proc/select_model.html"},{"title":"print_model – ForOpenAI","text":"private impure elemental subroutine print_model(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_model Source Code elemental impure subroutine print_model ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('model: ',A)\" , trim ( this % model ) end subroutine print_model","tags":"","loc":"proc/print_model.html"},{"title":"print_temperature – ForOpenAI","text":"private impure elemental subroutine print_temperature(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_temperature Source Code elemental impure subroutine print_temperature ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('temperature: ',F3.1)\" , this % temperature end subroutine print_temperature","tags":"","loc":"proc/print_temperature.html"},{"title":"set_max_tokens – ForOpenAI","text":"private pure elemental subroutine set_max_tokens(this, max_tokens) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: max_tokens Contents Source Code set_max_tokens Source Code elemental pure subroutine set_max_tokens ( this , max_tokens ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: max_tokens this % max_tokens = max_tokens end subroutine set_max_tokens","tags":"","loc":"proc/set_max_tokens.html"},{"title":"print_max_tokens – ForOpenAI","text":"private impure elemental subroutine print_max_tokens(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_max_tokens Source Code elemental impure subroutine print_max_tokens ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('max tokens: ',I4)\" , this % max_tokens end subroutine print_max_tokens","tags":"","loc":"proc/print_max_tokens.html"},{"title":"set_user_name – ForOpenAI","text":"private pure elemental subroutine set_user_name(this, user_name) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: user_name Contents Source Code set_user_name Source Code elemental pure subroutine set_user_name ( this , user_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: user_name this % user_name = trim ( user_name ) end subroutine set_user_name","tags":"","loc":"proc/set_user_name.html"},{"title":"print_user_name – ForOpenAI","text":"private impure elemental subroutine print_user_name(this) Type Bound ChatCompletion Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this Contents Source Code print_user_name Source Code elemental impure subroutine print_user_name ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('user name: ',A)\" , trim ( this % user_name ) end subroutine print_user_name","tags":"","loc":"proc/print_user_name.html"},{"title":"print_prompt_tokens – ForOpenAI","text":"private impure elemental subroutine print_prompt_tokens(this) Type Bound usage Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Contents Source Code print_prompt_tokens Source Code elemental impure subroutine print_prompt_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('prompt tokens: ',g0)\" , this % prompt_tokens end subroutine print_prompt_tokens","tags":"","loc":"proc/print_prompt_tokens.html"},{"title":"print_completion_tokens – ForOpenAI","text":"private impure elemental subroutine print_completion_tokens(this) Type Bound usage Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Contents Source Code print_completion_tokens Source Code elemental impure subroutine print_completion_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('completion tokens: ',g0)\" , this % completion_tokens end subroutine print_completion_tokens","tags":"","loc":"proc/print_completion_tokens.html"},{"title":"print_total_tokens – ForOpenAI","text":"private impure elemental subroutine print_total_tokens(this) Type Bound usage Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this Contents Source Code print_total_tokens Source Code elemental impure subroutine print_total_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('total tokens: ',g0)\" , this % total_tokens end subroutine print_total_tokens","tags":"","loc":"proc/print_total_tokens.html"},{"title":"set_base_data – ForOpenAI","text":"private impure elemental subroutine set_base_data(this, file_name) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~set_base_data~~CallsGraph proc~set_base_data foropenai_base::openai%set_base_data proc~load_api_key foropenai_base::openai%load_api_key proc~set_base_data->proc~load_api_key proc~load_organization foropenai_base::openai%load_organization proc~set_base_data->proc~load_organization proc~set_api_key_env foropenai_base::openai%set_api_key_env proc~set_base_data->proc~set_api_key_env proc~set_file_name foropenai_base::openai%set_file_name proc~set_base_data->proc~set_file_name proc~set_organization_env foropenai_base::openai%set_organization_env proc~set_base_data->proc~set_organization_env proc~load_api_key->proc~set_file_name destroy destroy proc~load_api_key->destroy get get proc~load_api_key->get initialize initialize proc~load_api_key->initialize load_file load_file proc~load_api_key->load_file proc~load_organization->proc~set_file_name proc~load_organization->destroy proc~load_organization->get proc~load_organization->initialize proc~load_organization->load_file proc~set_api_key foropenai_base::openai%set_api_key proc~set_api_key_env->proc~set_api_key proc~set_organization foropenai_base::openai%set_organization proc~set_organization_env->proc~set_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_base_data Source Code elemental impure subroutine set_base_data ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name integer :: stat_api_key , stat_organization call this % set_file_name ( file_name ) call this % set_api_key_env ( status = stat_api_key ) if ( stat_api_key == 1 ) call this % load_api_key ( file_name ) call this % set_organization_env ( status = stat_organization ) if ( stat_organization == 1 ) call this % load_organization ( file_name ) end subroutine set_base_data","tags":"","loc":"proc/set_base_data.html"},{"title":"set_api_key_env – ForOpenAI","text":"private impure elemental subroutine set_api_key_env(this, status) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status Calls proc~~set_api_key_env~~CallsGraph proc~set_api_key_env foropenai_base::openai%set_api_key_env proc~set_api_key foropenai_base::openai%set_api_key proc~set_api_key_env->proc~set_api_key Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_api_key_env~~CalledByGraph proc~set_api_key_env foropenai_base::openai%set_api_key_env proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_api_key_env Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_api_key_env Source Code elemental impure subroutine set_api_key_env ( this , status ) class ( openai ), intent ( inout ) :: this integer , intent ( out ), optional :: status character ( len = 1024 ) :: tmp call get_environment_variable ( this % api_key_env , tmp , status = status ) if ( status == 0 ) call this % set_api_key ( trim ( tmp )) end subroutine set_api_key_env","tags":"","loc":"proc/set_api_key_env.html"},{"title":"set_organization_env – ForOpenAI","text":"private impure elemental subroutine set_organization_env(this, status) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status Calls proc~~set_organization_env~~CallsGraph proc~set_organization_env foropenai_base::openai%set_organization_env proc~set_organization foropenai_base::openai%set_organization proc~set_organization_env->proc~set_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_organization_env~~CalledByGraph proc~set_organization_env foropenai_base::openai%set_organization_env proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_organization_env Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_organization_env Source Code elemental impure subroutine set_organization_env ( this , status ) class ( openai ), intent ( inout ) :: this integer , intent ( out ), optional :: status character ( len = 1024 ) :: tmp call get_environment_variable ( this % organization_env , tmp , status = status ) if ( status == 0 ) call this % set_organization ( trim ( tmp )) end subroutine set_organization_env","tags":"","loc":"proc/set_organization_env.html"},{"title":"deallocate_openai – ForOpenAI","text":"private pure elemental subroutine deallocate_openai(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Calls proc~~deallocate_openai~~CallsGraph proc~deallocate_openai foropenai_base::openai%deallocate_openai proc~deallocate_api_key foropenai_base::openai%deallocate_api_key proc~deallocate_openai->proc~deallocate_api_key proc~deallocate_file_name foropenai_base::openai%deallocate_file_name proc~deallocate_openai->proc~deallocate_file_name proc~deallocate_organization foropenai_base::openai%deallocate_organization proc~deallocate_openai->proc~deallocate_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_openai Source Code elemental pure subroutine deallocate_openai ( this ) class ( openai ), intent ( inout ) :: this call this % deallocate_api_key () call this % deallocate_organization () call this % deallocate_file_name () end subroutine deallocate_openai","tags":"","loc":"proc/deallocate_openai.html"},{"title":"deallocate_api_key – ForOpenAI","text":"private pure elemental subroutine deallocate_api_key(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Called by proc~~deallocate_api_key~~CalledByGraph proc~deallocate_api_key foropenai_base::openai%deallocate_api_key proc~deallocate_openai foropenai_base::openai%deallocate_openai proc~deallocate_openai->proc~deallocate_api_key Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_api_key Source Code elemental pure subroutine deallocate_api_key ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % api_key )) deallocate ( this % api_key ) end subroutine deallocate_api_key","tags":"","loc":"proc/deallocate_api_key.html"},{"title":"deallocate_organization – ForOpenAI","text":"private pure elemental subroutine deallocate_organization(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Called by proc~~deallocate_organization~~CalledByGraph proc~deallocate_organization foropenai_base::openai%deallocate_organization proc~deallocate_openai foropenai_base::openai%deallocate_openai proc~deallocate_openai->proc~deallocate_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_organization Source Code elemental pure subroutine deallocate_organization ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % organization )) deallocate ( this % organization ) end subroutine deallocate_organization","tags":"","loc":"proc/deallocate_organization.html"},{"title":"deallocate_file_name – ForOpenAI","text":"private pure elemental subroutine deallocate_file_name(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Called by proc~~deallocate_file_name~~CalledByGraph proc~deallocate_file_name foropenai_base::openai%deallocate_file_name proc~deallocate_openai foropenai_base::openai%deallocate_openai proc~deallocate_openai->proc~deallocate_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code deallocate_file_name Source Code elemental pure subroutine deallocate_file_name ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % file_name )) deallocate ( this % file_name ) end subroutine deallocate_file_name","tags":"","loc":"proc/deallocate_file_name.html"},{"title":"load_base_data – ForOpenAI","text":"private impure elemental subroutine load_base_data(this, file_name) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~load_base_data~~CallsGraph proc~load_base_data foropenai_base::openai%load_base_data proc~load_api_key foropenai_base::openai%load_api_key proc~load_base_data->proc~load_api_key proc~load_organization foropenai_base::openai%load_organization proc~load_base_data->proc~load_organization proc~set_file_name foropenai_base::openai%set_file_name proc~load_base_data->proc~set_file_name proc~load_api_key->proc~set_file_name destroy destroy proc~load_api_key->destroy get get proc~load_api_key->get initialize initialize proc~load_api_key->initialize load_file load_file proc~load_api_key->load_file proc~load_organization->proc~set_file_name proc~load_organization->destroy proc~load_organization->get proc~load_organization->initialize proc~load_organization->load_file Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_base_data Source Code elemental impure subroutine load_base_data ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_api_key () call this % load_organization () end subroutine load_base_data","tags":"","loc":"proc/load_base_data.html"},{"title":"set_organization – ForOpenAI","text":"private pure elemental subroutine set_organization(this, organization) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: organization Called by proc~~set_organization~~CalledByGraph proc~set_organization foropenai_base::openai%set_organization proc~set_organization_env foropenai_base::openai%set_organization_env proc~set_organization_env->proc~set_organization proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_organization_env Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_organization Source Code elemental pure subroutine set_organization ( this , organization ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: organization this % organization = trim ( organization ) end subroutine set_organization","tags":"","loc":"proc/set_organization.html"},{"title":"set_api_key – ForOpenAI","text":"private pure elemental subroutine set_api_key(this, api_key) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: api_key Called by proc~~set_api_key~~CalledByGraph proc~set_api_key foropenai_base::openai%set_api_key proc~set_api_key_env foropenai_base::openai%set_api_key_env proc~set_api_key_env->proc~set_api_key proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_api_key_env Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_api_key Source Code elemental pure subroutine set_api_key ( this , api_key ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: api_key this % api_key = trim ( api_key ) end subroutine set_api_key","tags":"","loc":"proc/set_api_key.html"},{"title":"load_api_key – ForOpenAI","text":"private impure elemental subroutine load_api_key(this, file_name) Uses json_module proc~~load_api_key~~UsesGraph proc~load_api_key foropenai_base::openai%load_api_key json_module json_module proc~load_api_key->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name Calls proc~~load_api_key~~CallsGraph proc~load_api_key foropenai_base::openai%load_api_key destroy destroy proc~load_api_key->destroy get get proc~load_api_key->get initialize initialize proc~load_api_key->initialize load_file load_file proc~load_api_key->load_file proc~set_file_name foropenai_base::openai%set_file_name proc~load_api_key->proc~set_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_api_key~~CalledByGraph proc~load_api_key foropenai_base::openai%load_api_key proc~load_base_data foropenai_base::openai%load_base_data proc~load_base_data->proc~load_api_key proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~load_api_key Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_api_key Source Code elemental impure subroutine load_api_key ( this , file_name ) use json_module , only : json_file class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ), optional :: file_name type ( json_file ) :: json if ( present ( file_name )) call this % set_file_name ( file_name ) call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"base.api_key\" , this % api_key ) call json % destroy () end subroutine load_api_key","tags":"","loc":"proc/load_api_key.html"},{"title":"set_file_name – ForOpenAI","text":"private pure elemental subroutine set_file_name(this, file_name) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name Called by proc~~set_file_name~~CalledByGraph proc~set_file_name foropenai_base::openai%set_file_name proc~load_api_key foropenai_base::openai%load_api_key proc~load_api_key->proc~set_file_name proc~load_base_data foropenai_base::openai%load_base_data proc~load_base_data->proc~set_file_name proc~load_base_data->proc~load_api_key proc~load_organization foropenai_base::openai%load_organization proc~load_base_data->proc~load_organization proc~load_organization->proc~set_file_name proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~set_file_name proc~set_base_data->proc~load_api_key proc~set_base_data->proc~load_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_file_name Source Code elemental pure subroutine set_file_name ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name this % file_name = trim ( file_name ) end subroutine set_file_name","tags":"","loc":"proc/set_file_name.html"},{"title":"load_organization – ForOpenAI","text":"private impure elemental subroutine load_organization(this, file_name) Uses json_module proc~~load_organization~~UsesGraph proc~load_organization foropenai_base::openai%load_organization json_module json_module proc~load_organization->json_module Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name Calls proc~~load_organization~~CallsGraph proc~load_organization foropenai_base::openai%load_organization destroy destroy proc~load_organization->destroy get get proc~load_organization->get initialize initialize proc~load_organization->initialize load_file load_file proc~load_organization->load_file proc~set_file_name foropenai_base::openai%set_file_name proc~load_organization->proc~set_file_name Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~load_organization~~CalledByGraph proc~load_organization foropenai_base::openai%load_organization proc~load_base_data foropenai_base::openai%load_base_data proc~load_base_data->proc~load_organization proc~set_base_data foropenai_base::openai%set_base_data proc~set_base_data->proc~load_organization Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code load_organization Source Code elemental impure subroutine load_organization ( this , file_name ) use json_module , only : json_file class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ), optional :: file_name type ( json_file ) :: json if ( present ( file_name )) call this % set_file_name ( file_name ) call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"base.organization\" , this % organization ) call json % destroy () end subroutine load_organization","tags":"","loc":"proc/load_organization.html"},{"title":"print_api_key – ForOpenAI","text":"private impure elemental subroutine print_api_key(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Contents Source Code print_api_key Source Code elemental impure subroutine print_api_key ( this ) class ( openai ), intent ( inout ) :: this print \"('api key: ',A)\" , trim ( this % api_key ) end subroutine print_api_key","tags":"","loc":"proc/print_api_key.html"},{"title":"print_organization – ForOpenAI","text":"private impure elemental subroutine print_organization(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Contents Source Code print_organization Source Code elemental impure subroutine print_organization ( this ) class ( openai ), intent ( inout ) :: this print \"('organization: ',A)\" , trim ( this % organization ) end subroutine print_organization","tags":"","loc":"proc/print_organization.html"},{"title":"print_file_name – ForOpenAI","text":"private impure elemental subroutine print_file_name(this) Type Bound openai Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this Contents Source Code print_file_name Source Code elemental impure subroutine print_file_name ( this ) class ( openai ), intent ( inout ) :: this print \"('file name: ',A)\" , trim ( this % file_name ) end subroutine print_file_name","tags":"","loc":"proc/print_file_name.html"},{"title":"foropenai_ChatCompletion – ForOpenAI","text":"Uses foropenai_base module~~foropenai_chatcompletion~~UsesGraph module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai_base foropenai_base module~foropenai_chatcompletion->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~foropenai_chatcompletion~~UsedByGraph module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai foropenai module~foropenai->module~foropenai_chatcompletion program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Derived Types usage ChatCompletion_messages ChatCompletion Functions get_assistant_response get_user_message Subroutines set_user_message set_asisstant_response print_assistant_response print_user_message deallocate_finish_reason print_finish_reason conversation write_history read_user_message deallocate_ChatCompletion_messages deallocate_ChatCompletion deallocate_url deallocate_model deallocate_user_name load_ChatCompletion_data set_message load_max_tokens load_temperature load_url load_model load_user_name deallocate_model_list set_model_list print_model_list set_temperature set_url set_model init_messages set_role set_content set_name check_chat_completion create_chat_completion deallocate_role deallocate_content deallocate_name deallocate_messages select_model print_model print_temperature set_max_tokens print_max_tokens set_user_name print_user_name print_prompt_tokens print_completion_tokens print_total_tokens Derived Types type, private :: usage Components Type Visibility Attributes Name Initial integer, public :: prompt_tokens = 0 integer, public :: completion_tokens = 0 integer, public :: total_tokens = 0 Type-Bound Procedures procedure\n                    ,                  public\n,                   :: print_prompt_tokens Subroutine procedure\n                    ,                  public\n,                   :: print_completion_tokens Subroutine procedure\n                    ,                  public\n,                   :: print_total_tokens Subroutine type, private :: ChatCompletion_messages Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: role character(len=:), public, allocatable :: content character(len=:), public, allocatable :: name Type-Bound Procedures procedure\n                    ,                  public\n,                   :: deallocate_role Subroutine procedure\n                    ,                  public\n,                   :: deallocate_content Subroutine procedure\n                    ,                  public\n,                   :: deallocate_name Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_ChatCompletion_messages Subroutine procedure\n                    ,                  public\n,                   :: set => set_message Subroutine procedure\n                    ,                  public\n,                   :: set_role Subroutine procedure\n                    ,                  public\n,                   :: set_content Subroutine procedure\n                    ,                  public\n,                   :: set_name Subroutine type, public, extends( openai ) :: ChatCompletion Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' character(len=:), public, allocatable :: url character(len=:), public, allocatable :: model character(len=:), public, allocatable :: user_name character(len=256), public, allocatable :: model_list (:) type( ChatCompletion_messages ), public, allocatable :: messages (:) integer, public :: max_tokens type( usage ), public :: usage real, public :: temperature character(len=:), public, allocatable :: finish_reason Type-Bound Procedures procedure\n                    ,                  public\n,                   :: deallocate_api_key Subroutine procedure\n                    ,                  public\n,                   :: deallocate_organization Subroutine procedure\n                    ,                  public\n,                   :: deallocate_file_name Subroutine procedure\n                    ,                  public\n,                   :: load_api_key Subroutine procedure\n                    ,                  public\n,                   :: load_organization Subroutine procedure\n                    ,                  public\n,                   :: load_base_data Subroutine procedure\n                    ,                  public\n,                   :: print_api_key Subroutine procedure\n                    ,                  public\n,                   :: print_organization Subroutine procedure\n                    ,                  public\n,                   :: print_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_organization Subroutine procedure\n                    ,                  public\n,                   :: set_api_key Subroutine procedure\n                    ,                  public\n,                   :: set_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_api_key_env Subroutine procedure\n                    ,                  public\n,                   :: set_organization_env Subroutine procedure\n                    ,                  public\n,                   :: set_base_data Subroutine procedure\n                    ,                  public\n,                   :: check => check_chat_completion Subroutine procedure\n                    ,                  public\n,                   :: create => create_chat_completion Subroutine procedure\n                    ,                  public\n,                   :: conversation Subroutine procedure\n                    ,                  public\n,                   :: deallocate_messages Subroutine procedure\n                    ,                  public\n,                   :: deallocate_model_list Subroutine procedure\n                    ,                  public\n,                   :: deallocate_url Subroutine procedure\n                    ,                  public\n,                   :: deallocate_model Subroutine procedure\n                    ,                  public\n,                   :: deallocate_user_name Subroutine procedure\n                    ,                  public\n,                   :: deallocate_finish_reason Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_ChatCompletion Subroutine procedure\n                    ,                  public\n,                   :: get_assistant_response Function procedure\n                    ,                  public\n,                   :: get_user_message Function procedure\n                    ,                  public\n,                   :: init_messages Subroutine procedure\n                    ,                  public\n,                   :: load_ChatCompletion_data Subroutine procedure\n                    ,                  public\n,                   :: load_user_name Subroutine procedure\n                    ,                  public\n,                   :: load_url Subroutine procedure\n                    ,                  public\n,                   :: load_model Subroutine procedure\n                    ,                  public\n,                   :: load_temperature Subroutine procedure\n                    ,                  public\n,                   :: load_max_tokens Subroutine procedure\n                    ,                  public\n,                   :: read_user_message Subroutine procedure\n                    ,                  public\n,                   :: print_user_name Subroutine procedure\n                    ,                  public\n,                   :: print_model_list Subroutine procedure\n                    ,                  public\n,                   :: print_model Subroutine procedure\n                    ,                  public\n,                   :: print_temperature Subroutine procedure\n                    ,                  public\n,                   :: print_max_tokens Subroutine procedure\n                    ,                  public\n,                   :: print_user_message Subroutine procedure\n                    ,                  public\n,                   :: print_assistant_response Subroutine procedure\n                    ,                  public\n,                   :: set_user_name Subroutine procedure\n                    ,                  public\n,                   :: set_url Subroutine procedure\n                    ,                  public\n,                   :: set_model Subroutine procedure\n                    ,                  public\n,                   :: set_model_list Subroutine procedure\n                    ,                  public\n,                   :: select_model Subroutine procedure\n                    ,                  public\n,                   :: set_temperature Subroutine procedure\n                    ,                  public\n,                   :: set_max_tokens Subroutine procedure\n                    ,                  public\n,                   :: set_asisstant_response Subroutine procedure\n                    ,                  public\n,                   :: set_user_message Subroutine procedure\n                    ,                  public\n,                   :: write_history Subroutine procedure\n                    ,                  public\n,                   :: print_finish_reason Subroutine Functions private pure function get_assistant_response (this) result(response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable private pure function get_user_message (this) result(message) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(in) :: this Return Value character(len=:), allocatable Subroutines private pure elemental subroutine set_user_message (this, message) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: message private pure elemental subroutine set_asisstant_response (this, response) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: response private impure elemental subroutine print_assistant_response (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_user_message (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_finish_reason (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_finish_reason (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine conversation (this, config_file, input_file, output_file, inputfile_command, exit_command) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: config_file character(len=*), intent(in) :: input_file character(len=*), intent(in) :: output_file character(len=*), intent(in) :: inputfile_command character(len=*), intent(in) :: exit_command private impure elemental subroutine write_history (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name private impure elemental subroutine read_user_message (this, file_name, command) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in) :: command private pure elemental subroutine deallocate_ChatCompletion_messages (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this private pure elemental subroutine deallocate_ChatCompletion (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_ChatCompletion_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: file_name private pure elemental subroutine set_message (this, role, content, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role character(len=*), intent(in) :: content character(len=*), intent(in), optional :: name private impure elemental subroutine load_max_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_url (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine load_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine set_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_model_list (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine set_temperature (this, temperature) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this real, intent(in) :: temperature private pure elemental subroutine set_url (this, url) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: url private pure elemental subroutine set_model (this, model) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: model private pure elemental subroutine init_messages (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n private pure elemental subroutine set_role (this, role) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: role private pure elemental subroutine set_content (this, content) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: content private pure elemental subroutine set_name (this, name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this character(len=*), intent(in) :: name private impure elemental subroutine check_chat_completion (this, error) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(out) :: error private impure elemental subroutine create_chat_completion (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine deallocate_role (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this private pure elemental subroutine deallocate_content (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this private pure elemental subroutine deallocate_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion_messages ), intent(inout) :: this private pure elemental subroutine deallocate_messages (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine select_model (this, n) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: n private impure elemental subroutine print_model (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_temperature (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine set_max_tokens (this, max_tokens) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this integer, intent(in) :: max_tokens private impure elemental subroutine print_max_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private pure elemental subroutine set_user_name (this, user_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this character(len=*), intent(in) :: user_name private impure elemental subroutine print_user_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( ChatCompletion ), intent(inout) :: this private impure elemental subroutine print_prompt_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this private impure elemental subroutine print_completion_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this private impure elemental subroutine print_total_tokens (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( usage ), intent(inout) :: this","tags":"","loc":"module/foropenai_chatcompletion.html"},{"title":"foropenai_base – ForOpenAI","text":"Used by module~~foropenai_base~~UsedByGraph module~foropenai_base foropenai_base module~foropenai foropenai module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_chatcompletion->module~foropenai_base program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Derived Types openai Subroutines set_base_data set_api_key_env set_organization_env deallocate_openai deallocate_api_key deallocate_organization deallocate_file_name load_base_data set_organization set_api_key load_api_key set_file_name load_organization print_api_key print_organization print_file_name Derived Types type, public :: openai Components Type Visibility Attributes Name Initial character(len=:), public, allocatable :: organization character(len=:), public, allocatable :: api_key character(len=:), public, allocatable :: file_name character(len=14), public :: api_key_env = 'OPENAI_API_KEY' character(len=10), public :: organization_env = 'OPENAI_ORG' Type-Bound Procedures procedure\n                    ,                  public\n,                   :: deallocate_api_key Subroutine procedure\n                    ,                  public\n,                   :: deallocate_organization Subroutine procedure\n                    ,                  public\n,                   :: deallocate_file_name Subroutine procedure\n                    ,                  public\n,                   :: finalize => deallocate_openai Subroutine procedure\n                    ,                  public\n,                   :: load_api_key Subroutine procedure\n                    ,                  public\n,                   :: load_organization Subroutine procedure\n                    ,                  public\n,                   :: load_base_data Subroutine procedure\n                    ,                  public\n,                   :: print_api_key Subroutine procedure\n                    ,                  public\n,                   :: print_organization Subroutine procedure\n                    ,                  public\n,                   :: print_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_organization Subroutine procedure\n                    ,                  public\n,                   :: set_api_key Subroutine procedure\n                    ,                  public\n,                   :: set_file_name Subroutine procedure\n                    ,                  public\n,                   :: set_api_key_env Subroutine procedure\n                    ,                  public\n,                   :: set_organization_env Subroutine procedure\n                    ,                  public\n,                   :: set_base_data Subroutine Subroutines private impure elemental subroutine set_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name private impure elemental subroutine set_api_key_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status private impure elemental subroutine set_organization_env (this, status) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this integer, intent(out), optional :: status private pure elemental subroutine deallocate_openai (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private pure elemental subroutine deallocate_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private pure elemental subroutine deallocate_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private pure elemental subroutine deallocate_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private impure elemental subroutine load_base_data (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name private pure elemental subroutine set_organization (this, organization) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: organization private pure elemental subroutine set_api_key (this, api_key) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: api_key private impure elemental subroutine load_api_key (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name private pure elemental subroutine set_file_name (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in) :: file_name private impure elemental subroutine load_organization (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this character(len=*), intent(in), optional :: file_name private impure elemental subroutine print_api_key (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private impure elemental subroutine print_organization (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this private impure elemental subroutine print_file_name (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( openai ), intent(inout) :: this","tags":"","loc":"module/foropenai_base.html"},{"title":"foropenai – ForOpenAI","text":"Uses foropenai_ChatCompletion foropenai_base module~~foropenai~~UsesGraph module~foropenai foropenai module~foropenai_base foropenai_base module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_chatcompletion->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~foropenai~~UsedByGraph module~foropenai foropenai program~test_chatcompletion test_ChatCompletion program~test_chatcompletion->module~foropenai Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents None","tags":"","loc":"module/foropenai.html"},{"title":"test_ChatCompletion – ForOpenAI","text":"Uses foropenai program~~test_chatcompletion~~UsesGraph program~test_chatcompletion test_ChatCompletion module~foropenai foropenai program~test_chatcompletion->module~foropenai module~foropenai_base foropenai_base module~foropenai->module~foropenai_base module~foropenai_chatcompletion foropenai_ChatCompletion module~foropenai->module~foropenai_chatcompletion module~foropenai_chatcompletion->module~foropenai_base Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Variables chat Source Code test_ChatCompletion Variables Type Attributes Name Initial type( ChatCompletion ) :: chat Source Code program test_ChatCompletion use foropenai , only : ChatCompletion implicit none type ( ChatCompletion ) :: chat call chat % set_base_data ( 'foropenai.json' ) call chat % print_file_name () call chat % print_api_key () call chat % print_organization () call chat % set_url ( url = 'https://api.openai.com/v1/chat/completions' ) call chat % print_model_list () call chat % select_model ( 5 ) call chat % print_model () call chat % set_max_tokens ( max_tokens = 1 ) call chat % print_max_tokens () call chat % set_temperature ( temperature = 0.0 ) call chat % print_temperature () call chat % set_user_name ( user_name = 'Ali' ) call chat % print_user_name () call chat % init_messages ( n = 3 ) call chat % messages ( 1 )% set_role ( role = 'system' ) call chat % messages ( 1 )% set_content ( content = 'You are a helpful assistant.' ) call chat % messages ( 2 )% set_role ( role = 'user' ) call chat % messages ( 2 )% set_content ( content = 'Hello?' ) call chat % messages ( 3 )% set_role ( role = 'assistant' ) call chat % messages ( 3 )% set_content ( content = '' ) call chat % print_user_message () call chat % create () call chat % print_assistant_response () call chat % usage % print_prompt_tokens () call chat % usage % print_completion_tokens () call chat % usage % print_total_tokens () call chat % finalize () end program test_ChatCompletion","tags":"","loc":"program/test_chatcompletion.html"},{"title":"foropenai_ChatCompletion.f90 – ForOpenAI","text":"This file depends on sourcefile~~foropenai_chatcompletion.f90~~EfferentGraph sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~foropenai_chatcompletion.f90~~AfferentGraph sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai_ChatCompletion Source Code foropenai_ChatCompletion.f90 Source Code module foropenai_ChatCompletion use foropenai_base implicit none private public :: ChatCompletion !=============================================================================== !> author: Seyed Ali Ghasemi type usage integer :: prompt_tokens = 0 integer :: completion_tokens = 0 integer :: total_tokens = 0 contains procedure :: print_prompt_tokens procedure :: print_completion_tokens procedure :: print_total_tokens end type usage !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi type :: ChatCompletion_messages character ( len = :), allocatable :: role character ( len = :), allocatable :: content character ( len = :), allocatable :: name contains procedure :: deallocate_role procedure :: deallocate_content procedure :: deallocate_name procedure :: finalize => deallocate_ChatCompletion_messages procedure :: set => set_message procedure :: set_role procedure :: set_content procedure :: set_name end type ChatCompletion_messages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi type , extends ( openai ) :: ChatCompletion character ( len = :), allocatable :: url character ( len = :), allocatable :: model character ( len = :), allocatable :: user_name character ( len = 256 ), allocatable :: model_list (:) type ( ChatCompletion_messages ), allocatable :: messages (:) integer :: max_tokens type ( usage ) :: usage real :: temperature character ( len = :), allocatable :: finish_reason contains procedure :: check => check_chat_completion procedure :: create => create_chat_completion procedure :: conversation procedure :: deallocate_messages procedure :: deallocate_model_list procedure :: deallocate_url procedure :: deallocate_model procedure :: deallocate_user_name procedure :: deallocate_finish_reason procedure :: finalize => deallocate_ChatCompletion procedure :: get_assistant_response procedure :: get_user_message procedure :: init_messages procedure :: load_ChatCompletion_data procedure :: load_user_name procedure :: load_url procedure :: load_model procedure :: load_temperature procedure :: load_max_tokens procedure :: read_user_message procedure :: print_user_name procedure :: print_model_list procedure :: print_model procedure :: print_temperature procedure :: print_max_tokens procedure :: print_user_message procedure :: print_assistant_response procedure :: set_user_name procedure :: set_url procedure :: set_model procedure :: set_model_list procedure :: select_model procedure :: set_temperature procedure :: set_max_tokens procedure :: set_asisstant_response procedure :: set_user_message procedure :: write_history procedure :: print_finish_reason end type ChatCompletion !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_user_message ( this , message ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: message integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then call this % messages ( i )% set_content ( content = message ) end if end do end subroutine set_user_message !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_asisstant_response ( this , response ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: response integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then call this % messages ( i )% set_content ( content = response ) end if end do end subroutine set_asisstant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure function get_assistant_response ( this ) result ( response ) class ( ChatCompletion ), intent ( in ) :: this character ( len = :), allocatable :: response integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then response = this % messages ( i )% content end if end do end function !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure function get_user_message ( this ) result ( message ) class ( ChatCompletion ), intent ( in ) :: this character ( len = :), allocatable :: message integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then message = this % messages ( i )% content end if end do end function !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_assistant_response ( this ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'assistant' ) then print \"(A,': ',A)\" , colorize ( \"ChatGPT\" , color_bg = 'blue' ), this % messages ( i )% content end if end do end subroutine print_assistant_response !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_user_message ( this ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this integer :: i do i = 1 , size ( this % messages ) if ( this % messages ( i )% role == 'user' ) then print \"(A,': ',A)\" , colorize ( trim ( this % user_name ), color_bg = 'green' ), this % messages ( i )% content end if end do end subroutine print_user_message !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_finish_reason ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % finish_reason )) deallocate ( this % finish_reason ) end subroutine deallocate_finish_reason !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_finish_reason ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('finish reason: ',A)\" , trim ( this % finish_reason ) end subroutine print_finish_reason !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine conversation ( this , config_file , input_file , output_file , inputfile_command , exit_command ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: config_file character ( len =* ), intent ( in ) :: input_file character ( len =* ), intent ( in ) :: output_file character ( len =* ), intent ( in ) :: inputfile_command character ( len =* ), intent ( in ) :: exit_command call this % set_base_data ( config_file ) call this % load_ChatCompletion_data ( config_file ) call this % init_messages ( n = 3 ) call this % messages ( 1 )% set ( role = 'system' , content = 'You are a helpful assistant.' ) call this % messages ( 2 )% set ( role = 'assistant' , content = '' ) call this % messages ( 3 )% set_role ( role = 'user' ) do call this % read_user_message ( file_name = trim ( input_file ), command = trim ( inputfile_command )) if ( trim ( this % get_user_message ()) == trim ( exit_command )) exit call this % create () call this % set_asisstant_response ( response = this % get_assistant_response ()) call this % print_assistant_response () call this % write_history ( file_name = trim ( output_file )) end do call this % usage % print_prompt_tokens () call this % usage % print_completion_tokens () call this % usage % print_total_tokens () end subroutine conversation !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine write_history ( this , file_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name integer :: iounit open ( newunit = iounit , file = trim ( file_name ), status = 'unknown' , access = 'append' , action = 'write' ) write ( iounit , \"(A,': ',A)\" ) this % user_name , this % get_user_message () write ( iounit , \"('ChatGPT: ',A)\" ) this % get_assistant_response () close ( iounit ) end subroutine write_history !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine read_user_message ( this , file_name , command ) use face , only : colorize class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name character ( len =* ), intent ( in ) :: command character ( len = :), allocatable :: message character ( len = :), allocatable :: whole_message character ( len = 1000000 ) :: tmp integer :: iounit , iostat write ( * , \"(A,': ')\" , advance = 'no' ) colorize ( trim ( this % user_name ), color_bg = 'green' ) read * , tmp message = trim ( tmp ) if ( trim ( message ) == trim ( command )) then open ( newunit = iounit , file = trim ( file_name ), status = 'old' , action = 'read' ) whole_message = '' do read ( iounit , '(A)' , iostat = iostat ) tmp if ( iostat /= 0 ) exit whole_message = trim ( whole_message ) // trim ( tmp ) // new_line ( ' ' ) end do close ( iounit ) call this % set_user_message ( message = whole_message ) else call this % set_user_message ( message = message ) end if end subroutine read_user_message !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_ChatCompletion_messages ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this call this % deallocate_role () call this % deallocate_content () call this % deallocate_name () end subroutine deallocate_ChatCompletion_messages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_ChatCompletion ( this ) class ( ChatCompletion ), intent ( inout ) :: this call this % deallocate_messages () call this % deallocate_model_list () call this % deallocate_url () call this % deallocate_model () call this % deallocate_user_name () call this % deallocate_finish_reason () end subroutine deallocate_ChatCompletion !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_url ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % url )) deallocate ( this % url ) end subroutine deallocate_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_model ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % model )) deallocate ( this % model ) end subroutine deallocate_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_user_name ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % user_name )) deallocate ( this % user_name ) end subroutine deallocate_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_ChatCompletion_data ( this , file_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_url () call this % load_model () call this % load_user_name () call this % load_temperature () call this % load_max_tokens () end subroutine load_ChatCompletion_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_message ( this , role , content , name ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: role character ( len =* ), intent ( in ) :: content character ( len =* ), optional , intent ( in ) :: name this % role = trim ( role ) this % content = trim ( content ) if ( present ( name )) this % name = trim ( name ) end subroutine set_message !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_max_tokens ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.max_tokens\" , this % max_tokens ) end subroutine load_max_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_temperature ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.temperature\" , this % temperature ) end subroutine load_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_url ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.url\" , this % url ) end subroutine load_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_model ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.model\" , this % model ) end subroutine load_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_user_name ( this ) use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this type ( json_file ) :: json call json % load_file ( trim ( this % file_name )) call json % get ( \"ChatCompletion.user_name\" , this % user_name ) end subroutine load_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % model_list )) deallocate ( this % model_list ) end subroutine deallocate_model_list !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this if (. not . allocated ( this % model_list )) allocate ( this % model_list ( 8 )) this % model_list ( 1 ) = trim ( 'gpt-4' ) this % model_list ( 2 ) = trim ( 'gpt-4-0613' ) this % model_list ( 3 ) = trim ( 'gpt-4-32k' ) this % model_list ( 4 ) = trim ( 'gpt-4-32k-0613' ) this % model_list ( 5 ) = trim ( 'gpt-3.5-turbo' ) this % model_list ( 6 ) = trim ( 'gpt-3.5-turbo-0613' ) this % model_list ( 7 ) = trim ( 'gpt-3.5-turbo-16k' ) this % model_list ( 8 ) = trim ( 'gpt-3.5-turbo-16k-0613' ) end subroutine set_model_list !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_model_list ( this ) class ( ChatCompletion ), intent ( inout ) :: this integer :: i call this % set_model_list () do i = 1 , size ( this % model_list ) print \"(I1,': ',A)\" , i , trim ( this % model_list ( i )) end do end subroutine print_model_list !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_temperature ( this , temperature ) class ( ChatCompletion ), intent ( inout ) :: this real , intent ( in ) :: temperature this % temperature = temperature end subroutine set_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_url ( this , url ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: url this % url = trim ( url ) end subroutine set_url !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_model ( this , model ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: model this % model = trim ( model ) end subroutine set_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine init_messages ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n if (. not . allocated ( this % messages )) allocate ( this % messages ( n )) end subroutine init_messages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_role ( this , role ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: role this % role = role end subroutine set_role !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_content ( this , content ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: content this % content = content end subroutine set_content !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_name ( this , name ) class ( ChatCompletion_messages ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: name this % name = name end subroutine set_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine check_chat_completion ( this , error ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( out ) :: error integer :: i if ( len_trim ( this % api_key ) == 0 ) then print '(A)' , 'Error: api_key is not set.' error = 1 stop end if if ( len_trim ( this % url ) == 0 ) then print '(A)' , 'Error: url is not set.' error = 2 stop end if if ( len_trim ( this % model ) == 0 ) then print '(A)' , 'Error: model is not set.' error = 3 stop end if if (. not . allocated ( this % messages )) then print '(A)' , 'Error: messages is not set.' error = 4 stop end if do i = 1 , size ( this % messages ) if ( len_trim ( this % messages ( i )% role ) == 0 ) then print '(A,I1,A)' , 'Error: messages(' , i , ')%role is not set.' error = 5 stop end if end do do i = 1 , size ( this % messages ) if (. not . allocated ( this % messages ( i )% content )) then print '(A,I1,A)' , 'Error: messages(' , i , ')%content is not set.' error = 6 stop end if end do if ( this % temperature < 0.0 . or . this % temperature > 2.0 ) then print '(A)' , 'Error: temperature must be between 0.0 and 2.0.' error = 7 stop end if if ( this % max_tokens < 1 ) then print '(A)' , 'Error: max_tokens must be greater than 1' error = 8 stop end if if ( len_trim ( this % user_name ) == 0 ) then print '(A)' , 'Error: user_name is not set.' error = 9 stop end if error = 0 end subroutine check_chat_completion !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine create_chat_completion ( this ) use http , only : response_type , request , HTTP_POST , pair_type use json_module , only : json_file class ( ChatCompletion ), intent ( inout ) :: this character ( len = :), allocatable :: assistant_response character ( len = :), allocatable :: jsonstr type ( pair_type ), allocatable :: req_header (:) type ( response_type ) :: response type ( json_file ) :: json logical :: found integer :: i character ( len = 10 ) :: i_str integer :: error call this % check ( error ) if ( error == 0 ) then req_header = [& pair_type ( 'Content-Type' , 'application/json' ),& pair_type ( 'Authorization' , 'Bearer ' // trim ( this % api_key ) // '' ),& pair_type ( 'OpenAI-Organization' , ' ' // trim ( this % organization ) // '' )& ] call json % add ( 'model' , trim ( this % model )) do i = 1 , size ( this % messages ) write ( i_str , \"(I10)\" ) i call json % add ( 'messages(' // trim ( i_str ) // ').role' , this % messages ( i )% role ) call json % add ( 'messages(' // trim ( i_str ) // ').content' , this % messages ( i )% content ) ! call json%add('messages('//trim(i_str)//').name', this%messages(i)%name) end do call json % add ( 'user' , trim ( this % user_name )) call json % add ( 'temperature' , this % temperature ) call json % add ( 'max_tokens' , this % max_tokens ) call json % print_to_string ( jsonstr ) response = request ( url = trim ( this % url ), method = HTTP_POST , data = jsonstr , header = req_header ) if ( response % ok ) then json = response % content call json % get ( \"choices(1).finish_reason\" , this % finish_reason ) call json % get ( \"usage.prompt_tokens\" , this % usage % prompt_tokens ) call json % get ( \"usage.completion_tokens\" , this % usage % completion_tokens ) call json % get ( \"usage.total_tokens\" , this % usage % total_tokens ) call json % get ( \"choices(1).message.content\" , assistant_response , found = found ) if (. not . found ) then call json % get ( \"error.message\" , jsonstr ) assistant_response = jsonstr end if call this % set_asisstant_response ( response = trim ( assistant_response )) else print '(A)' , 'Sorry, an error occurred while processing your request.' print '(A)' , 'Error message:' , response % err_msg end if end if end subroutine create_chat_completion !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_role ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % role )) deallocate ( this % role ) end subroutine deallocate_role !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_content ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % content )) deallocate ( this % content ) end subroutine deallocate_content !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_name ( this ) class ( ChatCompletion_messages ), intent ( inout ) :: this if ( allocated ( this % name )) deallocate ( this % name ) end subroutine deallocate_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_messages ( this ) class ( ChatCompletion ), intent ( inout ) :: this if ( allocated ( this % messages )) deallocate ( this % messages ) end subroutine deallocate_messages !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine select_model ( this , n ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: n call this % set_model_list () this % model = this % model_list ( n ) end subroutine select_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_model ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('model: ',A)\" , trim ( this % model ) end subroutine print_model !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_temperature ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('temperature: ',F3.1)\" , this % temperature end subroutine print_temperature !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_max_tokens ( this , max_tokens ) class ( ChatCompletion ), intent ( inout ) :: this integer , intent ( in ) :: max_tokens this % max_tokens = max_tokens end subroutine set_max_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_max_tokens ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('max tokens: ',I4)\" , this % max_tokens end subroutine print_max_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_user_name ( this , user_name ) class ( ChatCompletion ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: user_name this % user_name = trim ( user_name ) end subroutine set_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_user_name ( this ) class ( ChatCompletion ), intent ( inout ) :: this print \"('user name: ',A)\" , trim ( this % user_name ) end subroutine print_user_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_prompt_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('prompt tokens: ',g0)\" , this % prompt_tokens end subroutine print_prompt_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_completion_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('completion tokens: ',g0)\" , this % completion_tokens end subroutine print_completion_tokens !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_total_tokens ( this ) class ( usage ), intent ( inout ) :: this print \"('total tokens: ',g0)\" , this % total_tokens end subroutine print_total_tokens !=============================================================================== end module foropenai_ChatCompletion","tags":"","loc":"sourcefile/foropenai_chatcompletion.f90.html"},{"title":"foropenai_base.f90 – ForOpenAI","text":"Files dependent on this one sourcefile~~foropenai_base.f90~~AfferentGraph sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai_base Source Code foropenai_base.f90 Source Code module foropenai_base implicit none private public :: openai !=============================================================================== !> author: Seyed Ali Ghasemi type openai character ( len = :), allocatable :: organization character ( len = :), allocatable :: api_key character ( len = :), allocatable :: file_name character ( len = 14 ) :: api_key_env = 'OPENAI_API_KEY' character ( len = 10 ) :: organization_env = 'OPENAI_ORG' contains procedure :: deallocate_api_key procedure :: deallocate_organization procedure :: deallocate_file_name procedure :: finalize => deallocate_openai procedure :: load_api_key procedure :: load_organization procedure :: load_base_data procedure :: print_api_key procedure :: print_organization procedure :: print_file_name procedure :: set_organization procedure :: set_api_key procedure :: set_file_name procedure :: set_api_key_env procedure :: set_organization_env procedure :: set_base_data end type openai !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_base_data ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name integer :: stat_api_key , stat_organization call this % set_file_name ( file_name ) call this % set_api_key_env ( status = stat_api_key ) if ( stat_api_key == 1 ) call this % load_api_key ( file_name ) call this % set_organization_env ( status = stat_organization ) if ( stat_organization == 1 ) call this % load_organization ( file_name ) end subroutine set_base_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_api_key_env ( this , status ) class ( openai ), intent ( inout ) :: this integer , intent ( out ), optional :: status character ( len = 1024 ) :: tmp call get_environment_variable ( this % api_key_env , tmp , status = status ) if ( status == 0 ) call this % set_api_key ( trim ( tmp )) end subroutine set_api_key_env !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine set_organization_env ( this , status ) class ( openai ), intent ( inout ) :: this integer , intent ( out ), optional :: status character ( len = 1024 ) :: tmp call get_environment_variable ( this % organization_env , tmp , status = status ) if ( status == 0 ) call this % set_organization ( trim ( tmp )) end subroutine set_organization_env !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_openai ( this ) class ( openai ), intent ( inout ) :: this call this % deallocate_api_key () call this % deallocate_organization () call this % deallocate_file_name () end subroutine deallocate_openai !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_api_key ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % api_key )) deallocate ( this % api_key ) end subroutine deallocate_api_key !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_organization ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % organization )) deallocate ( this % organization ) end subroutine deallocate_organization !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_file_name ( this ) class ( openai ), intent ( inout ) :: this if ( allocated ( this % file_name )) deallocate ( this % file_name ) end subroutine deallocate_file_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_base_data ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name call this % set_file_name ( trim ( file_name )) call this % load_api_key () call this % load_organization () end subroutine load_base_data !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_organization ( this , organization ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: organization this % organization = trim ( organization ) end subroutine set_organization !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_api_key ( this , api_key ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: api_key this % api_key = trim ( api_key ) end subroutine set_api_key !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_api_key ( this , file_name ) use json_module , only : json_file class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ), optional :: file_name type ( json_file ) :: json if ( present ( file_name )) call this % set_file_name ( file_name ) call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"base.api_key\" , this % api_key ) call json % destroy () end subroutine load_api_key !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_file_name ( this , file_name ) class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ) :: file_name this % file_name = trim ( file_name ) end subroutine set_file_name !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine load_organization ( this , file_name ) use json_module , only : json_file class ( openai ), intent ( inout ) :: this character ( len =* ), intent ( in ), optional :: file_name type ( json_file ) :: json if ( present ( file_name )) call this % set_file_name ( file_name ) call json % initialize () call json % load_file ( trim ( this % file_name )) call json % get ( \"base.organization\" , this % organization ) call json % destroy () end subroutine load_organization !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_api_key ( this ) class ( openai ), intent ( inout ) :: this print \"('api key: ',A)\" , trim ( this % api_key ) end subroutine print_api_key !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_organization ( this ) class ( openai ), intent ( inout ) :: this print \"('organization: ',A)\" , trim ( this % organization ) end subroutine print_organization !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental impure subroutine print_file_name ( this ) class ( openai ), intent ( inout ) :: this print \"('file name: ',A)\" , trim ( this % file_name ) end subroutine print_file_name !=============================================================================== end module foropenai_base","tags":"","loc":"sourcefile/foropenai_base.f90.html"},{"title":"foropenai.f90 – ForOpenAI","text":"This file depends on sourcefile~~foropenai.f90~~EfferentGraph sourcefile~foropenai.f90 foropenai.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~foropenai.f90~~AfferentGraph sourcefile~foropenai.f90 foropenai.f90 sourcefile~test1.f90 test1.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Modules foropenai Source Code foropenai.f90 Source Code module foropenai use foropenai_base use foropenai_ChatCompletion end module foropenai","tags":"","loc":"sourcefile/foropenai.f90.html"},{"title":"test1.f90 – ForOpenAI","text":"This file depends on sourcefile~~test1.f90~~EfferentGraph sourcefile~test1.f90 test1.f90 sourcefile~foropenai.f90 foropenai.f90 sourcefile~test1.f90->sourcefile~foropenai.f90 sourcefile~foropenai_base.f90 foropenai_base.f90 sourcefile~foropenai.f90->sourcefile~foropenai_base.f90 sourcefile~foropenai_chatcompletion.f90 foropenai_ChatCompletion.f90 sourcefile~foropenai.f90->sourcefile~foropenai_chatcompletion.f90 sourcefile~foropenai_chatcompletion.f90->sourcefile~foropenai_base.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Programs test_ChatCompletion Source Code test1.f90 Source Code program test_ChatCompletion use foropenai , only : ChatCompletion implicit none type ( ChatCompletion ) :: chat call chat % set_base_data ( 'foropenai.json' ) call chat % print_file_name () call chat % print_api_key () call chat % print_organization () call chat % set_url ( url = 'https://api.openai.com/v1/chat/completions' ) call chat % print_model_list () call chat % select_model ( 5 ) call chat % print_model () call chat % set_max_tokens ( max_tokens = 1 ) call chat % print_max_tokens () call chat % set_temperature ( temperature = 0.0 ) call chat % print_temperature () call chat % set_user_name ( user_name = 'Ali' ) call chat % print_user_name () call chat % init_messages ( n = 3 ) call chat % messages ( 1 )% set_role ( role = 'system' ) call chat % messages ( 1 )% set_content ( content = 'You are a helpful assistant.' ) call chat % messages ( 2 )% set_role ( role = 'user' ) call chat % messages ( 2 )% set_content ( content = 'Hello?' ) call chat % messages ( 3 )% set_role ( role = 'assistant' ) call chat % messages ( 3 )% set_content ( content = '' ) call chat % print_user_message () call chat % create () call chat % print_assistant_response () call chat % usage % print_prompt_tokens () call chat % usage % print_completion_tokens () call chat % usage % print_total_tokens () call chat % finalize () end program test_ChatCompletion","tags":"","loc":"sourcefile/test1.f90.html"}]}